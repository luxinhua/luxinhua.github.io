<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XINHUALU&#39;S BLOG</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-02-08T18:30:31.676Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>XinHua Lu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>面试知识点</title>
    <link href="http://example.com/2021/02/09/interview/interview/"/>
    <id>http://example.com/2021/02/09/interview/interview/</id>
    <published>2021-02-09T00:00:00.000Z</published>
    <updated>2021-02-08T18:30:31.676Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h3><hr><pre><code>中断分为上半部和下半部，上半部关中断；下半部开中断，处理可以延迟的事情。下半部有workqueue/softirq/tasklet三种方式顶半部，硬件作答，快速响应底半部，延时执行</code></pre><hr><h3 id="local-irq-disable和disable-irq区别："><a href="#local-irq-disable和disable-irq区别：" class="headerlink" title="local_irq_disable和disable_irq区别："></a>local_irq_disable和disable_irq区别：</h3><hr><hr><h3 id="workquence"><a href="#workquence" class="headerlink" title="workquence"></a>workquence</h3><hr><pre><code>工作队列允许重新调度甚至是睡眠, workqueue_struct d-&gt;work    INIT_WORK(&amp;d-&gt;work, work_task);schedule_work(&amp;d-&gt;work); 指定cpudestroy_workqueue()</code></pre><hr><h3 id="softirq"><a href="#softirq" class="headerlink" title="softirq"></a>softirq</h3><hr><pre><code>无法sleep静态定义软中断数组softirq_vec, 存放各自的中断处理函数softirq_action    每个CPU都有一个这样的数组，谁发起，谁执行    内核限制32个， 如mac_tx, mac_rx, tasklet, 定时器使用：     void open_softirq(int nr, void (*action)(struct softirq_action *))   添加中断回调函数。    raise_softirq() 触发软中断 ，就是在pre-cpu变量__softirq_pending上置位。然后local_softirq_pending() 检测那些pending， 执行invoke_softirq()        如果多个softirq pending, 按数组顺序执行。    网络收发软中断有超时机制，和次数限制。</code></pre><hr><h3 id="tasklet-演示40ms"><a href="#tasklet-演示40ms" class="headerlink" title="tasklet 演示40ms"></a>tasklet 演示40ms</h3><hr><pre><code>无法睡眠pre-cpu 维护一tasklet list , tasklet一旦挂入一个cpu的tasklet表，就只会在该cpu上运行，哪怕被重新调度使用：     DECLARE_TASKLET(&amp;port-&gt;tasklet, callback, data)    tasklet_schedule(&amp;port-&gt;tasklet);    tasklet_kill(&amp;port-&gt;tasklet);        tasklet_disable(&amp;port-&gt;tasklet);只用于disable tasklet , 而local_bh_disable/enable 是disable bh 操作 softirq/tasklet.        tasklet_enable(&amp;port-&gt;tasklet);</code></pre><hr><h3 id="runqueue"><a href="#runqueue" class="headerlink" title="runqueue"></a>runqueue</h3><hr><p>linux 就绪队列struct runqueue，每个CPU都有一个执行队列，队列中以work的形式执行每个任务。</p><hr><h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><hr><p>进程切换，有能力挂起正在CPU上执行的进程，和恢复执行。<br>进程调度由schedule()函数实现</p><hr><h3 id="complete-进程同步机制"><a href="#complete-进程同步机制" class="headerlink" title="complete 进程同步机制"></a>complete 进程同步机制</h3><hr><pre><code>struct completion &#123;    unsigned int done;/*用于同步的原子量*/    类似信号量，等待一个减1     wait_queue_head_t wait;/*等待事件队列*/&#125;;</code></pre><p>用法：<br>    这个变量可以静态地声明和初始化：<br>    DECLARE_COMPLETION(my_comp);<br>    或者动态初始化：<br>    struct completion my_comp;<br>    init_completion(&amp;my_comp);<br>    wait_for_completion(struct completion *comp);等待其他事件完成 ， 将当前进程放入wait quence尾，sch超时唤醒后，循环检测done是否可用<br>        其他事件完成后调用complete(struct completion *comp); 唤醒等待该事件的所在进程</p><hr><h3 id="notify-机制，-模块之间通信"><a href="#notify-机制，-模块之间通信" class="headerlink" title="notify 机制， 模块之间通信"></a>notify 机制， 模块之间通信</h3><hr><pre><code>struct notifier_block&#123;    int (*notifier_call)(struct notifier_block *self, unsigned long, void *);    struct notifier_block *next;    int priority;&#125;;notifier_chain_registernotifier_call_chain</code></pre><hr><h3 id="devicefs"><a href="#devicefs" class="headerlink" title="devicefs"></a>devicefs</h3><hr><pre><code>DEVICE_ATTR  需要绑定设备struct device_attribute &#123;    struct attribute    attr;    ssize_t (*show)(struct device *dev, struct device_attribute *attr,char *buf);    ssize_t (*store)(struct device *dev, struct device_attribute *attr,const char *buf, size_t count);&#125;;DEVICE_ATTR  实现一些这样的设备属性结构sysfs_create_file(&amp;mydevice-&gt;kobj, &amp;dev_attr_mydevice.attr);  绑定设备与设备属性</code></pre><hr><h3 id="debugfs"><a href="#debugfs" class="headerlink" title="debugfs"></a>debugfs</h3><hr><pre><code>无需绑定设备，mount debugfs 之后就可以在该目录下找到我们的节点debugfs_create_dir(const char *name, struct dentry *parent); debugfs_create_file(&quot;stats&quot;, S_IRUGO | S_IWUSR, client-&gt;debugfs,client, &amp;debugfs_stats_ops);  绑定文件和函数操作集合</code></pre><hr><h3 id="Cmake-mafile工程的构建工具"><a href="#Cmake-mafile工程的构建工具" class="headerlink" title="Cmake mafile工程的构建工具"></a>Cmake mafile工程的构建工具</h3><hr><p>简单语法：<br>    include_directories (“${PROJECT_SOURCE_DIR}/MathFunctions”) 添加include<br>    add_subdirectory (MathFunctions)   添加子目录<br>    add_executable (Tutorial tutorial.cxx)   定义一个可执行文件，以及依赖的源文件<br>    target_link_libraries (Tutorial MathFunctions)  链接库</p><hr><h3 id="makefile"><a href="#makefile" class="headerlink" title="makefile"></a>makefile</h3><hr><pre><code>$@  表示目标文件$^  表示所有的依赖文件$&lt;  表示第一个依赖文件$?  表示比目标还要新的依赖文件列表</code></pre><hr><h3 id="原子操作"><a href="#原子操作" class="headerlink" title="原子操作"></a>原子操作</h3><hr><hr><h3 id="锁的使用："><a href="#锁的使用：" class="headerlink" title="锁的使用："></a>锁的使用：</h3><hr><p>spinlock:<br>    死等，或者挂起当前进程<br>    一次只有一个thread获取锁<br>    因为可以睡眠，所以可以在BH中使用。<br>使用：<br>    spin_lock   关闭内核抢占，也就是说同时只能一个进程获取这个锁，不关闭的，其他的进程抢占，抢占之后发现需要之前的进程解锁才能继续执行，就会导致死锁。<br>    spin_lock_bh  spin_lock_softirq 加了这把锁，本地软中断会被禁用。<br>        使用场景： 比如配合tasklet，害怕被软中断sch，又请求锁住的资源，造成死锁。<br>    spin_lock_irq  加了这把锁，本地软中断会被禁用。本地hard irq会被禁用。<br>    spin_lock_irqsave 禁用本地hard irq ， 但是会保存中断状态，配合spin_unlock_irqrestore 进入退出，还原中断状态。<br>    spin_lock_nested 为了配合lockdep 机制，防止误报重复上锁的</p><hr><h3 id="互斥锁mutex，-锁住线程共享资源"><a href="#互斥锁mutex，-锁住线程共享资源" class="headerlink" title="互斥锁mutex， 锁住线程共享资源"></a>互斥锁mutex， 锁住线程共享资源</h3><hr><pre><code>pthread_mutex_lock 无法获取该所示，进入阻塞（睡眠，这些睡眠的线程会排队访问互斥量），pthread_mutex_trylock 就不会阻塞，直接返回ebusy</code></pre><hr><h3 id="读写锁rwlock"><a href="#读写锁rwlock" class="headerlink" title="读写锁rwlock"></a>读写锁rwlock</h3><hr><pre><code>pthread_rwlock_rdlock(pthread_rwlock_t *rwpt);pthread_rwlock_wrlock(pthread_rwlock_t *rwpt);pthread_rwlock_unlock(pthread_rwlock_t *rwpt);</code></pre><hr><h3 id="死锁的例子"><a href="#死锁的例子" class="headerlink" title="死锁的例子"></a>死锁的例子</h3><hr><pre><code>2个线程持有2把锁，交叉互锁，出现死锁。</code></pre><hr><h3 id="进程空间"><a href="#进程空间" class="headerlink" title="进程空间"></a>进程空间</h3><hr><p>进程为什么是4G寻址空间， 一个指针是4字节 32位，寻址能力是2的32次方，是4G.<br>32位linux , 一个进程空间4G，内核占1G，用户留3G，一个线程默认8M(但是因为还要包括 栈区，txt,data， heap 所以实际是大概6M)，所以最多380个左右线程<br>进程栈16K.<br>虚拟空间的3G还要分区：<br>    ①栈空间：特点是由系统管理，先进后出，里面放了局部变量、函数形参、自动变量。<br>    ②堆空间：特点是由用户管理，先进后出，我们可以用malloc、ralloc、calloc来分配空间。<br>        alloc(sizeof(int));  物理连续内存<br>        vmalloc属性：可能睡眠、虚拟地址连续、物理地址不连续、size对齐到页；所以不适合小内存分配，开销较大。<br>        realloc(p, SIZE * 2); 为已经分配空间的指针重新分配空间。<br>            如果新的空间小于旧的空间，则指针不变，<br>            如果大于， 则申请更大空间，然后拷贝原来的内容， 清空就的指针空间。<br>        calloc(SIZE, sizeof(int));  和malloc 一样，但是会全部初始化为0,不需要memset.<br>    ③数据段：数据段里面又分三块，第一块是bss，保存未初始化的全局变量；第二块是rodata，保存了常量；第三块  是.data（静态数据区）保存了初始化的全局变量还有static修饰的变量。<br>    ④代码段：存放了源代码。</p><hr><h3 id="kernel-userspace-空间"><a href="#kernel-userspace-空间" class="headerlink" title="kernel/userspace 空间"></a>kernel/userspace 空间</h3><hr><p>kernel 空间分区<br>userspace 空间分区</p><hr><h3 id="arm-终端流程："><a href="#arm-终端流程：" class="headerlink" title="arm 终端流程："></a>arm 终端流程：</h3><hr><p>中断流程， A系列不支持中断嵌套 M系列支持<br>    进入中断<br>        保存CPSR到对应cpu的SPSR_mode<br>        关中断<br>        切换到异常状态<br>        保存PC到LR<br>        设置PC到中断向量表中的对应处理函数地址中<br>    恢复中断<br>        恢复 SPSR_mode 到 CPSR<br>        恢复 lr_mode 到 PC<br>        恢复普通寄存器：R0-R7，操作sp将栈中将数据恢复。</p><hr><h3 id="devmem"><a href="#devmem" class="headerlink" title="devmem"></a>devmem</h3><hr><p>访问dts定义的内存范围内的外设寄存器访问，操作的是物理寄存器</p><hr><h3 id="物理内存，虚拟内存如何组织映射。"><a href="#物理内存，虚拟内存如何组织映射。" class="headerlink" title="物理内存，虚拟内存如何组织映射。"></a>物理内存，虚拟内存如何组织映射。</h3><hr><pre><code>虚拟地址空间比可用的物理内存大很多，因此只有最常用的部分才与物理页帧关联这不是问题，因为大多数程序只占用实际可用内存的一小部分</code></pre><hr><h3 id="野指针"><a href="#野指针" class="headerlink" title="野指针"></a>野指针</h3><hr><p>指针在被定义的时候，如果程序不对其进行初始化的话，它会随机指向一个区域，不能判断是否为NULL。</p><hr><h3 id="strcpy"><a href="#strcpy" class="headerlink" title="strcpy"></a>strcpy</h3><hr><hr><h3 id="strcmp"><a href="#strcmp" class="headerlink" title="strcmp"></a>strcmp</h3><hr><hr><h3 id="strlen"><a href="#strlen" class="headerlink" title="strlen"></a>strlen</h3><hr><hr><h3 id="排序算法有哪些"><a href="#排序算法有哪些" class="headerlink" title="排序算法有哪些"></a>排序算法有哪些</h3><hr><pre><code>冒泡排序选择排序插入排序希尔排序归并排序    迭代法    递归法快速排序    迭代法    递归法</code></pre><hr><h3 id="c-函数型参处于那个内存空间"><a href="#c-函数型参处于那个内存空间" class="headerlink" title="c 函数型参处于那个内存空间"></a>c 函数型参处于那个内存空间</h3><hr><p>  形参的传递在arm架构中，如果你的参数少于三个，则是通过R0或R0、R1或R0、R1、R2传递过去的，如果多余三个则是多出来的是通过堆栈传递的<br>  实参是放栈上的<br>    行参是一个占位符，它没有数据<br>    发生函数调用时，实参的值会传递给形参<br>    形参和实参虽然可以同名，但它们之间是相互独立的，互不影响，因为实参在函数外部有效，而形参在函数内部有效。<br>    函数返回值将会又主函数开辟一个临时的新的内存空间来保存</p><hr><h3 id="2分法查找"><a href="#2分法查找" class="headerlink" title="2分法查找"></a>2分法查找</h3><hr><hr><h3 id="AT-命令"><a href="#AT-命令" class="headerlink" title="AT 命令"></a>AT 命令</h3><hr><hr><h3 id="lcd-原理"><a href="#lcd-原理" class="headerlink" title="lcd 原理"></a>lcd 原理</h3><hr><hr><h3 id="frambuffer-机制"><a href="#frambuffer-机制" class="headerlink" title="frambuffer 机制"></a>frambuffer 机制</h3><hr><hr><h3 id="http-ftp-TCP-IP-协议"><a href="#http-ftp-TCP-IP-协议" class="headerlink" title="http ftp TCP/IP 协议"></a>http ftp TCP/IP 协议</h3><hr><hr><h3 id="spsr"><a href="#spsr" class="headerlink" title="spsr"></a>spsr</h3><hr><p>cpsr[31:28/条件标志，执行汇编的算数运算时，表示运算结果]<br>NZCV<br>[27:8] 保留<br>[7：5 | 7:I/irq使能  6:F/快中断 5：T状态位，arm/thumb] t=1 强制进入未定义指令中断<br>[4:0] 模式</p><hr><h3 id="物理-虚拟地址映射"><a href="#物理-虚拟地址映射" class="headerlink" title="物理/虚拟地址映射"></a>物理/虚拟地址映射</h3><hr><pre><code>32位linux总地址4G 一级页表页大小4K, 共4G/4k个页， 每1M个页组成1个页目录，1M个页目录是一个固定入口地址， 存在CR3 中。二级页表存储1M页目录 页目录地址-&gt; CR3寄存器 </code></pre><p>一个虚拟地址的组成：<br>    DIRECTORY [22：31] 可表示1024个页目录（PGD）<br>    TABLE[12：21] 可表示1024个页表（PTE)<br>    OFFSET[22：31] 可表示4096个物理内存</p><hr><h3 id="copy-to-user-copy-form-user"><a href="#copy-to-user-copy-form-user" class="headerlink" title="copy_to_user/copy_form_user"></a>copy_to_user/copy_form_user</h3><hr><pre><code>虚拟内存地址对应的物理内存与内核虚拟内存地址对应的物理内存</code></pre><hr><h3 id="mmap"><a href="#mmap" class="headerlink" title="mmap"></a>mmap</h3><hr><pre><code>用户空间虚拟地址与物理地址的map 目标是在用户空间访问硬件，所有可以省去映射到kernel虚拟空间这一步。</code></pre><hr><h3 id="ioremap"><a href="#ioremap" class="headerlink" title="ioremap"></a>ioremap</h3><hr><pre><code>内核空间虚拟地址与物理地址的map</code></pre><hr><h3 id="IPC-机制"><a href="#IPC-机制" class="headerlink" title="IPC 机制"></a>IPC 机制</h3><hr><hr><h3 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h3><hr><hr><h3 id="信号量"><a href="#信号量" class="headerlink" title="信号量"></a>信号量</h3><hr><hr><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><hr><hr><h3 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h3><hr><hr><h3 id="itouch"><a href="#itouch" class="headerlink" title="itouch"></a>itouch</h3><hr><p>hexgon SDK running time logger , fastRPC</p><hr><h3 id="TDDI-时序同步"><a href="#TDDI-时序同步" class="headerlink" title="TDDI , 时序同步"></a>TDDI , 时序同步</h3><hr><hr><h3 id="屏幕基本"><a href="#屏幕基本" class="headerlink" title="屏幕基本"></a>屏幕基本</h3><hr><pre><code>一个像素8bit RGB 信号发生时间        vsync 到一帧的最后一个像素 -&gt; 发出VBP(帧后的同步时间) -&gt; hsync 行同步信号 -&gt; HBP行后同步时间 -&gt; 一行像素 -&gt; HFP行前同步信号 -&gt; VFP帧前同步信号</code></pre><hr><h3 id="android-版本更新时间节点"><a href="#android-版本更新时间节点" class="headerlink" title="android 版本更新时间节点"></a>android 版本更新时间节点</h3><hr><hr><h3 id="霍尔器件的驱动移植"><a href="#霍尔器件的驱动移植" class="headerlink" title="霍尔器件的驱动移植"></a>霍尔器件的驱动移植</h3><hr><p>霍尔器件是磁感应器件，上电后，当检测到磁性物体靠近，中断脚就会产生一个高脉冲。<br>1，在DWS文件中配置上电，中断等管脚，然后在DTS中编写基础配置；<br>2，编写一个字符驱动，内含中断注册，检测，并向上层提供调用接口。</p><hr><h3 id="improveTouch"><a href="#improveTouch" class="headerlink" title="improveTouch"></a>improveTouch</h3><hr><p>1，高通android参考机外设improveTouch研发，区别于传统的第三方touch， improveTouch核心算法主要放在dsp中运算，通过userspace nativea app控制，kernel driver向input子系统转发触摸事件。<br>2，算法组维护adsp中的hal，算法，系统组负责平台的移植 userspace/kernel的代码维护。<br>3，我主要是编写 dts/driver 的代码，通过pinctrl/set_regulator等kernel api 管理硬件资源,维护usersapce的代码，开发版本的整合，wiki文档的更新。解决内部测试团队发现的bug。<br>4，其他芯片平台有过secureTouch的开发例子,对于新的touch驱动做一个移植，跑通。<br>主要是在kernel 和trustzone子系统中添加code。</p><hr><h3 id="crash"><a href="#crash" class="headerlink" title="crash"></a>crash</h3><hr><p>工具的使用，死机问题分析</p><hr><h3 id="mem"><a href="#mem" class="headerlink" title="mem"></a>mem</h3><hr><p>我理解是DDR</p><hr><h3 id="devmem-1"><a href="#devmem-1" class="headerlink" title="devmem"></a>devmem</h3><hr><p>访问dts定义的内存范围内的外设寄存器访问，操作的是物理寄存器</p><hr><h3 id="http-ftp-TCP-IP-协议-1"><a href="#http-ftp-TCP-IP-协议-1" class="headerlink" title="http ftp TCP/IP 协议"></a>http ftp TCP/IP 协议</h3><hr><hr><h3 id="触摸屏突然不亮检查流程"><a href="#触摸屏突然不亮检查流程" class="headerlink" title="触摸屏突然不亮检查流程"></a>触摸屏突然不亮检查流程</h3><hr><p>上电，reset电路，总线通信。getevent检查多点触摸协议报点是否有，是否符合报点规范。</p><hr><h3 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h3><hr><p>栈由高到低生长 kernel栈16K</p><hr><h3 id="uart-子系统"><a href="#uart-子系统" class="headerlink" title="uart 子系统"></a>uart 子系统</h3><hr><hr><h3 id="网络-子系统"><a href="#网络-子系统" class="headerlink" title="网络 子系统"></a>网络 子系统</h3><hr><hr><h3 id="misc驱动"><a href="#misc驱动" class="headerlink" title="misc驱动"></a>misc驱动</h3><hr><hr><h3 id="input系统"><a href="#input系统" class="headerlink" title="input系统"></a>input系统</h3><hr><hr><h3 id="多点触摸协议"><a href="#多点触摸协议" class="headerlink" title="多点触摸协议"></a>多点触摸协议</h3><hr><hr><h3 id="手势检测"><a href="#手势检测" class="headerlink" title="手势检测"></a>手势检测</h3><hr><hr><h3 id="M7-i2c"><a href="#M7-i2c" class="headerlink" title="M7 i2c"></a>M7 i2c</h3><hr><pre><code>发出从地址后，没有ack    从地址不对？ 轮寻一定范围的地址，查看是否有ack.M7的时钟 200/300/400Mi2c 低中高时钟 100K/</code></pre><hr><h3 id="Rtos-与-linux的区别"><a href="#Rtos-与-linux的区别" class="headerlink" title="Rtos 与 linux的区别"></a>Rtos 与 linux的区别</h3><hr><hr><h3 id="sn3193-类似芯片"><a href="#sn3193-类似芯片" class="headerlink" title="sn3193 类似芯片"></a>sn3193 类似芯片</h3><hr><pre><code>关键参数流程</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;中断&quot;&gt;&lt;a href=&quot;#中断&quot; class=&quot;headerlink&quot; title=&quot;中断&quot;&gt;&lt;/a&gt;中断&lt;/h3&gt;&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;中断分为上半部和下半部，上半部关中断；下半部开中断，处理可以延迟的事情。下半部有workqueue/so</summary>
      
    
    
    
    <category term="面试" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>BiosInterFace update 的思路</title>
    <link href="http://example.com/2021/02/08/bios/06_Biso_interface_update/"/>
    <id>http://example.com/2021/02/08/bios/06_Biso_interface_update/</id>
    <published>2021-02-08T18:30:31.676Z</published>
    <updated>2021-02-08T18:30:31.676Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><hr><ul><li>PMFW<br>专门控制CLK/power的一个bin ,</li><li>SMU<br>BIOS的菜单控制，设置值，分发值到具体的模块<br>SMU和PMFW通过msg机制更新biosinterfaceTable的结构体来通信。</li><li>MSG机制<br>一端，向某个寄存器写入消息ID，消息参数，poll 等待response，另一端是硬件中断，拿到硬件中断后，处理写入response消息。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;PMFW&lt;br&gt;专门控制CLK/power的一个bin ,&lt;/li&gt;
&lt;li&gt;SMU&lt;br&gt;BIOS的菜单控</summary>
      
    
    
    
    <category term="bios" scheme="http://example.com/categories/bios/"/>
    
    
  </entry>
  
  <entry>
    <title>c binary 相关工具</title>
    <link href="http://example.com/2021/02/08/tool/c_binary/"/>
    <id>http://example.com/2021/02/08/tool/c_binary/</id>
    <published>2021-02-08T00:00:00.000Z</published>
    <updated>2021-02-08T18:30:31.680Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="strings"><a href="#strings" class="headerlink" title="strings"></a>strings</h3><hr><p>列出bin文件中的字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">strings a.out </span><br><span class="line"></span><br><span class="line">/lib64/ld-linux-x86-64.so.2</span><br><span class="line">libc.so.6</span><br><span class="line">puts</span><br><span class="line">__cxa_finalize</span><br><span class="line">strcmp</span><br><span class="line">__libc_start_main</span><br><span class="line">GLIBC_2.2.5</span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">__gmon_start__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">u+UH</span><br><span class="line">[]A\A]A^A_</span><br><span class="line">cheking passwd!</span><br><span class="line">ok you got me</span><br><span class="line">WRONG !</span><br><span class="line">Usage: &lt;key&gt;</span><br><span class="line">:*3$<span class="string">&quot;</span></span><br><span class="line"><span class="string">GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0</span></span><br><span class="line"><span class="string">/usr/lib/gcc/x86_64-linux-gnu/9/include</span></span><br><span class="line"><span class="string">/usr/include/x86_64-linux-gnu/bits</span></span><br><span class="line"><span class="string">/usr/include/x86_64-linux-gnu/bits/types</span></span><br><span class="line"><span class="string">/usr/include</span></span><br><span class="line"><span class="string">main.c</span></span><br><span class="line"><span class="string">stddef.h</span></span><br></pre></td></tr></table></figure><hr><h3 id="2进制转16进制"><a href="#2进制转16进制" class="headerlink" title="2进制转16进制"></a>2进制转16进制</h3><hr><ol><li> vim 中 ：%！xxd   退回二进制： ：%！xxd  -r </li><li> bash shell: xxd a.out &gt; 16.txt</li></ol><hr><h3 id="strings-1"><a href="#strings-1" class="headerlink" title="strings"></a>strings</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;strings&quot;&gt;&lt;a href=&quot;#strings&quot; class=&quot;headerlink&quot; title=&quot;strings&quot;&gt;&lt;/a&gt;strings&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;列出bin文件中的字符串&lt;/p&gt;
&lt;figure class=&quot;highligh</summary>
      
    
    
    
    <category term="tools" scheme="http://example.com/categories/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>cscope 安装 配置 使用</title>
    <link href="http://example.com/2021/02/08/tool/cscope/"/>
    <id>http://example.com/2021/02/08/tool/cscope/</id>
    <published>2021-02-08T00:00:00.000Z</published>
    <updated>2021-02-08T18:30:31.680Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install cscope</span><br></pre></td></tr></table></figure><hr><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><hr><p>~/.vimrc 中添加如下配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; tags 设置</span></span><br><span class="line"><span class="string">set tags=tags;</span></span><br><span class="line"><span class="string">    set autochdir</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if has(&quot;</span>cscope<span class="string">&quot;)</span></span><br><span class="line"><span class="string">    set csprg=/usr/bin/cscope</span></span><br><span class="line"><span class="string">    &quot;</span>指定用来执行 cscope 的命令</span><br><span class="line">    <span class="built_in">set</span> csto=1</span><br><span class="line">    <span class="string">&quot;先搜索tags标签文件,再搜索cscope数据库</span></span><br><span class="line"><span class="string">    set cst</span></span><br><span class="line"><span class="string">    &quot;</span>使用|:cstag|(:cs find g),而不是缺省的:tag</span><br><span class="line">    <span class="built_in">set</span> nocsverb</span><br><span class="line">    <span class="string">&quot;不显示添加数据库是否成功</span></span><br><span class="line"><span class="string">    &quot;</span> add any database <span class="keyword">in</span> current directory</span><br><span class="line">    <span class="keyword">if</span> filereadable(<span class="string">&quot;cscope.out&quot;</span>)</span><br><span class="line">        cs add cscope.out</span><br><span class="line">    <span class="string">&quot;添加cscope数据库</span></span><br><span class="line"><span class="string">    endif</span></span><br><span class="line"><span class="string">    &quot;</span>显示添加成功与否</span><br><span class="line">    <span class="built_in">set</span> csverb</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">:<span class="built_in">set</span> cscopequickfix=s-,c-,d-,i-,t-,e-</span><br><span class="line"></span><br><span class="line">nmap &lt;C-\&gt;s :cs find s &lt;C-R&gt;=expand(<span class="string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class="line">nmap &lt;C-\&gt;g :cs find g &lt;C-R&gt;=expand(<span class="string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class="line"><span class="comment"># 查找哪里调用了当前的函数</span></span><br><span class="line">nmap &lt;C-\&gt;c :cs find c &lt;C-R&gt;=expand(<span class="string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class="line">nmap &lt;C-\&gt;t :cs find t &lt;C-R&gt;=expand(<span class="string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class="line"><span class="comment"># 查找所有符号</span></span><br><span class="line">nmap &lt;C-\&gt;e :cs find e &lt;C-R&gt;=expand(<span class="string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class="line">nmap &lt;C-\&gt;f :cs find f &lt;C-R&gt;=expand(<span class="string">&quot;&lt;cfile&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br><span class="line">nmap &lt;C-\&gt;i :cs find i ^&lt;C-R&gt;=expand(<span class="string">&quot;&lt;cfile&gt;&quot;</span>)&lt;CR&gt;$&lt;CR&gt;</span><br><span class="line">nmap &lt;C-\&gt;d :cs find d &lt;C-R&gt;=expand(<span class="string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="建立索引"><a href="#建立索引" class="headerlink" title="建立索引"></a>建立索引</h3><hr><p>建立脚本，执行生成tag, cscope符号表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">find `<span class="built_in">pwd</span>` -name <span class="string">&quot;*.[ch]&quot;</span> -o -name <span class="string">&quot;*.cpp&quot;</span> &gt; cscope.files  </span><br><span class="line">cscope -bRkq -i cscope.files  </span><br><span class="line"></span><br><span class="line">ctags -R</span><br></pre></td></tr></table></figure><hr><h3 id="cscope-使用"><a href="#cscope-使用" class="headerlink" title="cscope 使用"></a>cscope 使用</h3><hr><p>快捷键，上面配置中已经配置了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">cscope --<span class="built_in">help</span></span><br><span class="line">Usage: cscope [-bcCdehklLqRTuUvV] [-f file] [-F file] [-i file] [-I dir] [-s dir]</span><br><span class="line">            [-p number] [-P path] [-[0-8] pattern] [<span class="built_in">source</span> files]</span><br><span class="line"></span><br><span class="line">-b            Build the cross-reference only.</span><br><span class="line">-C            Ignore letter <span class="keyword">case</span> when searching.</span><br><span class="line">-c            Use only ASCII characters <span class="keyword">in</span> the cross-ref file (don<span class="string">&#x27;t compress).</span></span><br><span class="line"><span class="string">-d            Do not update the cross-reference.</span></span><br><span class="line"><span class="string">-e            Suppress the &lt;Ctrl&gt;-e command prompt between files.</span></span><br><span class="line"><span class="string">-F symfile    Read symbol reference lines from symfile.</span></span><br><span class="line"><span class="string">-f reffile    Use reffile as cross-ref file name instead of cscope.out.</span></span><br><span class="line"><span class="string">-h            This help screen.</span></span><br><span class="line"><span class="string">-I incdir     Look in incdir for any #include files.</span></span><br><span class="line"><span class="string">-i namefile   Browse through files listed in namefile, instead of cscope.files</span></span><br><span class="line"><span class="string">-k            Kernel Mode - don&#x27;</span>t use /usr/include <span class="keyword">for</span> <span class="comment">#include files.</span></span><br><span class="line">-L            Do a single search with line-oriented output.</span><br><span class="line">-l            Line-oriented interface.</span><br><span class="line">-num pattern  Go to input field num (counting from 0) and find pattern.</span><br><span class="line">-P path       Prepend path to relative file names <span class="keyword">in</span> pre-built cross-ref file.</span><br><span class="line">-p n          Display the last n file path components.</span><br><span class="line">-q            Build an inverted index <span class="keyword">for</span> quick symbol searching.</span><br><span class="line">-R            Recurse directories <span class="keyword">for</span> files.</span><br><span class="line">-s dir        Look <span class="keyword">in</span> dir <span class="keyword">for</span> additional <span class="built_in">source</span>  files.</span><br><span class="line">-T            Use only the first eight characters to match against C symbols.</span><br><span class="line">-U            Check file time stamps.</span><br><span class="line">-u            Unconditionally build the cross-reference file.</span><br><span class="line">-v            Be more verbose <span class="keyword">in</span> line mode.</span><br><span class="line">-V            Print the version number.</span><br><span class="line"></span><br><span class="line">Please see the manpage <span class="keyword">for</span> more information.</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="tools" scheme="http://example.com/categories/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>vim plug</title>
    <link href="http://example.com/2021/02/08/tool/vim/"/>
    <id>http://example.com/2021/02/08/tool/vim/</id>
    <published>2021-02-08T00:00:00.000Z</published>
    <updated>2021-02-08T18:30:31.680Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="安装vim-plug"><a href="#安装vim-plug" class="headerlink" title="安装vim-plug"></a>安装vim-plug</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim    :  curl -fLo ~/.vim/<span class="built_in">autoload</span>/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br><span class="line">neovim :  curl -fLo ~/.config/nvim/<span class="built_in">autoload</span>/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure><hr><h3 id="配置-vim-plug"><a href="#配置-vim-plug" class="headerlink" title="配置 vim-plug"></a>配置 vim-plug</h3><hr><p>修改 ~/.vimrc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">call plug<span class="comment">#begin(&#x27;~/.vim/plugged&#x27;)</span></span><br><span class="line">Plug <span class="string">&#x27;itchyny/lightline.vim&#x27;</span></span><br><span class="line">call plug<span class="comment">#end()</span></span><br></pre></td></tr></table></figure><hr><h3 id="插件操作"><a href="#插件操作" class="headerlink" title="插件操作"></a>插件操作</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入插件</span></span><br><span class="line">:PlugInstall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新插件</span></span><br><span class="line">:PlugUpdate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理插件</span></span><br><span class="line">:PlugClean</span><br></pre></td></tr></table></figure><hr><h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目录树</span></span><br><span class="line">Plug <span class="string">&#x27;scrooloose/nerdtree&#x27;</span>, &#123; <span class="string">&#x27;on&#x27;</span>:  <span class="string">&#x27;NERDTreeToggle&#x27;</span> &#125;  </span><br></pre></td></tr></table></figure><hr><h3 id="配置实现的插件"><a href="#配置实现的插件" class="headerlink" title="配置实现的插件"></a>配置实现的插件</h3><hr><p>换行 ALT + 上下 实现vscode类似的换行效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">noremap &lt;A-up&gt; :call feedkeys( line(<span class="string">&#x27;.&#x27;</span>)==1 ? <span class="string">&#x27;&#x27;</span> : <span class="string">&#x27;ddkP&#x27;</span> )&lt;CR&gt;</span><br><span class="line">noremap &lt;A-down&gt; ddp</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;安装vim-plug&quot;&gt;&lt;a href=&quot;#安装vim-plug&quot; class=&quot;headerlink&quot; title=&quot;安装vim-plug&quot;&gt;&lt;/a&gt;安装vim-plug&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;</summary>
      
    
    
    
    <category term="tools" scheme="http://example.com/categories/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>Youtube-dl youtube视频批量下载</title>
    <link href="http://example.com/2021/02/08/tool/youtuber_dll/"/>
    <id>http://example.com/2021/02/08/tool/youtuber_dll/</id>
    <published>2021-02-08T00:00:00.000Z</published>
    <updated>2021-02-08T18:30:31.680Z</updated>
    
    <content type="html"><![CDATA[<h3 id="what-is-Youtube-dl-？"><a href="#what-is-Youtube-dl-？" class="headerlink" title="what is Youtube-dl ？"></a>what is Youtube-dl ？</h3><hr><p>Youtube-dl 是一个自由开源的命令行视频下载工具，可以用来从 Youtube 等类似的网站上下载视频，目前它支持的网站除了 Youtube 还有 Facebook、Dailymotion、Google Video、Yahoo 等等。它构架于 pygtk 之上，需要 Python 的支持来运行。它支持很多操作系统，包括 Windows、Mac 以及 Unix。Youtube-dl 还有断点续传、下载整个频道或者整个播放清单中的视频、添加自定义的标题、代理等等其他功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update -y</span><br><span class="line">sudo apt-get upgrade -y</span><br><span class="line">sudo apt-get install curl -y</span><br><span class="line">curl -L https://yt-dl.org/latest/youtube-dl -o /usr/bin/youtube-dl</span><br><span class="line">chmod 755 /usr/bin/youtube-dl</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示所有视频格式</span></span><br><span class="line">youtube-dl -F https://www.youtube.com/watch?v=j_JgXJ-apXs  </span><br><span class="line"></span><br><span class="line">[info] Available formats <span class="keyword">for</span> j_JgXJ-apXs:</span><br><span class="line">format code  extension  resolution note</span><br><span class="line">139          m4a        audio only DASH audio   56k , m4a_dash container, mp4a.40.5@ 48k (22050Hz), 756.44KiB</span><br><span class="line">249          webm       audio only DASH audio   56k , opus @ 50k, 724.28KiB</span><br><span class="line">250          webm       audio only DASH audio   69k , opus @ 70k, 902.75KiB</span><br><span class="line">171          webm       audio only DASH audio  110k , vorbis@128k, 1.32MiB</span><br><span class="line">251          webm       audio only DASH audio  122k , opus @160k, 1.57MiB</span><br><span class="line">140          m4a        audio only DASH audio  146k , m4a_dash container, mp4a.40.2@128k (44100Hz), 1.97MiB</span><br><span class="line">278          webm       256x144    144p   97k , webm container, vp9, 24fps, video only, 1.33MiB</span><br><span class="line">160          mp4        256x144    DASH video  102k , avc1.4d400c, 24fps, video only, 731.53KiB</span><br><span class="line">133          mp4        426x240    DASH video  174k , avc1.4d4015, 24fps, video only, 1.36MiB</span><br><span class="line">242          webm       426x240    240p  221k , vp9, 24fps, video only, 1.74MiB</span><br><span class="line">134          mp4        640x360    DASH video  369k , avc1.4d401e, 24fps, video only, 2.90MiB</span><br><span class="line">243          webm       640x360    360p  500k , vp9, 24fps, video only, 4.15MiB</span><br><span class="line">135          mp4        854x480    DASH video  746k , avc1.4d401e, 24fps, video only, 6.11MiB</span><br><span class="line">244          webm       854x480    480p  844k , vp9, 24fps, video only, 7.27MiB</span><br><span class="line">247          webm       1280x720   720p 1155k , vp9, 24fps, video only, 9.21MiB</span><br><span class="line">136          mp4        1280x720   DASH video 1300k , avc1.4d401f, 24fps, video only, 9.66MiB</span><br><span class="line">248          webm       1920x1080  1080p 1732k , vp9, 24fps, video only, 14.24MiB</span><br><span class="line">137          mp4        1920x1080  DASH video 2217k , avc1.640028, 24fps, video only, 15.28MiB</span><br><span class="line">17           3gp        176x144    small , mp4v.20.3, mp4a.40.2@ 24k</span><br><span class="line">36           3gp        320x180    small , mp4v.20.3, mp4a.40.2</span><br><span class="line">43           webm       640x360    medium , vp8.0, vorbis@128k</span><br><span class="line">18           mp4        640x360    medium , avc1.42001E, mp4a.40.2@ 96k</span><br><span class="line">22           mp4        1280x720   hd720 , avc1.64001F, mp4a.40.2@192k (best)</span><br></pre></td></tr></table></figure><p>然后使用 -f 指定你想要下载的格式，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl -f 18 https://www.youtube.com/watch?v=j_JgXJ-apXs</span><br><span class="line"></span><br><span class="line">[youtube] j_JgXJ-apXs: Downloading webpage</span><br><span class="line">[youtube] j_JgXJ-apXs: Downloading video info webpage</span><br><span class="line">[youtube] j_JgXJ-apXs: Extracting video information</span><br><span class="line">[youtube] j_JgXJ-apXs: Downloading MPD manifest</span><br><span class="line">[download] Destination: B.A. PASS 2 Trailer no 2 _ Filmybox-j_JgXJ-apXs.mp4</span><br><span class="line">[download] 100% of 6.90MiB <span class="keyword">in</span> 00:47</span><br></pre></td></tr></table></figure><h3 id="下载音频"><a href="#下载音频" class="headerlink" title="下载音频"></a>下载音频</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl https://www.youtube.com/watch?v=j_JgXJ-apXs -x --audio-format mp3</span><br></pre></td></tr></table></figure><h3 id="下载视频"><a href="#下载视频" class="headerlink" title="下载视频"></a>下载视频</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl -citw https://www.youtube.com/channel/UCatfiM69M9ZnNhOzy0jZ41A</span><br></pre></td></tr></table></figure><h3 id="指定代理"><a href="#指定代理" class="headerlink" title="指定代理"></a>指定代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl --proxy http://proxy-ip:port https://www.youtube.com/watch?v=j_JgXJ-apXs</span><br></pre></td></tr></table></figure><h3 id="youtube-list"><a href="#youtube-list" class="headerlink" title="youtube-list"></a>youtube-list</h3><p>若想一条命令下载多个 Youtube 视频，那么首先把所有要下载的 Youtube 视频 URL 存在一个文件中（假设这个文件叫 youtube-list.txt），然后运行下面命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl -a youtube-list.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;what-is-Youtube-dl-？&quot;&gt;&lt;a href=&quot;#what-is-Youtube-dl-？&quot; class=&quot;headerlink&quot; title=&quot;what is Youtube-dl ？&quot;&gt;&lt;/a&gt;what is Youtube-dl ？&lt;/h3&gt;&lt;</summary>
      
    
    
    
    <category term="tools" scheme="http://example.com/categories/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>HEXO Hacker 主题中文说明</title>
    <link href="http://example.com/2021/02/07/hexo/02_hexo_%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/"/>
    <id>http://example.com/2021/02/07/hexo/02_hexo_%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/</id>
    <published>2021-02-07T00:00:00.000Z</published>
    <updated>2021-02-08T18:30:31.676Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hacker-English-Docs"><a href="#Hacker-English-Docs" class="headerlink" title="Hacker | English Docs"></a>Hacker | <a href="/README.md">English Docs</a></h1><p><a href="https://github.com/ellerbrock/open-source-badge/"><img src="https://badges.frapsoft.com/os/v1/open-source.svg?v=103" alt="Open Source Love"></a>  <a href="https://opensource.org/licenses/GPL-2.0"><img src="https://badges.frapsoft.com/os/gpl/gpl.svg?v=103" alt="GPL Licence"></a>  </p><p><strong>Hacker 是一款专注于写作的简洁博客主题。在如此讲究复杂排版的趋势下，选择回归本源，专注于写作这件事。</strong>  </p><p>一开始是 <a href="http://liuxinyu.me/">moyo</a> 为 Wordpress 所创作的一个主题，由 CodeDaraW 移植到 Hexo 。</p><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p>参考我的博客：<a href="http://blog.daraw.cn/">DaraW</a>。<br>可以使用 TravisCI 实现自动化部署，配置参考 <a href="https://github.com/CodeDaraW/Blog">CodeDaraW/Blog</a>。</p><p><img src="https://ooo.0o0.ooo/2016/08/04/57a306f56bee2.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>获得主题文件， <code>git clone</code> 或者 <code>download zip</code> 均可；  </p><p>在 <code>themes</code> 文件夹中创建文件夹 <code>Hacker</code> ，将主题文件都复制粘贴至 <code>Hacker</code> 文件夹；  </p><p>然后在hexo全局配置文件 <code>_config.yml</code> 中应用主题：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">Hacker</span></span><br></pre></td></tr></table></figure><p>这样就安装好了，开始享受吧~</p><p><strong>注意：版本更新后建议在hexo生成前执行一次 <code>hexo clean</code> ，清除以前的缓存，避免带来的一些莫名其妙的问题。</strong></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="启用评论和谷歌分析"><a href="#启用评论和谷歌分析" class="headerlink" title="启用评论和谷歌分析"></a>启用评论和谷歌分析</h3><p>参考 <code>_config.example.yml</code> 配置案例，创建主题配置文件 <code>_config.yml</code> 并编辑：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitment</span></span><br><span class="line"><span class="attr">gitment:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">gitment_owner:</span></span><br><span class="line"><span class="attr">gitment_repo:</span></span><br><span class="line"><span class="attr">gitment_client_id:</span></span><br><span class="line"><span class="attr">gitment_client_secret:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gitalk</span></span><br><span class="line"><span class="attr">gitalk:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">gitalk_owner:</span></span><br><span class="line"><span class="attr">gitalk_admin:</span> []</span><br><span class="line"><span class="attr">gitalk_repo:</span></span><br><span class="line"><span class="attr">gitalk_client_id:</span></span><br><span class="line"><span class="attr">gitalk_client_secret:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># valine comment</span></span><br><span class="line"><span class="attr">valine:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">leancloud_id:</span></span><br><span class="line"><span class="attr">leancloud_key:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># disqus comment</span></span><br><span class="line"><span class="attr">disqus:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">disqus_shortname:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># google analytics</span></span><br><span class="line"><span class="attr">googleTrackId:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># baidu analytics</span></span><br><span class="line"><span class="attr">baiduTrackId:</span></span><br></pre></td></tr></table></figure><p><code>gitment</code>: <code>boolean</code>，是否开启 Gitment 评论<br><code>gitment_owner</code>: <code>string</code>，你的 GitHub ID<br><code>gitment_repo</code>: <code>string</code>，存储评论的 Repo<br><code>gitment_client_id</code>: <code>string</code>，你的 Client ID<br><code>gitment_client_secret</code>: <code>string</code>，你的 Client Secret  </p><p><code>gitalk</code>: <code>boolean</code>，是否开启 Gitalk 评论<br><code>gitalk_owner</code>: <code>string</code>，你的 GitHub ID<br><code>gitalk_admin</code>: <code>array</code>，所有管理员 GitHub ID<br><code>gitalk_repo</code>: <code>string</code>，存储评论的 Repo<br><code>gitalk_client_id</code>: <code>string</code>，你的 Client ID<br><code>gitalk_client_secret</code>: <code>string</code>，你的 Client Secret  </p><p><code>valine</code>: <code>boolean</code>，是否开启 Valine 评论<br><code>leancloud_id</code>: <code>string</code>，你的 LeanCloud ID<br><code>leancloud_key</code>: <code>string</code>，你的 LeanCloud Key  </p><p><code>disqus</code>: <code>boolean</code>，是否开启 Disqus 评论；<br><code>disqus_shortname</code>: <code>string</code>，你的 Disqus Site Shortname。  </p><p><code>googleTrackId</code>: <code>string</code>，为谷歌分析的个人ID，留空则为不使用谷歌分析。<br><code>baiduTrackId</code>: <code>string</code>, 为百度统计的个人ID,留空则为不是用谷歌分析。</p><h3 id="启用分类和标签页面"><a href="#启用分类和标签页面" class="headerlink" title="启用分类和标签页面"></a>启用分类和标签页面</h3><p>分类功能：执行 <code>hexo new page categories</code> ，然后修改生成的 <code>source/categories/index.md</code> ：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2017-01-30 19:16:17</span><br><span class="line">layout: &quot;categories&quot;</span><br><span class="line">---  </span><br></pre></td></tr></table></figure><p>如果你需要关闭该页的评论，可以添加一行 <code>comments: false</code>；<code>title</code> 对应的则是该页的标题。  </p><p>标签功能：同理，执行 <code>hexo new page tags</code> ，然后修改生成的 <code>source/tags/index.md</code> ：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2017-01-30 19:16:17</span><br><span class="line">layout: &quot;tags&quot;</span><br><span class="line">---  </span><br></pre></td></tr></table></figure><p>配置同分类功能。</p><p>在菜单中添加链接：编辑主题的 <code>_config.yml</code> ，在 <code>menu</code> 中添加 <code>Categories: /categories</code> 和 <code>Tags: /tags</code>，如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">/categories</span></span><br><span class="line">  <span class="attr">Tags:</span> <span class="string">/tags</span></span><br></pre></td></tr></table></figure><h2 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h2><p>GNU GPL(General Public License) v2.0</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hacker-English-Docs&quot;&gt;&lt;a href=&quot;#Hacker-English-Docs&quot; class=&quot;headerlink&quot; title=&quot;Hacker | English Docs&quot;&gt;&lt;/a&gt;Hacker | &lt;a href=&quot;/README.m</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>UEFI Protocol 机制</title>
    <link href="http://example.com/2021/02/07/uefi/04_UFEI_protocol/"/>
    <id>http://example.com/2021/02/07/uefi/04_UFEI_protocol/</id>
    <published>2021-02-07T00:00:00.000Z</published>
    <updated>2021-02-08T18:30:31.680Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h3><hr><p>GUID是一条链表，每个节点是就是一个GUID，一个GUID必须挂一条 Protocol.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;Protocol&quot;&gt;&lt;a href=&quot;#Protocol&quot; class=&quot;headerlink&quot; title=&quot;Protocol&quot;&gt;&lt;/a&gt;Protocol&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;GUID是一条链表，每个节点是就是一个GUID，一个GUID必须挂一条 </summary>
      
    
    
    
    <category term="uefi" scheme="http://example.com/categories/uefi/"/>
    
    
  </entry>
  
  <entry>
    <title>hack binary example</title>
    <link href="http://example.com/2021/02/07/liveoverflow/hack_binary_example/"/>
    <id>http://example.com/2021/02/07/liveoverflow/hack_binary_example/</id>
    <published>2021-02-07T00:00:00.000Z</published>
    <updated>2021-02-08T18:30:31.676Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><hr><p>通过修改bin文件，跳过字符串匹配，密码检查。</p><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><hr><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;    </span></span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>* argv[])</span></span>&#123;    </span><br><span class="line">        <span class="keyword">if</span> (argc == <span class="number">2</span>)&#123;    </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;cheking passwd!\n&quot;</span>);    </span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strcmp</span>(<span class="string">&quot;pwd&quot;</span>,argv[<span class="number">1</span>]) == <span class="number">0</span>)&#123;    </span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;ok you got me\n&quot;</span>);    </span><br><span class="line">                &#125;<span class="keyword">else</span>    </span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;WRONG !\n&quot;</span>);    </span><br><span class="line">        &#125;<span class="keyword">else</span>    </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Usage: &lt;key&gt;\n&quot;</span>);    </span><br><span class="line">    </span><br><span class="line">        <span class="keyword">return</span> ;    </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><hr><h3 id="带参数打开gdb"><a href="#带参数打开gdb" class="headerlink" title="带参数打开gdb"></a>带参数打开gdb</h3><hr><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb --args ./a.out pwd</span><br></pre></td></tr></table></figure><hr><h3 id="gdb-检查"><a href="#gdb-检查" class="headerlink" title="gdb 检查"></a>gdb 检查</h3><hr><ol><li> 我们通过gdb单步，到strcmp后一步,打开汇编</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">   (gdb) n</span><br><span class="line">   <span class="number">10</span>                        <span class="built_in">printf</span>(<span class="string">&quot;WRONG !\n&quot;</span>);</span><br><span class="line">   (gdb) disassemble </span><br><span class="line">   Dump of assembler code <span class="keyword">for</span> function main:</span><br><span class="line">   <span class="number">0x0000555555555169</span> &lt;+<span class="number">0</span>&gt;:endbr64 </span><br><span class="line">   <span class="number">0x000055555555516d</span> &lt;+<span class="number">4</span>&gt;:push   %rbp</span><br><span class="line">   <span class="number">0x000055555555516e</span> &lt;+<span class="number">5</span>&gt;:mov    %rsp,%rbp</span><br><span class="line">   <span class="number">0x0000555555555171</span> &lt;+<span class="number">8</span>&gt;:sub    $<span class="number">0x10</span>,%rsp</span><br><span class="line">   <span class="number">0x0000555555555175</span> &lt;+<span class="number">12</span>&gt;:mov    %edi,<span class="number">-0x4</span>(%rbp)</span><br><span class="line">   <span class="number">0x0000555555555178</span> &lt;+<span class="number">15</span>&gt;:mov    %rsi,<span class="number">-0x10</span>(%rbp)</span><br><span class="line">   <span class="number">0x000055555555517c</span> &lt;+<span class="number">19</span>&gt;:cmpl   $<span class="number">0x2</span>,<span class="number">-0x4</span>(%rbp)</span><br><span class="line">   <span class="number">0x0000555555555180</span> &lt;+<span class="number">23</span>&gt;:jne    <span class="number">0x5555555551c8</span> &lt;main+<span class="number">95</span>&gt;</span><br><span class="line">   <span class="number">0x0000555555555182</span> &lt;+<span class="number">25</span>&gt;:lea    <span class="number">0xe7b</span>(%rip),%rdi        # <span class="number">0x555555556004</span></span><br><span class="line">   <span class="number">0x0000555555555189</span> &lt;+<span class="number">32</span>&gt;:callq  <span class="number">0x555555555060</span> &lt;<span class="built_in">puts</span>@plt&gt;</span><br><span class="line">   <span class="number">0x000055555555518e</span> &lt;+<span class="number">37</span>&gt;:mov    <span class="number">-0x10</span>(%rbp),%rax</span><br><span class="line">   <span class="number">0x0000555555555192</span> &lt;+<span class="number">41</span>&gt;:add    $<span class="number">0x8</span>,%rax</span><br><span class="line">   <span class="number">0x0000555555555196</span> &lt;+<span class="number">45</span>&gt;:mov    (%rax),%rax</span><br><span class="line">   <span class="number">0x0000555555555199</span> &lt;+<span class="number">48</span>&gt;:mov    %rax,%rsi</span><br><span class="line">   <span class="number">0x000055555555519c</span> &lt;+<span class="number">51</span>&gt;:lea    <span class="number">0xe71</span>(%rip),%rdi        # <span class="number">0x555555556014</span></span><br><span class="line">   <span class="number">0x00005555555551a3</span> &lt;+<span class="number">58</span>&gt;:callq  <span class="number">0x555555555070</span> &lt;<span class="built_in">strcmp</span>@plt&gt;</span><br><span class="line">   <span class="number">0x00005555555551a8</span> &lt;+<span class="number">63</span>&gt;:test   %eax,%eax</span><br><span class="line">   <span class="number">0x00005555555551aa</span> &lt;+<span class="number">65</span>&gt;:jne    <span class="number">0x5555555551ba</span> &lt;main+<span class="number">81</span>&gt;</span><br><span class="line">   <span class="number">0x00005555555551ac</span> &lt;+<span class="number">67</span>&gt;:lea    <span class="number">0xe65</span>(%rip),%rdi        # <span class="number">0x555555556018</span></span><br><span class="line">   <span class="number">0x00005555555551b3</span> &lt;+<span class="number">74</span>&gt;:callq  <span class="number">0x555555555060</span> &lt;<span class="built_in">puts</span>@plt&gt;</span><br><span class="line">   <span class="number">0x00005555555551b8</span> &lt;+<span class="number">79</span>&gt;:jmp    <span class="number">0x5555555551d4</span> &lt;main+<span class="number">107</span>&gt;</span><br><span class="line">=&gt; <span class="number">0x00005555555551ba</span> &lt;+<span class="number">81</span>&gt;:lea    <span class="number">0xe65</span>(%rip),%rdi        # <span class="number">0x555555556026</span></span><br><span class="line">   <span class="number">0x00005555555551c1</span> &lt;+<span class="number">88</span>&gt;:callq  <span class="number">0x555555555060</span> &lt;<span class="built_in">puts</span>@plt&gt;</span><br><span class="line">   <span class="number">0x00005555555551c6</span> &lt;+<span class="number">93</span>&gt;:jmp    <span class="number">0x5555555551d4</span> &lt;main+<span class="number">107</span>&gt;</span><br><span class="line">   <span class="number">0x00005555555551c8</span> &lt;+<span class="number">95</span>&gt;:lea    <span class="number">0xe5f</span>(%rip),%rdi        # <span class="number">0x55555555602e</span></span><br><span class="line">   <span class="number">0x00005555555551cf</span> &lt;+<span class="number">102</span>&gt;:callq  <span class="number">0x555555555060</span> &lt;<span class="built_in">puts</span>@plt&gt;</span><br><span class="line">   <span class="number">0x00005555555551d4</span> &lt;+<span class="number">107</span>&gt;:nop</span><br><span class="line">   <span class="number">0x00005555555551d5</span> &lt;+<span class="number">108</span>&gt;:nop</span><br><span class="line">   <span class="number">0x00005555555551d6</span> &lt;+<span class="number">109</span>&gt;:leaveq </span><br><span class="line">   <span class="number">0x00005555555551d7</span> &lt;+<span class="number">110</span>&gt;:retq   </span><br><span class="line">   End of assembler dump.</span><br></pre></td></tr></table></figure><p>可以看到 strcmp 后，有一句：test   %eax,%eax ，意思是判断eax 是不是0， 并将状态保存到某个寄存器中，后面肯定也会根据状态判断strcmp返回是不是0</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(gdb) x/<span class="number">8b</span> <span class="number">0x00005555555551aa</span></span><br><span class="line"><span class="number">0x5555555551aa</span> &lt;main+<span class="number">65</span>&gt;:<span class="number">117</span><span class="number">14</span><span class="number">72</span><span class="number">-115</span><span class="number">61</span><span class="number">101</span><span class="number">14</span><span class="number">0</span></span><br><span class="line">(gdb) x/<span class="number">8</span>x <span class="number">0x00005555555551aa</span></span><br><span class="line"><span class="number">0x5555555551aa</span> &lt;main+<span class="number">65</span>&gt;:<span class="number">0x75</span><span class="number">0x0e</span><span class="number">0x48</span><span class="number">0x8d</span><span class="number">0x3d</span><span class="number">0x65</span><span class="number">0x0e</span><span class="number">0x00</span></span><br><span class="line">(gdb) </span><br></pre></td></tr></table></figure><p>test 后就是跳转命令， jne, 查看intel 架构的手册，他就是根据 0x75 来判断是不是相等的，类似ARM中的 cpsv标志位.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x75</span> 不等</span><br><span class="line"><span class="number">0x74</span> 相等</span><br></pre></td></tr></table></figure><p>所以目标就是将0x75更换为0x74,通过上下文的数字确定位置。0x75    0x0e 0x48 0x8d 0x3d</p><hr><h3 id="修改16进制文件"><a href="#修改16进制文件" class="headerlink" title="修改16进制文件"></a>修改16进制文件</h3><hr><p>vim 中，执行：%！xxd 可以将二进制转换为十六进制修改。 ：%！xxd -r 返回二进制， 保存</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">00001120</span>: f30f <span class="number">1</span>efa <span class="number">803</span>d e52e <span class="number">0000</span> <span class="number">0075</span> <span class="number">2b</span>55 <span class="number">4883</span>  .....=.....u+UH.</span><br><span class="line"><span class="number">00001130</span>: <span class="number">3</span>dc2 <span class="number">2e00</span> <span class="number">0000</span> <span class="number">4889</span> e574 <span class="number">0</span>c48 <span class="number">8b</span>3d c62e  =.....H..t.H.=..</span><br><span class="line"><span class="number">00001140</span>: <span class="number">0000</span> e809 ffff ffe8 <span class="number">64f</span>f ffff c605 bd2e  ........d.......</span><br><span class="line"><span class="number">00001150</span>: <span class="number">0000</span> <span class="number">015</span>d c30f <span class="number">1f</span>00 c30f <span class="number">1f</span>80 <span class="number">0000</span> <span class="number">0000</span>  ...]............</span><br><span class="line"><span class="number">00001160</span>: f30f <span class="number">1</span>efa e977 ffff fff3 <span class="number">0f</span>1e fa55 <span class="number">4889</span>  .....w.......UH.</span><br><span class="line"><span class="number">00001170</span>: e548 <span class="number">83</span>ec <span class="number">1089</span> <span class="number">7</span>dfc <span class="number">4889</span> <span class="number">75f</span>0 <span class="number">837</span>d fc02  .H....&#125;.H.u..&#125;..</span><br><span class="line"><span class="number">00001180</span>: <span class="number">7546</span> <span class="number">488</span>d <span class="number">3</span>d7b <span class="number">0e00</span> <span class="number">00e8</span> d2fe ffff <span class="number">488b</span>  uFH.=&#123;........H.</span><br><span class="line"><span class="number">00001190</span>: <span class="number">45f</span>0 <span class="number">4883</span> c008 <span class="number">488b</span> <span class="number">0048</span> <span class="number">89</span>c6 <span class="number">488</span>d <span class="number">3</span>d71  E.H...H..H..H.=q</span><br><span class="line"><span class="number">000011</span>a0: <span class="number">0e00</span> <span class="number">00e8</span> c8fe ffff <span class="number">85</span>c0 <span class="number">750</span>e <span class="number">488</span>d <span class="number">3</span>d65  ..........u.H.=e</span><br><span class="line"><span class="number">000011b</span>0: <span class="number">0e00</span> <span class="number">00e8</span> a8fe ffff eb1a <span class="number">488</span>d <span class="number">3</span>d65 <span class="number">0e00</span>  ..........H.=e..</span><br><span class="line"><span class="number">000011</span>c0: <span class="number">00e8</span> <span class="number">9</span>afe ffff eb0c <span class="number">488</span>d <span class="number">3</span>d5f <span class="number">0e00</span> <span class="number">00e8</span>  ........H.=_....</span><br><span class="line"><span class="number">000011</span>d0: <span class="number">8</span>cfe ffff <span class="number">9090</span> c9c3 <span class="number">0f</span>1f <span class="number">8400</span> <span class="number">0000</span> <span class="number">0000</span>  ................</span><br><span class="line"><span class="number">000011e0</span>: f30f <span class="number">1</span>efa <span class="number">4157</span> <span class="number">4</span>c8d <span class="number">3</span>dc3 <span class="number">2b</span>00 <span class="number">0041</span> <span class="number">5649</span>  ....AWL.=.+..AVI</span><br><span class="line"><span class="number">000011f</span>0: <span class="number">89</span>d6 <span class="number">4155</span> <span class="number">4989</span> f541 <span class="number">5441</span> <span class="number">89f</span>c <span class="number">5548</span> <span class="number">8</span>d2d  ..AUI..ATA..UH.-</span><br><span class="line"><span class="number">00001200</span>: b42b <span class="number">0000</span> <span class="number">534</span>c <span class="number">29f</span>d <span class="number">4883</span> ec08 e8ef fdff  .+..SL).H.......</span><br><span class="line"><span class="number">00001210</span>: ff48 c1fd <span class="number">0374</span> <span class="number">1f</span>31 db0f <span class="number">1f</span>80 <span class="number">0000</span> <span class="number">0000</span>  .H...t<span class="number">.1</span>........</span><br><span class="line"><span class="number">00001220</span>: <span class="number">4</span>c89 f24c <span class="number">89</span>ee <span class="number">4489</span> e741 ff14 df48 <span class="number">83</span>c3  L..L..D..A...H..</span><br><span class="line"><span class="number">00001230</span>: <span class="number">0148</span> <span class="number">39</span>dd <span class="number">75</span>ea <span class="number">4883</span> c408 <span class="number">5b</span>5d <span class="number">415</span>c <span class="number">415</span>d  .H9.u.H...[]A\A]</span><br><span class="line"><span class="number">00001240</span>: <span class="number">415</span>e <span class="number">415f</span> c366 <span class="number">662</span>e <span class="number">0f</span>1f <span class="number">8400</span> <span class="number">0000</span> <span class="number">0000</span>  A^A_.ff.........</span><br></pre></td></tr></table></figure><hr><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;a.out fawe</span><br><span class="line">cheking passwd!</span><br><span class="line">WRONG !</span><br><span class="line"></span><br><span class="line">vim a.out </span><br><span class="line"></span><br><span class="line">.&#x2F;a.out fawe</span><br><span class="line">cheking passwd!</span><br><span class="line">ok you got me</span><br></pre></td></tr></table></figure><hr><h3 id="binaryninga"><a href="#binaryninga" class="headerlink" title="binaryninga"></a>binaryninga</h3><hr><p>有一些GUI工具可以很简单的完成这些步骤，类似的有 binaryninga, 其他的可以在liveoverflow的节目查询<br>蓝色的表示true分支，红色的flase分支，我们只要屏蔽掉检查的分支，直接过去就可以了<br><img src="patchbinary.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;通过修改bin文件，跳过字符串匹配，密码检查。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; c</summary>
      
    
    
    
    <category term="liveoverflow" scheme="http://example.com/categories/liveoverflow/"/>
    
    
  </entry>
  
  <entry>
    <title>git 常用命令列表</title>
    <link href="http://example.com/2021/02/07/git/05_git_normal_cmd/"/>
    <id>http://example.com/2021/02/07/git/05_git_normal_cmd/</id>
    <published>2021-02-07T00:00:00.000Z</published>
    <updated>2021-02-08T18:30:31.676Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="git-config"><a href="#git-config" class="headerlink" title="git config"></a>git config</h3><hr><p>配置 Git 的相关参数。</p><p>Git 一共有3个配置文件：</p><ol><li>仓库级的配置文件：在仓库的 .git/.gitconfig，该配置文件只对所在的仓库有效。</li><li>全局配置文件：Mac 系统在 ~/.gitconfig，Windows 系统在 C:\Users&lt;用户名&gt;.gitconfig。</li><li>系统级的配置文件：在 Git 的安装目录下（Mac 系统下安装目录在 /usr/local/git）的 etc 文件夹中的 gitconfig。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看配置信息</span></span><br><span class="line"><span class="comment"># --local：仓库级，--global：全局级，--system：系统级</span></span><br><span class="line">$ git config &lt;--<span class="built_in">local</span> | --global | --system&gt; -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前生效的配置信息</span></span><br><span class="line">$ git config -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line"><span class="comment"># --local：仓库级，--global：全局级，--system：系统级</span></span><br><span class="line">$ git config &lt;--<span class="built_in">local</span> | --global | --system&gt; -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加配置项</span></span><br><span class="line"><span class="comment"># --local：仓库级，--global：全局级，--system：系统级</span></span><br><span class="line">$ git config &lt;--<span class="built_in">local</span> | --global | --system&gt; --add &lt;name&gt; &lt;value&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取配置项</span></span><br><span class="line">$ git config &lt;--<span class="built_in">local</span> | --global | --system&gt; --get &lt;name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除配置项</span></span><br><span class="line">$ git config &lt;--<span class="built_in">local</span> | --global | --system&gt; --<span class="built_in">unset</span> &lt;name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置提交记录中的用户信息</span></span><br><span class="line">$ git config --global user.name &lt;用户名&gt;</span><br><span class="line">$ git config --global user.email &lt;邮箱地址&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改Git缓存区的大小</span></span><br><span class="line"><span class="comment"># 如果提交的内容较大，默认缓存较小，提交会失败</span></span><br><span class="line"><span class="comment"># 缓存大小单位：B，例如：524288000（500MB）</span></span><br><span class="line">$ git config --global http.postBuffer &lt;缓存大小&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用 git status/git diff 命令时以高亮或彩色方式显示改动状态</span></span><br><span class="line">$ git config --global color.ui <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置可以缓存密码，默认缓存时间15分钟</span></span><br><span class="line">$ git config --global credential.helper cache</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置密码的缓存时间</span></span><br><span class="line"><span class="comment"># 缓存时间单位：秒</span></span><br><span class="line">$ git config --global credential.helper <span class="string">&#x27;cache --timeout=&lt;缓存时间&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置长期存储密码</span></span><br><span class="line">$ git config --global credential.helper store</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置忽略文件权限的改变</span></span><br><span class="line">$ git config --global core.filemode <span class="literal">false</span></span><br></pre></td></tr></table></figure><hr><h3 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认在当前目录下创建和版本库名相同的文件夹并下载版本到该文件夹下</span></span><br><span class="line">$ git <span class="built_in">clone</span> &lt;远程仓库的网址&gt;</span><br><span class="line"><span class="comment"># 指定本地仓库的目录</span></span><br><span class="line">$ git <span class="built_in">clone</span> &lt;远程仓库的网址&gt; &lt;本地目录&gt;</span><br><span class="line"><span class="comment"># -b 指定要克隆的分支，默认是master分支</span></span><br><span class="line">$ git <span class="built_in">clone</span> &lt;远程仓库的网址&gt; -b &lt;分支名称&gt; &lt;本地目录&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出已经存在的远程仓库</span></span><br><span class="line">$ git remote</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出远程仓库的详细信息，在别名后面列出URL地址</span></span><br><span class="line">$ git remote -v</span><br><span class="line">$ git remote --verbose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加远程仓库</span></span><br><span class="line">$ git remote add &lt;远程仓库的别名&gt; &lt;远程仓库的URL地址&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改远程仓库的别名</span></span><br><span class="line">$ git remote rename &lt;原远程仓库的别名&gt; &lt;新的别名&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定名称的远程仓库</span></span><br><span class="line">$ git remote remove &lt;远程仓库的别名&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改远程仓库的 URL 地址</span></span><br><span class="line">$ git remote set-url &lt;远程仓库的别名&gt; &lt;新的远程仓库URL地址&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出本地的所有分支，当前所在分支以 &quot;*&quot; 标出</span></span><br><span class="line">$ git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出本地的所有分支并显示最后一次提交，当前所在分支以 &quot;*&quot; 标出</span></span><br><span class="line">$ git branch -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新分支，新的分支基于上一次提交建立</span></span><br><span class="line">$ git branch &lt;分支名&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改分支名称</span></span><br><span class="line"><span class="comment"># 如果不指定原分支名称则为当前所在分支</span></span><br><span class="line">$ git branch -m [&lt;原分支名称&gt;] &lt;新的分支名称&gt;</span><br><span class="line"><span class="comment"># 强制修改分支名称</span></span><br><span class="line">$ git branch -M [&lt;原分支名称&gt;] &lt;新的分支名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定的本地分支</span></span><br><span class="line">$ git branch -d &lt;分支名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制删除指定的本地分支</span></span><br><span class="line">$ git branch -D &lt;分支名称&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到已存在的指定分支</span></span><br><span class="line">$ git checkout &lt;分支名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并切换到指定的分支，保留所有的提交记录</span></span><br><span class="line"><span class="comment"># 等同于 &quot;git branch&quot; 和 &quot;git checkout&quot; 两个命令合并</span></span><br><span class="line">$ git checkout -b &lt;分支名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并切换到指定的分支，删除所有的提交记录</span></span><br><span class="line">$ git checkout --orphan &lt;分支名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换掉本地的改动，新增的文件和已经添加到暂存区的内容不受影响</span></span><br><span class="line">$ git checkout &lt;文件路径&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="git-cherry-pick"><a href="#git-cherry-pick" class="headerlink" title="git cherry-pick"></a>git cherry-pick</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把已经提交的记录合并到当前分支</span></span><br><span class="line">$ git cherry-pick &lt;commit ID&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="git-fetch"><a href="#git-fetch" class="headerlink" title="git fetch"></a>git fetch</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将远程仓库所有分支的最新版本全部取回到本地</span></span><br><span class="line">$ git fetch &lt;远程仓库的别名&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将远程仓库指定分支的最新版本取回到本地</span></span><br><span class="line">$ git fetch &lt;远程主机名&gt; &lt;分支名&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 比较当前文件和暂存区中文件的差异，显示没有暂存起来的更改</span></span><br><span class="line">$ git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较暂存区中的文件和上次提交时的差异</span></span><br><span class="line">$ git diff --cached</span><br><span class="line">$ git diff --staged</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较当前文件和上次提交时的差异</span></span><br><span class="line">$ git diff HEAD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看从指定的版本之后改动的内容</span></span><br><span class="line">$ git diff &lt;commit ID&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较两个分支之间的差异</span></span><br><span class="line">$ git diff &lt;分支名称&gt; &lt;分支名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看两个分支分开后各自的改动内容</span></span><br><span class="line">$ git diff &lt;分支名称&gt;...&lt;分支名称&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h3><hr><p>从远程仓库获取最新版本并合并到本地。<br>首先会执行 git fetch，然后执行 git merge，把获取的分支的 HEAD 合并到当前分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从远程仓库获取最新版本。</span></span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure><hr><h3 id="git-push"><a href="#git-push" class="headerlink" title="git  push"></a>git  push</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把本地仓库的分支推送到远程仓库的指定分支</span></span><br><span class="line">$ git push &lt;远程仓库的别名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定的远程仓库的分支</span></span><br><span class="line">$ git push &lt;远程仓库的别名&gt; :&lt;远程分支名&gt;</span><br><span class="line">$ git push &lt;远程仓库的别名&gt; --delete &lt;远程分支名&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重置暂存区，但文件不受影响</span></span><br><span class="line"><span class="comment"># 相当于将用 &quot;git add&quot; 命令更新到暂存区的内容撤出暂存区，可以指定文件</span></span><br><span class="line"><span class="comment"># 没有指定 commit ID 则默认为当前 HEAD</span></span><br><span class="line">$ git reset [&lt;文件路径&gt;]</span><br><span class="line">$ git reset --mixed [&lt;文件路径&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改</span></span><br><span class="line">$ git reset &lt;commit ID&gt;</span><br><span class="line">$ git reset --mixed &lt;commit ID&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改</span></span><br><span class="line"><span class="comment"># 相当于调用 &quot;git reset --mixed&quot; 命令后又做了一次 &quot;git add&quot;</span></span><br><span class="line">$ git reset --soft &lt;commit ID&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件也修改了</span></span><br><span class="line">$ git reset --hard &lt;commit ID&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="git-tag"><a href="#git-tag" class="headerlink" title="git tag"></a>git tag</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印所有的标签</span></span><br><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加轻量标签，指向提交对象的引用，可以指定之前的提交记录</span></span><br><span class="line">$ git tag &lt;标签名称&gt; [&lt;commit ID&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加带有描述信息的附注标签，可以指定之前的提交记录</span></span><br><span class="line">$ git tag -a &lt;标签名称&gt; -m &lt;标签描述信息&gt; [&lt;commit ID&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定的标签</span></span><br><span class="line">$ git checkout &lt;标签名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看标签的信息</span></span><br><span class="line">$ git show &lt;标签名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定的标签</span></span><br><span class="line">$ git tag -d &lt;标签名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将指定的标签提交到远程仓库</span></span><br><span class="line">$ git push &lt;远程仓库的别名&gt; &lt;标签名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将本地所有的标签全部提交到远程仓库</span></span><br><span class="line">$ git push &lt;远程仓库的别名&gt; –tags</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="git-mv"><a href="#git-mv" class="headerlink" title="git mv"></a>git mv</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重命名指定的文件或者文件夹</span></span><br><span class="line">$ git mv &lt;源文件/文件夹&gt; &lt;目标文件/文件夹&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 移除跟踪指定的文件，并从本地仓库的文件夹中删除</span></span><br><span class="line">$ git rm &lt;文件路径&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除跟踪指定的文件夹，并从本地仓库的文件夹中删除</span></span><br><span class="line">$ git rm -r &lt;文件夹路径&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除跟踪指定的文件，在本地仓库的文件夹中保留该文件</span></span><br><span class="line">$ git rm --cached</span><br></pre></td></tr></table></figure><hr><h3 id="git-删除远程不存在的分支-协同开发时，其他人删了远程分支"><a href="#git-删除远程不存在的分支-协同开发时，其他人删了远程分支" class="headerlink" title="git 删除远程不存在的分支 ( 协同开发时，其他人删了远程分支 )"></a>git 删除远程不存在的分支 ( 协同开发时，其他人删了远程分支 )</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 pull 命令，添加 -p 参数</span></span><br><span class="line">$ git pull -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等同于下面的命令</span></span><br><span class="line">$ git fetch -p</span><br><span class="line">$ git fetch --prune origin</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;git-config&quot;&gt;&lt;a href=&quot;#git-config&quot; class=&quot;headerlink&quot; title=&quot;git config&quot;&gt;&lt;/a&gt;git config&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;配置 Git 的相关参数。&lt;/p&gt;
&lt;p&gt;Git 一共有</summary>
      
    
    
    
    <category term="git" scheme="http://example.com/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>MarkDown Language Reference</title>
    <link href="http://example.com/2021/02/07/markdown/03_language_markdown_ref/"/>
    <id>http://example.com/2021/02/07/markdown/03_language_markdown_ref/</id>
    <published>2021-02-07T00:00:00.000Z</published>
    <updated>2021-02-08T18:30:31.680Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="#%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98">一级标题</a><ul><li><a href="#%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98">二级标题</a><ul><li><a href="#%E4%B8%89%E7%BA%A7%E6%A0%87%E9%A2%98">三级标题</a><ul><li><a href="#%E5%9B%9B%E7%BA%A7%E6%A0%87%E9%A2%98">四级标题</a><ul><li><a href="#%E4%BA%94%E7%BA%A7%E6%A0%87%E9%A2%98">五级标题</a></li></ul></li></ul></li></ul></li><li><a href="#-%E5%85%AD%E7%BA%A7%E6%A0%87%E9%A2%98">###### 六级标题</a><ul><li><a href="#%E4%BB%A3%E7%A0%81%E5%9D%97">代码块</a></li><li><a href="#%E8%A1%A8%E6%A0%BC">表格</a></li></ul></li><li><a href="#-%E5%8D%95%E5%85%83%E6%A0%BC---%E5%8D%95%E5%85%83%E6%A0%BC-">| 单元格  | 单元格 |</a><ul><li><a href="#%E7%BA%A2%E8%89%B2%E5%AD%97%E4%BD%93">红色字体</a></li><li><a href="#%E6%B3%A8%E9%87%8A">注释</a></li></ul></li><li><a href="#">~~~</a><ul><li><a href="#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8">任务列表</a></li></ul></li><li><a href="#--x-%E4%BB%BB%E5%8A%A1%E4%BA%8C-%E5%B7%B2%E5%81%9A%E4%BB%BB%E5%8A%A1----%E7%A9%BA%E6%A0%BC--x">- [x] 任务二 已做任务 <code>- + 空格 + [x]</code></a><ul><li><a href="#%E6%8D%A2%E8%A1%8C-%E5%90%8E%E9%9D%A2%E7%A9%BA2%E6%A0%BC">换行 (后面空2格)</a></li><li><a href="#%E7%A9%BA%E8%A1%8C">空行</a></li><li><a href="#%E5%AF%B9%E9%BD%90%E6%96%B9%E5%BC%8F">对齐方式</a></li><li><a href="#%E6%96%9C%E4%BD%93%E7%B2%97%E4%BD%93%E5%88%A0%E9%99%A4%E7%BA%BF%E4%B8%8B%E5%88%92%E7%BA%BF%E8%83%8C%E6%99%AF%E9%AB%98%E4%BA%AE">斜体、粗体、删除线、下划线、背景高亮</a></li><li><a href="#%E8%B6%85%E9%93%BE%E6%8E%A5%E9%A1%B5%E5%86%85%E9%93%BE%E6%8E%A5%E8%87%AA%E5%8A%A8%E9%93%BE%E6%8E%A5">超链接、页内链接、自动链接</a></li><li><a href="#%E6%B3%A8%E8%84%9A">注脚</a></li><li><a href="#%E8%87%AA%E5%8A%A8%E9%93%BE%E6%8E%A5">自动链接</a></li><li><a href="#%E6%8F%92%E5%9B%BE%E7%89%87">插图片</a></li><li><a href="#%E5%A4%9A%E7%BA%A7%E5%BC%95%E7%94%A8">多级引用</a></li><li><a href="#%E5%AD%97%E4%BD%93%E5%AD%97%E5%8F%B7%E9%A2%9C%E8%89%B2">字体、字号、颜色</a></li><li><a href="#%E6%B5%81%E7%A8%8B%E5%9B%BE">流程图</a><ul><li><a href="#%E5%88%86%E5%89%B2%E7%BA%BF">分割线</a></li></ul></li><li><a href="#html%E8%A1%A8%E5%8D%95">HTML表单</a></li><li><a href="#%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6">特殊字符</a></li></ul></li></ul></li></ul><hr><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><h2 id="Markdown-All-in-One-Create-Table-of-Contents"><a href="#Markdown-All-in-One-Create-Table-of-Contents" class="headerlink" title="  Markdown All in One: Create Table of Contents"></a>  Markdown All in One: Create Table of Contents</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题  "></a>六级标题  <!--最多6级标题--></h6><hr><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>$符，加行号</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$   <span class="keyword">int</span> a = <span class="number">4</span> ;</span><br></pre></td></tr></table></figure><p>VS</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">4</span> ;</span><br></pre></td></tr></table></figure><hr><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><hr><h3 id="红色字体"><a href="#红色字体" class="headerlink" title="红色字体"></a>红色字体</h3><hr><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">&#x27;display: none&#x27;</span>&gt;</span><br><span class="line">哈哈我是注释，不会在浏览器中显示。</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><ul><li><input disabled="" type="checkbox"> 任务一 未做任务 <code>- + 空格 + [ ]</code></li><li><input checked="" disabled="" type="checkbox"> 任务二 已做任务 <code>- + 空格 + [x]</code></li></ul><hr><h3 id="换行-后面空2格"><a href="#换行-后面空2格" class="headerlink" title="换行 (后面空2格)"></a>换行 (后面空2格)</h3><p>nihao<br>faweafe</p><hr><h3 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h3><p>在编辑的时候有多少个空行(只要这一行只有回车或者space没有其他的字符就算空行)，在渲染之后，只隔着一行。</p><hr><h3 id="对齐方式"><a href="#对齐方式" class="headerlink" title="对齐方式"></a>对齐方式</h3><center>行中心对齐</center><p align="left">行左对齐</p><p align="right">行右对齐</p><hr><h3 id="斜体、粗体、删除线、下划线、背景高亮"><a href="#斜体、粗体、删除线、下划线、背景高亮" class="headerlink" title="斜体、粗体、删除线、下划线、背景高亮"></a>斜体、粗体、删除线、下划线、背景高亮</h3><p><em>斜体</em>或<em>斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del><br>++下划线++<br>==背景高亮==</p><hr><h3 id="超链接、页内链接、自动链接"><a href="#超链接、页内链接、自动链接" class="headerlink" title="超链接、页内链接、自动链接"></a>超链接、页内链接、自动链接</h3><ul><li>方法一<br>[]里写链接文字，()里写链接地址, ()中的””中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字，链接地址与title前有一个空格。</li></ul><p>作者：择势量投<br>链接：<a href="https://www.jianshu.com/p/ebe52d2d468f">https://www.jianshu.com/p/ebe52d2d468f</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br>欢迎阅读 <a href="https://www.jianshu.com/u/16d77399d3a7" title="择势勤">择势勤</a></p><ul><li>方法二<br>我经常去的几个网站<a href="http://www.google.com/">Google</a>、<a href="http://www.leanote.com/">Leanote</a>。</li></ul><hr><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><p>使用 Markdown<a href="Markdown%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BA%AF%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">^1</a>可以效率的书写文档, 直接转换成 HTML[^2]。</p><p>[^2]:HyperText Markup Language 超文本标记语言</p><hr><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：<br>&lt;<a href="http://example.com/">http://example.com/</a>&gt; &emsp;&emsp;<br>&lt;<a href="mailto:&#x61;&#100;&#x64;&#114;&#x65;&#x73;&#x73;&#64;&#101;&#120;&#x61;&#109;&#112;&#x6c;&#x65;&#x2e;&#99;&#x6f;&#x6d;">&#x61;&#100;&#x64;&#114;&#x65;&#x73;&#x73;&#64;&#101;&#120;&#x61;&#109;&#112;&#x6c;&#x65;&#x2e;&#99;&#x6f;&#x6d;</a>&gt;</p><hr><h3 id="插图片"><a href="#插图片" class="headerlink" title="插图片"></a>插图片</h3><ol><li>_config.yml 中配置 post_asset_folder: true</li><li>在md文件同级目录建立同名文件夹，将图片放入，就可以相对的引用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](patchbinary.png)</span><br></pre></td></tr></table></figure><img src="patchbinary.png"></li></ol><!-- <center>  <!--开始居中对齐--><!-- ![GitHub set up](./images/1.jpg "图片Title")![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif "图片Title")格式: ![图片Alt](图片地址 "图片Title") --><!-- </center> 结束居中对齐 --><hr><h3 id="多级引用"><a href="#多级引用" class="headerlink" title="多级引用"></a>多级引用</h3><blockquote><blockquote><blockquote><p>请问 Markdwon 怎么用？ - 小白<br>自己看教程！ - 愤青<br>教程在哪？ - 小白</p></blockquote></blockquote></blockquote><hr><h3 id="字体、字号、颜色"><a href="#字体、字号、颜色" class="headerlink" title="字体、字号、颜色"></a>字体、字号、颜色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face&#x3D;&quot;黑体&quot;&gt;我是黑体字&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;#0099ff size&#x3D;12 face&#x3D;&quot;黑体&quot;&gt;黑体&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;gray size&#x3D;5&gt;gray&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;#00ffff size&#x3D;3&gt;null&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color=#0099ff size=12 face="黑体">黑体</font><br><font color=gray size=5>gray</font><br><font color=#00ffff size=3>null</font></p><hr><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A--&gt;B</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">A-&gt;&gt;B: How are you?</span><br><span class="line">B-&gt;&gt;A: Great!</span><br></pre></td></tr></table></figure><hr><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><hr><hr><hr><hr><hr><hr><h3 id="HTML表单"><a href="#HTML表单" class="headerlink" title="HTML表单"></a>HTML表单</h3><center><table><tr><th rowspan="2">值班人员</th><th>星期一</th><th>星期二</th><th>星期三</th></tr><tr><td>李强</td><td>张明</td><td>王平</td></tr></table></center><hr><h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><p>｜特殊字符 | 描述 | 字符的代|<br> |  —-  | —-  | —-  |<br>｜   | 空格符 |    &nbsp;|<br>｜&lt; | 小于号 |    &lt; |<br>｜ &gt; | 大于号 | &gt; |<br>｜&amp;     | 和号    | &amp;|<br>｜￥     | 人民币 | &yen;|<br>｜©     | 版权    | &copy;|<br>｜®     | 注册商标    | &reg;|<br>｜°C | 摄氏度 | &deg;|<br>｜±     | 正负号 | &plusmn;|<br>｜×    | 乘号 | &times;|<br>｜÷    | 除号 | &divide;|<br>｜²    | 平方（上标²）| &sup2;|<br>｜³    | 立方（上标³）| &sup3;|</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98&quot;&gt;一级标题&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98&quot;&gt;二级标题&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;</summary>
      
    
    
    
    <category term="markdown" scheme="http://example.com/categories/markdown/"/>
    
    
  </entry>
  
</feed>
