<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XINHUALU&#39;S BLOG</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-08T06:52:30.819Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>XinHua Lu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/06/08/idea/%E8%BF%9C%E6%8E%A7%E6%A8%A1%E5%9D%97/"/>
    <id>http://example.com/2021/06/08/idea/%E8%BF%9C%E6%8E%A7%E6%A8%A1%E5%9D%97/</id>
    <published>2021-06-08T06:52:30.819Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    <content type="html"><![CDATA[<h1 id="手机程控模块"><a href="#手机程控模块" class="headerlink" title="手机程控模块"></a>手机程控模块</h1><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="zephyr"><a href="#zephyr" class="headerlink" title="zephyr"></a>zephyr</h3><ul><li>8266驱动</li><li>MQTT协议移植</li><li>thread1 : MQTT 接收事件</li><li>thread2：MQTT 发送事件</li><li>用户APP功能自定义</li></ul><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><h3 id="stm32f0-嵌入式主控端"><a href="#stm32f0-嵌入式主控端" class="headerlink" title="stm32f0 嵌入式主控端"></a>stm32f0 嵌入式主控端</h3><h3 id="8266模块"><a href="#8266模块" class="headerlink" title="8266模块"></a>8266模块</h3><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><h3 id="终端，控制端"><a href="#终端，控制端" class="headerlink" title="终端，控制端"></a>终端，控制端</h3><p><em>XMind - Trial Version</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;手机程控模块&quot;&gt;&lt;a href=&quot;#手机程控模块&quot; class=&quot;headerlink&quot; title=&quot;手机程控模块&quot;&gt;&lt;/a&gt;手机程控模块&lt;/h1&gt;&lt;h2 id=&quot;软件&quot;&gt;&lt;a href=&quot;#软件&quot; class=&quot;headerlink&quot; title=&quot;软件&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>BiosInterFace update 的思路</title>
    <link href="http://example.com/2021/06/08/bios/06_Biso_interface_update/"/>
    <id>http://example.com/2021/06/08/bios/06_Biso_interface_update/</id>
    <published>2021-06-08T06:52:30.819Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><hr><ul><li>PMFW<br>专门控制CLK/power的一个bin ,</li><li>SMU<br>BIOS的菜单控制，设置值，分发值到具体的模块<br>SMU和PMFW通过msg机制更新biosinterfaceTable的结构体来通信。</li><li>MSG机制<br>一端，向某个寄存器写入消息ID，消息参数，poll 等待response，另一端是硬件中断，拿到硬件中断后，处理写入response消息。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;PMFW&lt;br&gt;专门控制CLK/power的一个bin ,&lt;/li&gt;
&lt;li&gt;SMU&lt;br&gt;BIOS的菜单控</summary>
      
    
    
    
    <category term="bios" scheme="http://example.com/categories/bios/"/>
    
    
  </entry>
  
  <entry>
    <title>BIOS protect mode 总结</title>
    <link href="http://example.com/2021/06/08/bios/00_bios_protect_mode_enable_flow/"/>
    <id>http://example.com/2021/06/08/bios/00_bios_protect_mode_enable_flow/</id>
    <published>2021-06-08T06:52:30.615Z</published>
    <updated>2021-06-08T06:52:30.615Z</updated>
    
    <content type="html"><![CDATA[<h3 id="保护模式流程："><a href="#保护模式流程：" class="headerlink" title="保护模式流程："></a>保护模式流程：</h3><hr><pre><code>1. 准备GDT。2. 用lgdt加载gdtr。3. 打开A20。4. 置cr0的PE位。5. 跳转，进入保护模式。</code></pre><hr><h3 id="汇编流程"><a href="#汇编流程" class="headerlink" title="汇编流程"></a>汇编流程</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">; Save BIST state <span class="keyword">in</span> EAX</span><br><span class="line">mov     ebp,  eax   </span><br><span class="line">; BspApCheck</span><br><span class="line">mov     ecx, APIC_BASE_ADDRESS  ; MSR:0000_001B</span><br><span class="line">rdmsr     // 读取ecx地址中的值，赋给 edx, eax( low 16 bit ) </span><br><span class="line">/*  </span><br><span class="line">BSC: boot strap core. Read-write,Volatile. Reset: X. </span><br><span class="line">0=The core is not the boot core of the BSP. </span><br><span class="line">1=The core is the boot core of the BSP.</span><br><span class="line">*/ </span><br><span class="line">// 找到最先启动的核</span><br><span class="line">bt      eax, APIC_BSC           ; Is this the BSC?   APIC_BSC = 8, bt,检测某一位是否被置位， 这里就是检测第8位 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mov     esi,  OFFSET GdtDesc  // 初始化GDT把GDT地址赋给esi. </span><br><span class="line"></span><br><span class="line">GdtDesc:                                                ; GDT descriptor</span><br><span class="line">OffsetGDTDesc       EQU     $ - Flat32Start</span><br><span class="line">DW      GDT_SIZE - 1                ; GDT <span class="built_in">limit</span></span><br><span class="line">DD      OFFSET BootGDTtable ; GDT base address</span><br><span class="line"></span><br><span class="line">汇编定义了 BootGDTtable， 里面有数据段，代码段等各段定义</span><br><span class="line"></span><br><span class="line">DB      66h     // 本意是存储一个值为66H, 但是这里是80386芯片BUG 引入的命令用于切换16/32 位，</span><br><span class="line"></span><br><span class="line">66 8b c3  32位机器码命令</span><br><span class="line">8b c3     16位的命令</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">1. fword表示操作的是32位的地址 ， （ 配置上面的66 命令，确保是32位操作 ？）</span><br><span class="line">2. 之前包GDT的地址赋给了esi , si是esi的低16位，</span><br><span class="line">3， 这条命令是把，esi 低16位赋给GDTR寄存器，方便其他地方调用</span><br><span class="line">*/</span><br><span class="line">lgdt    fword ptr cs:[si]   </span><br><span class="line">/*</span><br><span class="line">读出CR0(32位的控制寄存器)到eax ； </span><br><span class="line">[0] PE  protect <span class="built_in">enable</span> 是否启动保护模式</span><br><span class="line">[1] MP  moniter coprocessor 监控协处理器</span><br><span class="line">[2] EM  <span class="built_in">emulate</span> coprocessor 模拟协处理器 = 1 无法使用协处理器</span><br><span class="line">[3] TS  task switch, 任务完成置1 ， 置1后无法使用协处理器</span><br><span class="line">[4] 微处理器的拓展位，处理器类型  287协处理器，387浮点协处理器</span><br><span class="line">[31] 分页使能，是否使用page机制</span><br><span class="line">*/</span><br><span class="line">mov     eax, cr0                           ; Get control register 0</span><br><span class="line">/*</span><br><span class="line">启动保护模式 </span><br><span class="line">启动协处理器</span><br><span class="line">*/</span><br><span class="line">or      eax, 00000003h                     ; Set PE bit (bit <span class="comment">#0) &amp; MP bit (bit #1)</span></span><br><span class="line">mov     cr0, eax                           ; Activate protected mode</span><br><span class="line">/*</span><br><span class="line">读出CR４　</span><br><span class="line">[0] VME  virtaul-8086 mode extensions  给运行 invirtual-8086的软件硬件加速</span><br><span class="line">[1] PVI  protect-mode virtaul interrupt support. ( 中断反应在 RFLAGS 寄存器红的 VIF/VIP 2个bit中 )</span><br><span class="line">[2] TSD  time-stamp <span class="built_in">disable</span>  0/1 表示是否可以读取 RDTSC/RDTSCP </span><br><span class="line">[3] DE   Debug extension , <span class="built_in">enable</span> IO breakpoint. </span><br><span class="line">[4] PSE  page-size extension</span><br><span class="line">[5] PAE  物理地址拓展， 使能的话，支持2M的超级页 </span><br><span class="line">[6] MCE  machine-check <span class="built_in">enable</span> </span><br><span class="line">[7] PGE  page global <span class="built_in">enable</span></span><br><span class="line">[8] PCE  performance-monitoring counter <span class="built_in">enable</span> </span><br><span class="line">[9] OSFXSR  256/128bit media 指令使能</span><br><span class="line">[10] OSXMMEXCPT <span class="built_in">enable</span> 处理 256/128bit media 指令异常 </span><br><span class="line">*/</span><br><span class="line">mov     eax, cr4                           ; Get control register 4</span><br><span class="line">or      eax, 00000600h                     ; Set OSFXSR bit (bit <span class="comment">#9) &amp; OSXMMEXCPT bit (bit #10)</span></span><br><span class="line">/*</span><br><span class="line">使能这俩位</span><br><span class="line">[9] OSFXSR  256/128bit media 指令使能</span><br><span class="line">[10] OSXMMEXCPT <span class="built_in">enable</span> 处理 256/128bit media 指令异常 </span><br><span class="line">*/</span><br><span class="line">mov     cr4, eax</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 段初始化</span><br><span class="line">mov     ax, SYS_DATA_SEL   // 复制申请的系统数据段的地址给ax </span><br><span class="line"></span><br><span class="line">; System data segment descriptor</span><br><span class="line">SYS_DATA_SEL        equ     $ - GDT_BASE               ; Selector [0x18]</span><br><span class="line">DW      0FFFFh                     ; <span class="built_in">limit</span> 0xFFFFF</span><br><span class="line">DW      0                          ; base 0</span><br><span class="line">DB      0</span><br><span class="line">DB      093h                       ; present, ring 0, data, expand-up, not-writable</span><br><span class="line">DB      0CFh                       ; page-granular, 32-bit</span><br><span class="line">DB      0</span><br><span class="line"></span><br><span class="line">// 同样的地址赋给各个段寄存器</span><br><span class="line">mov     ds, ax</span><br><span class="line">mov     es, ax</span><br><span class="line">mov     fs, ax</span><br><span class="line">mov     gs, ax</span><br><span class="line">mov     ss, ax </span><br><span class="line">// 目前前面都是在protect 16模式下 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; Go to Protected32  </span><br><span class="line">mov esi, offset NemInitLinearAddress</span><br><span class="line"></span><br><span class="line">NemInitLinearAddress   LABEL   FWORD // 没有定义东西</span><br><span class="line"></span><br><span class="line">jmp     fword ptr cs:[si]   // 这里是个逻辑地址， </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;保护模式流程：&quot;&gt;&lt;a href=&quot;#保护模式流程：&quot; class=&quot;headerlink&quot; title=&quot;保护模式流程：&quot;&gt;&lt;/a&gt;保护模式流程：&lt;/h3&gt;&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;1. 准备GDT。
2. 用lgdt加载gdtr。
3. 打开A20。
4</summary>
      
    
    
    
    <category term="bios" scheme="http://example.com/categories/bios/"/>
    
    
  </entry>
  
  <entry>
    <title>BIOS 各种流程</title>
    <link href="http://example.com/2021/06/08/bios/02_bios_flow/"/>
    <id>http://example.com/2021/06/08/bios/02_bios_flow/</id>
    <published>2021-06-08T06:52:30.615Z</published>
    <updated>2021-06-08T06:52:30.615Z</updated>
    
    <content type="html"><![CDATA[<h3 id="reference-file-list"><a href="#reference-file-list" class="headerlink" title="reference file list"></a>reference file list</h3><hr><a href="/2021/06/08/bios/02_bios_flow/edk2-DecSpecification.pdf" title="edk2-DecSpecification.pdf">edk2-DecSpecification.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/edk2-DscSpecification.pdf" title="edk2-DscSpecification.pdf">edk2-DscSpecification.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/edk2-FdfSpecification.pdf" title="edk2-FdfSpecification.pdf">edk2-FdfSpecification.pdf</a>   <br><a href="/2021/06/08/bios/02_bios_flow/edk2-IdfSpecification.pdf" title="edk2-IdfSpecification.pdf">edk2-IdfSpecification.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/edk2-PcdSpecification.pdf" title="edk2-PcdSpecification.pdf">edk2-PcdSpecification.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/edk2-UniSpecification.pdf" title="edk2-UniSpecification.pdf">edk2-UniSpecification.pdf</a> <br><a href="/2021/06/08/bios/02_bios_flow/edk2-VfrSpecification.pdf" title="edk2-VfrSpecification.pdf">edk2-VfrSpecification.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/edk2-BuildSpecification.pdf" title="edk2-BuildSpecification.pdf">edk2-BuildSpecification.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/edk2-TemplateSpecification.pdf" title="edk2-TemplateSpecification.pdf">edk2-TemplateSpecification.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/EDK_II_Secure_Coding_Guide.pdf" title="EDK_II_Secure_Coding_Guide.pdf">EDK_II_Secure_Coding_Guide.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/UEFI_Driver_HII_Win_Lab_Guide.pdf" title="UEFI_Driver_HII_Win_Lab_Guide.pdf">UEFI_Driver_HII_Win_Lab_Guide.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/UEFI_Driver_HII_Linux_Lab_Guide.pdf" title="UEFI_Driver_HII_Linux_Lab_Guide.pdf">UEFI_Driver_HII_Linux_Lab_Guide.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/edk2-UefiDriverWritersGuide-master.pdf" title="edk2-UefiDriverWritersGuide-master.pdf">edk2-UefiDriverWritersGuide-master.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/edk2-CCodingStandardsSpecification.pdf" title="edk2-CCodingStandardsSpecification.pdf">edk2-CCodingStandardsSpecification.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/ATBB-Memory_Protection_in_UEFI_BIOS.pdf" title="ATBB-Memory_Protection_in_UEFI_BIOS.pdf">ATBB-Memory_Protection_in_UEFI_BIOS.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/Understanding_UEFI_Secure_Boot_Chain.pdf" title="Understanding_UEFI_Secure_Boot_Chain.pdf">Understanding_UEFI_Secure_Boot_Chain.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/edk2-MetaDataExpressionSyntaxSpecification.pdf" title="edk2-MetaDataExpressionSyntaxSpecification.pdf">edk2-MetaDataExpressionSyntaxSpecification.pdf</a>  <br><a href="/2021/06/08/bios/02_bios_flow/edk2-PythonDevelopmentProcessSpecification.pdf" title="edk2-PythonDevelopmentProcessSpecification.pdf">edk2-PythonDevelopmentProcessSpecification.pdf</a>  <br>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;reference-file-list&quot;&gt;&lt;a href=&quot;#reference-file-list&quot; class=&quot;headerlink&quot; title=&quot;reference file list&quot;&gt;&lt;/a&gt;reference file list&lt;/h3&gt;&lt;hr&gt;
</summary>
      
    
    
    
    <category term="bios" scheme="http://example.com/categories/bios/"/>
    
    
  </entry>
  
  <entry>
    <title>自己实现动态内存分配思路（有点伪）</title>
    <link href="http://example.com/2021/06/08/c/dynamic_mem_alloc/"/>
    <id>http://example.com/2021/06/08/c/dynamic_mem_alloc/</id>
    <published>2021-06-08T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="伪动态内存分配"><a href="#伪动态内存分配" class="headerlink" title="伪动态内存分配"></a>伪动态内存分配</h3><hr><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MEMMAXSIZE 100</span></span><br><span class="line"><span class="keyword">int</span> mem[MEMMAXSIZE];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> used;</span><br><span class="line">    <span class="keyword">int</span> index_baseaddr;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> *<span class="title">HEAD</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">splitmem</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">int</span> allsize, <span class="keyword">int</span> needsize)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>  index+allsize-needsize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">struct datanode * <span class="title">spaceRequest</span><span class="params">(<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> *<span class="title">p</span> =</span> HEAD;</span><br><span class="line">    <span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        p = p-&gt;next; </span><br><span class="line">        <span class="keyword">if</span> (p-&gt;used == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;size &gt;= size)&#123;</span><br><span class="line">                <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> *<span class="title">newnode</span> =</span> <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct  datanode));</span><br><span class="line">                newnode-&gt;index_baseaddr = splitmem(p-&gt;index_baseaddr,p-&gt;size,size);</span><br><span class="line">                newnode-&gt;size = size;</span><br><span class="line">                newnode-&gt;used = <span class="number">1</span>;</span><br><span class="line">                p-&gt;size -= size;</span><br><span class="line">                newnode-&gt;next = p-&gt;next;</span><br><span class="line">                p-&gt;next = newnode;</span><br><span class="line">                <span class="keyword">return</span> newnode;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">spaceFree</span><span class="params">(struct datanode* space)</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> *<span class="title">p</span> =</span> HEAD;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> *<span class="title">q</span>,*<span class="title">pp</span>;</span></span><br><span class="line">    <span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        q = p;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        pp = p-&gt;next;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;index_baseaddr == space-&gt;index_baseaddr &amp;&amp; p-&gt;size == space-&gt;size)&#123;</span><br><span class="line">            p-&gt;used = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (q-&gt;used == <span class="number">0</span>)&#123;</span><br><span class="line">                q-&gt;size += p-&gt;size;</span><br><span class="line">                q-&gt;next = p-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (pp != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (pp-&gt;used==<span class="number">0</span>)&#123;</span><br><span class="line">                    p-&gt;size += pp-&gt;size;</span><br><span class="line">                    p-&gt;next = pp-&gt;next;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">memPrint</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> *<span class="title">p</span> =</span> HEAD;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        <span class="keyword">for</span>(i=p-&gt;index_baseaddr;i&lt;(p-&gt;index_baseaddr+p-&gt;size);i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;used == <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\e[0;32m%d  &quot;</span>,mem[i]);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\e[0m%d  &quot;</span>,mem[i]);</span><br><span class="line">            <span class="keyword">if</span>(count++ &gt; <span class="number">20</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                count = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n----------------------------------------------------------------\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">memInit</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> *<span class="title">p</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> *<span class="title">firstnode</span>;</span></span><br><span class="line">    p = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct datanode));</span><br><span class="line">    firstnode = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct datanode));</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    p-&gt;index_baseaddr = <span class="number">0</span>;</span><br><span class="line">    p-&gt;size = <span class="number">0</span>;</span><br><span class="line">    p-&gt;used = <span class="number">1</span>;</span><br><span class="line">    firstnode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    firstnode-&gt;used = <span class="number">0</span>;</span><br><span class="line">    firstnode-&gt;index_baseaddr = <span class="number">0</span>;</span><br><span class="line">    firstnode-&gt;size = MEMMAXSIZE;</span><br><span class="line">    p-&gt;next = firstnode;</span><br><span class="line">    HEAD = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    memInit();</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> * <span class="title">a</span> =</span> spaceRequest(<span class="number">10</span>);</span><br><span class="line">    memPrint();</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> * <span class="title">b</span> =</span> spaceRequest(<span class="number">2</span>);</span><br><span class="line">    memPrint();</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">datanode</span> * <span class="title">c</span> =</span> spaceRequest(<span class="number">4</span>);</span><br><span class="line">    memPrint();</span><br><span class="line"></span><br><span class="line">    spaceFree(a);</span><br><span class="line">    memPrint();</span><br><span class="line">    spaceFree(b);</span><br><span class="line">    memPrint();</span><br><span class="line">    spaceFree(c);</span><br><span class="line">    memPrint();        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="结果效果（绿色是申请的内存"><a href="#结果效果（绿色是申请的内存" class="headerlink" title="结果效果（绿色是申请的内存)"></a>结果效果（绿色是申请的内存)</h3><hr><p><img src="mem.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;伪动态内存分配&quot;&gt;&lt;a href=&quot;#伪动态内存分配&quot; class=&quot;headerlink&quot; title=&quot;伪动态内存分配&quot;&gt;&lt;/a&gt;伪动态内存分配&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td </summary>
      
    
    
    
    <category term="c" scheme="http://example.com/categories/c/"/>
    
    
  </entry>
  
  <entry>
    <title>cmake build summary</title>
    <link href="http://example.com/2021/06/08/c/cmake_build/"/>
    <id>http://example.com/2021/06/08/c/cmake_build/</id>
    <published>2021-06-08T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    <content type="html"><![CDATA[<p>cmake </p><hr><h3 id="最小例子"><a href="#最小例子" class="headerlink" title="最小例子"></a>最小例子</h3><hr><p>cmake_minimum_required(VERSION 3.10)<br>project(CalculateSqrt VERSION 1.0) # 设定工程名和版本号<br>add_executable(CalculateSqrt main.c)</p><hr><h3 id="指定头文件路径"><a href="#指定头文件路径" class="headerlink" title="指定头文件路径"></a>指定头文件路径</h3><hr><h1 id="指定项目编译的时候需要include的文件路径，PROJECT-BINARY-DIR变量为编译发生的目录，也就是make执行的目录，PROJECT-SOURCE-DIR为工程所在的目录"><a href="#指定项目编译的时候需要include的文件路径，PROJECT-BINARY-DIR变量为编译发生的目录，也就是make执行的目录，PROJECT-SOURCE-DIR为工程所在的目录" class="headerlink" title="指定项目编译的时候需要include的文件路径，PROJECT_BINARY_DIR变量为编译发生的目录，也就是make执行的目录，PROJECT_SOURCE_DIR为工程所在的目录"></a>指定项目编译的时候需要include的文件路径，PROJECT_BINARY_DIR变量为编译发生的目录，也就是make执行的目录，PROJECT_SOURCE_DIR为工程所在的目录</h1><h1 id="target-include-directories官方文档：https-cmake-org-cmake-help-v3-3-command-target-include-directories-html"><a href="#target-include-directories官方文档：https-cmake-org-cmake-help-v3-3-command-target-include-directories-html" class="headerlink" title="target_include_directories官方文档：https://cmake.org/cmake/help/v3.3/command/target_include_directories.html"></a>target_include_directories官方文档：<a href="https://cmake.org/cmake/help/v3.3/command/target_include_directories.html">https://cmake.org/cmake/help/v3.3/command/target_include_directories.html</a></h1><p>target_include_directories(CalculateSqrt PUBLIC “${PROJECT_BINARY_DIR}”)</p><hr><h3 id="编译系统的配置导入到头文件中"><a href="#编译系统的配置导入到头文件中" class="headerlink" title="编译系统的配置导入到头文件中"></a>编译系统的配置导入到头文件中</h3><hr><p>自动生成CalculateSqrtConfig.h文件，直接include， 可以用作开关定义<br>set(TestA 1) 或者  option(TestA “Test A” 1)<br>configure_file(CalculateSqrtConfig.h.in CalculateSqrtConfig.h)<br>CalculateSqrtConfig.h.in 文件中：<br>#define testA  @TestA@</p><hr><h3 id="添加子目录进入编译系统"><a href="#添加子目录进入编译系统" class="headerlink" title="添加子目录进入编译系统"></a>添加子目录进入编译系统</h3><hr><p>add_subdirectory(MathFunctions) </p><hr><h3 id="添加链接库"><a href="#添加链接库" class="headerlink" title="添加链接库"></a>添加链接库</h3><hr><h1 id="该指令的作用为将目标文件与库文件进行链接"><a href="#该指令的作用为将目标文件与库文件进行链接" class="headerlink" title="该指令的作用为将目标文件与库文件进行链接"></a>该指令的作用为将目标文件与库文件进行链接</h1><h1 id="target-link-libraries官方文档-https-cmake-org-cmake-help-latest-command-target-link-libraries-html"><a href="#target-link-libraries官方文档-https-cmake-org-cmake-help-latest-command-target-link-libraries-html" class="headerlink" title="target_link_libraries官方文档:https://cmake.org/cmake/help/latest/command/target_link_libraries.html"></a>target_link_libraries官方文档:<a href="https://cmake.org/cmake/help/latest/command/target_link_libraries.html">https://cmake.org/cmake/help/latest/command/target_link_libraries.html</a></h1><p>target_link_libraries(CalculateSqrt PUBLIC MathFunctions) </p><hr><h3 id="源码生成库"><a href="#源码生成库" class="headerlink" title="源码生成库"></a>源码生成库</h3><hr><h1 id="使用特定的源码为项目增加lib"><a href="#使用特定的源码为项目增加lib" class="headerlink" title="使用特定的源码为项目增加lib"></a>使用特定的源码为项目增加lib</h1><p>add_library(MathFunctions mysqrt.cpp) </p><hr><h3 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h3><hr><p>添加在CMakeList.txt<br>就是决定执行make install 的时候，拷贝哪些文件到lib/bin/include<br>install(TARGETS MathFunctions DESTINATION lib)<br>install(FILES MathFunctions.h DESTINATION include) </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;cmake &lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;最小例子&quot;&gt;&lt;a href=&quot;#最小例子&quot; class=&quot;headerlink&quot; title=&quot;最小例子&quot;&gt;&lt;/a&gt;最小例子&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;cmake_minimum_required(VERSION 3.10)&lt;b</summary>
      
    
    
    
    <category term="cmake" scheme="http://example.com/categories/cmake/"/>
    
    
  </entry>
  
  <entry>
    <title>HEXO Hacker 主题中文说明</title>
    <link href="http://example.com/2021/04/23/dev_utils/00_python_dev_lib_git/"/>
    <id>http://example.com/2021/04/23/dev_utils/00_python_dev_lib_git/</id>
    <published>2021-04-23T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="install-lib"><a href="#install-lib" class="headerlink" title="install lib"></a>install lib</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install GitPython <span class="comment">#在线安装会自动安装其依赖模块</span></span><br></pre></td></tr></table></figure><hr><h3 id="clone"><a href="#clone" class="headerlink" title="clone"></a>clone</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Repo.clone_from(<span class="string">&quot;git远程给仓库地址&quot;</span>,to_path=<span class="string">&quot;将要克隆到的本地仓库地址&quot;</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Repo.init(r<span class="string">&quot;C:\Users\Icey\Desktop\aa&quot;</span>) <span class="comment">#aa为要初始化的本地仓库</span></span><br></pre></td></tr></table></figure><hr><h3 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">repo = Repo(r<span class="string">&quot;C:\Users\Icey\Desktop\aa&quot;</span>) <span class="comment">#获取本地仓库对象</span></span><br><span class="line">index = repo.index <span class="comment">#获取本地仓库的暂存区对象</span></span><br><span class="line"><span class="comment">#index.add(r&#x27;*&#x27;) #将本地所有改动提交到暂存区</span></span><br><span class="line">index.add([<span class="string">&#x27;aaaa.txt&#x27;</span>]) <span class="comment">#将aaaa.txt文件提交到暂存区</span></span><br><span class="line">index.commit(<span class="string">&quot;此次提交备注信息&quot;</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="branch"><a href="#branch" class="headerlink" title="branch"></a>branch</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">repo.git.branch(<span class="string">&quot;dev&quot;</span>) <span class="comment">#新建dev分支</span></span><br><span class="line">repo.git.checkout(<span class="string">&quot;dev&quot;</span>) <span class="comment">#切换到dev分支</span></span><br></pre></td></tr></table></figure><hr><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">from git import Repo</span><br><span class="line">from git.repo.fun import is_git_dir</span><br><span class="line"></span><br><span class="line">class GitRepository(object):</span><br><span class="line">  <span class="comment">#初始化</span></span><br><span class="line">  def __init__(self,local_path,repo_url,branch = <span class="string">&#x27;master&#x27;</span>):</span><br><span class="line">    self.local_path = local_path</span><br><span class="line">    self.repo_url = repo_url</span><br><span class="line">    self.repo = None</span><br><span class="line">    self.initial(repo_url,branch)</span><br><span class="line">  def initial(self,repo_url,branch):</span><br><span class="line">    <span class="comment">#判断本地仓库存在否，不存在则新建一个</span></span><br><span class="line">    <span class="keyword">if</span> not os.path.exists(self.local_path):</span><br><span class="line">      os.makedirs(self.local_path)</span><br><span class="line">    git_local_path = os.path.join(self.local_path,<span class="string">&quot;.git&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> not is_git_dir(git_local_path):</span><br><span class="line">      self.repo = Repo.clone_from(repo_url,to_path = self.local_path,branch = branch)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">    self.repo = Repo(self.local_path)</span><br><span class="line">    </span><br><span class="line">  <span class="comment">#拉取远程代码</span></span><br><span class="line">  def pull(self):</span><br><span class="line">    self.repo.git.pull()</span><br><span class="line">    </span><br><span class="line">  <span class="comment">#将本地提交推送到远程</span></span><br><span class="line">  def push(self):</span><br><span class="line">    self.repo.git.push(<span class="string">&#x27;master&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">  <span class="comment">#切换分支</span></span><br><span class="line">  def change_to branch(self,ch_branch):</span><br><span class="line">    self.repo.git.checkout(ch_branch)</span><br><span class="line">    </span><br><span class="line">  <span class="comment">#新建tag并推送远程</span></span><br><span class="line">  def tags(self,new_tag,new_msg):</span><br><span class="line">    self.repo.create_tag(new_tag,m = new_msg)</span><br><span class="line">    self.repo.git.push(<span class="string">&#x27;origin&#x27;</span>,new_tag)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  local_path = input(<span class="string">&#x27;请输入本地仓库地址：&#x27;</span>)</span><br><span class="line">  repo_url = input(<span class="string">&#x27;请输入远程仓库地址：&#x27;</span>)</span><br><span class="line">  repo = GitRepository(local_path,repo_url)</span><br><span class="line">  </span><br><span class="line">  ch_branch = input(<span class="string">&quot;请输入要切换的分支名称:&quot;</span>)</span><br><span class="line">  repo.change_to_branch(ch_branch)</span><br><span class="line">  repo.pull()</span><br><span class="line">  </span><br><span class="line">  new_tag = input(<span class="string">&quot;请输入新建的tag:&quot;</span>)</span><br><span class="line">  new_msg = input(<span class="string">&quot;请输入本次推送的备注信息：&quot;</span>)</span><br><span class="line">  repo.tags()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;install-lib&quot;&gt;&lt;a href=&quot;#install-lib&quot; class=&quot;headerlink&quot; title=&quot;install lib&quot;&gt;&lt;/a&gt;install lib&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight ba</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>HEXO Hacker 主题中文说明</title>
    <link href="http://example.com/2021/04/23/dev_utils/02_python_dev_lib_cmd_parse/"/>
    <id>http://example.com/2021/04/23/dev_utils/02_python_dev_lib_cmd_parse/</id>
    <published>2021-04-23T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import argparseparser = argparse.ArgumentParser(<span class="string">&#x27;introduce how to use&#x27;</span>)<span class="comment">#创建一个解析器</span></span><br><span class="line">parser.add_argument(<span class="string">&#x27;integers&#x27;</span>, <span class="comment">#必选参数                            </span></span><br><span class="line">                    metavar=<span class="string">&#x27;number&#x27;</span>, <span class="comment">#&#x27;usage&#x27;显示成&#x27;number&#x27;                    </span></span><br><span class="line">                    <span class="built_in">type</span>=int, <span class="comment">#整形变量                    </span></span><br><span class="line">                    nargs=<span class="string">&#x27;+&#x27;</span>, <span class="comment">#至少有一个参数值                    </span></span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;an inter for the accumulator&#x27;</span>)<span class="comment">#帮助文档显示</span></span><br><span class="line">parser.add_argument(<span class="string">&#x27;--test-para&#x27;</span>,<span class="comment">#可选参数                    </span></span><br><span class="line">                    required=False,<span class="comment">#是否必须携带                    </span></span><br><span class="line">                    default=<span class="string">&#x27;this is just a test&#x27;</span>,<span class="comment">#默认值                    </span></span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;wirte some instruction here&#x27;</span>)<span class="comment">#帮助文档</span></span><br><span class="line">args = parser.parse_args()<span class="comment">#解析</span></span><br><span class="line"><span class="built_in">print</span>(args)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;demo&quot;&gt;&lt;a href=&quot;#demo&quot; class=&quot;headerlink&quot; title=&quot;demo&quot;&gt;&lt;/a&gt;demo&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>HEXO Hacker 主题中文说明</title>
    <link href="http://example.com/2021/04/23/dev_utils/03_python_dev_lib_%E8%BF%9B%E5%BA%A6/"/>
    <id>http://example.com/2021/04/23/dev_utils/03_python_dev_lib_%E8%BF%9B%E5%BA%A6/</id>
    <published>2021-04-23T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="ref-https-blog-csdn-net-qq-44647926-article-details-89499842"><a href="#ref-https-blog-csdn-net-qq-44647926-article-details-89499842" class="headerlink" title="ref : https://blog.csdn.net/qq_44647926/article/details/89499842"></a>ref : <a href="https://blog.csdn.net/qq_44647926/article/details/89499842">https://blog.csdn.net/qq_44647926/article/details/89499842</a></h3><hr><hr><h3 id="进度条-demo"><a href="#进度条-demo" class="headerlink" title="进度条 demo"></a>进度条 demo</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">scale=50 <span class="comment">#尽量不要超过50 超过屏幕宽度会自动执行换行</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;执行开始&quot;</span>.center(scale//2,<span class="string">&quot;-&quot;</span>))</span><br><span class="line">start=time.perf_counter()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(scale+1):</span><br><span class="line">a=<span class="string">&quot;*&quot;</span>*i</span><br><span class="line">b=<span class="string">&quot;.&quot;</span>*(scale-i)</span><br><span class="line">c=(i/scale)*100</span><br><span class="line">dur=time.perf_counter()-start</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\r&#123;:&lt;3.0f&#125;%[&#123;&#125;-&gt;&#123;&#125;] time:&#123;:.2f&#125;&quot;</span>.format(c,a,b,dur),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment">#\r将光标移动到前面</span></span><br><span class="line"><span class="comment">#&#123;:^3.0f&#125; 左对齐 保留3位整数位 保留0位小数位</span></span><br><span class="line">time.sleep(0.1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;执行结束&quot;</span>.center(scale//2,<span class="string">&quot;-&quot;</span>))</span><br></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">count_down = 10  <span class="comment"># 设置倒计时时间，单位：秒</span></span><br><span class="line">interval = 1  <span class="comment"># 设置屏幕刷新的间隔时间，单位：秒</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0, int(count_down/interval)+1):</span><br><span class="line">     <span class="built_in">print</span>(<span class="string">&quot;\r&quot;</span>+<span class="string">&quot;▇▇▇▇&quot;</span>*i+<span class="string">&quot; &quot;</span>+str(i*10)+<span class="string">&quot;%&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">     time.sleep(interval)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n加载完毕&quot;</span>)</span><br></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">count_down = 10  <span class="comment"># 设置倒计时时间，单位：秒</span></span><br><span class="line">interval = 0.25  <span class="comment"># 设置屏幕刷新的间隔时间，单位：秒</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0, int(count_down/interval)):</span><br><span class="line">    ch_list = [<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;|&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="string">&quot;-&quot;</span>]</span><br><span class="line">    index = i % 4</span><br><span class="line">    msg = <span class="string">&quot;\r程序运行中 &quot;</span> + ch_list[index]</span><br><span class="line">    <span class="built_in">print</span>(msg, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    time.sleep(interval)</span><br><span class="line"><span class="built_in">print</span>(u<span class="string">&quot;\r结束&quot;</span> + <span class="string">&quot;  &quot;</span>*len(msg))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;ref-https-blog-csdn-net-qq-44647926-article-details-89499842&quot;&gt;&lt;a href=&quot;#ref-https-blog-csdn-net-qq-44647926-article-details-894</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>HEXO Hacker 主题中文说明</title>
    <link href="http://example.com/2021/04/23/dev_utils/01_python_dev_lib_logger/"/>
    <id>http://example.com/2021/04/23/dev_utils/01_python_dev_lib_logger/</id>
    <published>2021-04-23T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="install-lib"><a href="#install-lib" class="headerlink" title="install lib"></a>install lib</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install GitPython <span class="comment">#在线安装会自动安装其依赖模块</span></span><br></pre></td></tr></table></figure><hr><h3 id="clone"><a href="#clone" class="headerlink" title="clone"></a>clone</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Repo.clone_from(<span class="string">&quot;git远程给仓库地址&quot;</span>,to_path=<span class="string">&quot;将要克隆到的本地仓库地址&quot;</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Repo.init(r<span class="string">&quot;C:\Users\Icey\Desktop\aa&quot;</span>) <span class="comment">#aa为要初始化的本地仓库</span></span><br></pre></td></tr></table></figure><hr><h3 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">repo = Repo(r<span class="string">&quot;C:\Users\Icey\Desktop\aa&quot;</span>) <span class="comment">#获取本地仓库对象</span></span><br><span class="line">index = repo.index <span class="comment">#获取本地仓库的暂存区对象</span></span><br><span class="line"><span class="comment">#index.add(r&#x27;*&#x27;) #将本地所有改动提交到暂存区</span></span><br><span class="line">index.add([<span class="string">&#x27;aaaa.txt&#x27;</span>]) <span class="comment">#将aaaa.txt文件提交到暂存区</span></span><br><span class="line">index.commit(<span class="string">&quot;此次提交备注信息&quot;</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="branch"><a href="#branch" class="headerlink" title="branch"></a>branch</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">repo.git.branch(<span class="string">&quot;dev&quot;</span>) <span class="comment">#新建dev分支</span></span><br><span class="line">repo.git.checkout(<span class="string">&quot;dev&quot;</span>) <span class="comment">#切换到dev分支</span></span><br></pre></td></tr></table></figure><hr><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">from git import Repo</span><br><span class="line">from git.repo.fun import is_git_dir</span><br><span class="line"></span><br><span class="line">class GitRepository(object):</span><br><span class="line">  <span class="comment">#初始化</span></span><br><span class="line">  def __init__(self,local_path,repo_url,branch = <span class="string">&#x27;master&#x27;</span>):</span><br><span class="line">    self.local_path = local_path</span><br><span class="line">    self.repo_url = repo_url</span><br><span class="line">    self.repo = None</span><br><span class="line">    self.initial(repo_url,branch)</span><br><span class="line">  def initial(self,repo_url,branch):</span><br><span class="line">    <span class="comment">#判断本地仓库存在否，不存在则新建一个</span></span><br><span class="line">    <span class="keyword">if</span> not os.path.exists(self.local_path):</span><br><span class="line">      os.makedirs(self.local_path)</span><br><span class="line">    git_local_path = os.path.join(self.local_path,<span class="string">&quot;.git&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> not is_git_dir(git_local_path):</span><br><span class="line">      self.repo = Repo.clone_from(repo_url,to_path = self.local_path,branch = branch)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">    self.repo = Repo(self.local_path)</span><br><span class="line">    </span><br><span class="line">  <span class="comment">#拉取远程代码</span></span><br><span class="line">  def pull(self):</span><br><span class="line">    self.repo.git.pull()</span><br><span class="line">    </span><br><span class="line">  <span class="comment">#将本地提交推送到远程</span></span><br><span class="line">  def push(self):</span><br><span class="line">    self.repo.git.push(<span class="string">&#x27;master&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">  <span class="comment">#切换分支</span></span><br><span class="line">  def change_to branch(self,ch_branch):</span><br><span class="line">    self.repo.git.checkout(ch_branch)</span><br><span class="line">    </span><br><span class="line">  <span class="comment">#新建tag并推送远程</span></span><br><span class="line">  def tags(self,new_tag,new_msg):</span><br><span class="line">    self.repo.create_tag(new_tag,m = new_msg)</span><br><span class="line">    self.repo.git.push(<span class="string">&#x27;origin&#x27;</span>,new_tag)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  local_path = input(<span class="string">&#x27;请输入本地仓库地址：&#x27;</span>)</span><br><span class="line">  repo_url = input(<span class="string">&#x27;请输入远程仓库地址：&#x27;</span>)</span><br><span class="line">  repo = GitRepository(local_path,repo_url)</span><br><span class="line">  </span><br><span class="line">  ch_branch = input(<span class="string">&quot;请输入要切换的分支名称:&quot;</span>)</span><br><span class="line">  repo.change_to_branch(ch_branch)</span><br><span class="line">  repo.pull()</span><br><span class="line">  </span><br><span class="line">  new_tag = input(<span class="string">&quot;请输入新建的tag:&quot;</span>)</span><br><span class="line">  new_msg = input(<span class="string">&quot;请输入本次推送的备注信息：&quot;</span>)</span><br><span class="line">  repo.tags()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;install-lib&quot;&gt;&lt;a href=&quot;#install-lib&quot; class=&quot;headerlink&quot; title=&quot;install lib&quot;&gt;&lt;/a&gt;install lib&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight ba</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>vscode 插件记录</title>
    <link href="http://example.com/2021/03/11/yolo/yolo5/"/>
    <id>http://example.com/2021/03/11/yolo/yolo5/</id>
    <published>2021-03-11T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.823Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h3 id="训练集"><a href="#训练集" class="headerlink" title="训练集"></a>训练集</h3><h3 id="部署得到的训练集"><a href="#部署得到的训练集" class="headerlink" title="部署得到的训练集"></a>部署得到的训练集</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h3&gt;&lt;h3 id=&quot;训练集&quot;&gt;&lt;a href=&quot;#训练集&quot; class=&quot;headerlink&quot; title=&quot;训练集&quot;&gt;&lt;/a&gt;训练</summary>
      
    
    
    
    <category term="Project_Yolo" scheme="http://example.com/categories/Project-Yolo/"/>
    
    
  </entry>
  
  <entry>
    <title>屏幕录制demo</title>
    <link href="http://example.com/2021/03/11/yolo/screencast/"/>
    <id>http://example.com/2021/03/11/yolo/screencast/</id>
    <published>2021-03-11T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.823Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/ctwy291314/article/details/91490759">reference</a></p><hr><h3 id="dependence"><a href="#dependence" class="headerlink" title="dependence"></a>dependence</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pillow</span><br><span class="line">pip install opencv-python</span><br></pre></td></tr></table></figure><hr><h3 id="script"><a href="#script" class="headerlink" title="script"></a>script</h3><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageGrab</span><br><span class="line"><span class="keyword">import</span>  numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span>  cv2</span><br><span class="line"> </span><br><span class="line">fps = <span class="number">100</span></span><br><span class="line">start = <span class="number">1</span>  <span class="comment"># 延时录制</span></span><br><span class="line">end = <span class="number">20</span>  <span class="comment"># 自动结束时间</span></span><br><span class="line"> </span><br><span class="line">curScreen = ImageGrab.grab()  <span class="comment"># 获取屏幕对象</span></span><br><span class="line">height, width = curScreen.size</span><br><span class="line"> </span><br><span class="line">video = cv2.VideoWriter(<span class="string">&#x27;video02.avi&#x27;</span>, cv2.VideoWriter_fourcc(*<span class="string">&#x27;XVID&#x27;</span>), fps, (height, width))</span><br><span class="line"> </span><br><span class="line">imageNum = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    imageNum += <span class="number">1</span></span><br><span class="line">    captureImage = ImageGrab.grab()  <span class="comment"># 抓取屏幕</span></span><br><span class="line">    frame = cv2.cvtColor(np.array(captureImage), cv2.COLOR_RGB2BGR)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 显示无图像的窗口</span></span><br><span class="line">    cv2.imshow(<span class="string">&#x27;capturing&#x27;</span>, np.zeros((<span class="number">1</span>, <span class="number">255</span>), np.uint8))</span><br><span class="line">   </span><br><span class="line">    <span class="comment"># 控制窗口显示位置，方便通过按键方式退出</span></span><br><span class="line">    cv2.moveWindow(<span class="string">&#x27;capturing&#x27;</span>, height - <span class="number">100</span>, width - <span class="number">100</span>)  </span><br><span class="line">    <span class="keyword">if</span> imageNum &gt; fps * start:</span><br><span class="line">        video.write(frame)</span><br><span class="line">    <span class="comment"># 退出条件    </span></span><br><span class="line">    <span class="keyword">if</span> cv2.waitKey(<span class="number">50</span>) == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>) <span class="keyword">or</span> imageNum &gt; fps * end:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">video.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/ctwy291314/article/details/91490759&quot;&gt;reference&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;dependence&quot;&gt;&lt;a href=&quot;#dependence&quot; clas</summary>
      
    
    
    
    <category term="Project_Yolo" scheme="http://example.com/categories/Project-Yolo/"/>
    
    
  </entry>
  
  <entry>
    <title>UEFI --- pci 遍历</title>
    <link href="http://example.com/2021/03/11/uefi/pci_device/"/>
    <id>http://example.com/2021/03/11/uefi/pci_device/</id>
    <published>2021-03-11T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.823Z</updated>
    
    <content type="html"><![CDATA[<h3 id="windows-上遍历PCI设备-Reference-Blog"><a href="#windows-上遍历PCI设备-Reference-Blog" class="headerlink" title="windows 上遍历PCI设备 | Reference Blog"></a>windows 上遍历PCI设备 | Reference <a href="https://blog.csdn.net/u013983194/article/details/46960147">Blog</a></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> DWORD;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> WORD;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MK_PDI(bus,dev,func) (WORD)((bus&lt;&lt;8)|(dev&lt;&lt;3)|(func))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MK_PCIaddr(bus,dev,func) (DWORD)(0xf8000000L|(DWORD)MK_PDI(bus,dev,func)&lt;&lt;8)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PCI_CONFIG_ADDRESS 0xCF8 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PCI_CONFIG_DATA 0xCFC</span></span><br><span class="line"><span class="function">DWORD <span class="title">inpd</span><span class="params">(<span class="keyword">int</span> inport)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DWORD data;</span><br><span class="line">    __asm(</span><br><span class="line">        <span class="string">&quot;mov dx,inport&quot;</span></span><br><span class="line">        <span class="string">&quot;lea bx,data&quot;</span></span><br><span class="line">        <span class="string">&quot;-emit 0x66,0x50&quot;</span></span><br><span class="line">        <span class="string">&quot;-emit 0x66,0xED&quot;</span></span><br><span class="line">        <span class="string">&quot;-emit 0x66,0x89,0x07&quot;</span></span><br><span class="line">        <span class="string">&quot;-emit 0x66,0x58&quot;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">outpd</span><span class="params">(<span class="keyword">int</span> outport,DWORD addr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    __asm(</span><br><span class="line">        <span class="string">&quot;mov dx,outport&quot;</span></span><br><span class="line">        <span class="string">&quot;lea bx,addr&quot;</span></span><br><span class="line">        <span class="string">&quot;-emit 0x66, 0x50&quot;</span></span><br><span class="line">        <span class="string">&quot;-emit 0x66, 0x8B, 0x07&quot;</span></span><br><span class="line">        <span class="string">&quot;-emit 0x66, 0xEF&quot;</span></span><br><span class="line">        <span class="string">&quot;-emit 0x66, 0x58&quot;</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD <span class="title">GetData</span><span class="params">(DWORD addr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DWORD data;</span><br><span class="line">    outpd(PCI_CONFIG_ADDRESS,addr);</span><br><span class="line">    data = inpd(PCI_CONFIG_DATA);</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> bus,dev,func;</span><br><span class="line">    DWORD addr,addr1,addr2,addr3;</span><br><span class="line">    DWORD data,data1,data2,data3;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Bus#\tDev#\tFunc#&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (bus = <span class="number">0</span>; bus &lt;= <span class="number">0x63</span>; ++bus)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (dev = <span class="number">0</span>; dev &lt;= <span class="number">0x1F</span>; ++dev)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (func = <span class="number">0</span>; func &lt;= <span class="number">0x7</span>; ++func)</span><br><span class="line">            &#123;</span><br><span class="line">                addr = MK_PCIaddr(bus,dev,func);</span><br><span class="line">                data = GetData(addr);</span><br><span class="line">                <span class="keyword">if</span>((WORD)data!=<span class="number">0xFFFF</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%2.2x\t%2.2x\t%2.2x\t&quot;</span>,bus,dev,func);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;windows-上遍历PCI设备-Reference-Blog&quot;&gt;&lt;a href=&quot;#windows-上遍历PCI设备-Reference-Blog&quot; class=&quot;headerlink&quot; title=&quot;windows 上遍历PCI设备 | Reference B</summary>
      
    
    
    
    <category term="uefi" scheme="http://example.com/categories/uefi/"/>
    
    
  </entry>
  
  <entry>
    <title>hack binary example</title>
    <link href="http://example.com/2021/03/09/liveoverflow/%E9%95%9C%E5%83%8F%E5%8A%A0%E5%AF%86%E9%AA%8C%E8%AF%81%E4%BE%8B%E5%AD%90/"/>
    <id>http://example.com/2021/03/09/liveoverflow/%E9%95%9C%E5%83%8F%E5%8A%A0%E5%AF%86%E9%AA%8C%E8%AF%81%E4%BE%8B%E5%AD%90/</id>
    <published>2021-03-09T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    
    
    
    <category term="liveoverflow" scheme="http://example.com/categories/liveoverflow/"/>
    
    
  </entry>
  
  <entry>
    <title>gdb 调试常用命令备忘</title>
    <link href="http://example.com/2021/03/09/tool/gdb/"/>
    <id>http://example.com/2021/03/09/tool/gdb/</id>
    <published>2021-03-09T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.823Z</updated>
    
    <content type="html"><![CDATA[<p>disassemble    //gdb下使用可以查看汇编代码<br>disassemble /m 函数名      /m 源码和汇编一起排列<br>disassemble 不带参数，默认的反汇编范围是 所选择帧的pc附近的函数<br>单个参数, 就是pc, 当然也可以是函数名，因为函数名 也是一个 地址; <br>这样范围就是该pc附近的函数<br>两个参数，就是内存地址范围</p><p>使用display /i $pc（结合display命令和寄存器/pc内部变量）指令进行设置</p><p>info register查看寄存器的情况，可以简写成i r<br>主要是%eip、%eax、%esp和%ebp<br> 列出的结果主要有三行<br>    最左边是寄存器名称外，中间是寄存器存的值（也就是一个内存地址），右边是这个值对应的内存<br>    地址中的值。打印一下$eax可验证</p><p>si，ni：<br>    下一条语句遇到函数调用的时候，nexti不会跟踪进入函数，而是继续执行下面的语句，<br>    而step命令则会跟踪进入函数内部。<br>    si命令类似于s命令，ni命令类似于n命令。所不同的是，这两个命令（si/ni）所针对的是汇编指<br>    令，而s/n针对的是源代码。     <br>i代表指令（instruction）<br>     n(ext)i<br>     s(tep)i</p><p>$pc   代表pc程序计数器的值</p><p>set disassembly-flavor intel          gdb设置intel汇编 ，默认是att</p><p>print其实是有计数器的，每次print打印，其实都有一个类似count++在内部发生，<br>使用print $num 能显示第num个打印结果，如上，p $3   //查看第三个值<br>  (gdb)p i<br>  (gdb)p/a i<br>  (gdb)p/c i<br>  (gdb)p/f i<br>  (gdb)p/x i<br>  (gdb)p/o i<br>  (gdb)p/d i<br>  (gdb)p/t i              <br>    f浮点，c字符，t为二进制，o八，x十六，d十<br>    a和x同样是打印十六进制,不同名但同功能</p><p>调试运行中的程序：<br>   #ps -aux | grep execFile    //找到运行中的进程PID，<br>   使用<br>   #gdb execFile PID    <br>bt n(next)往下走是看不到已经运行完的错误的，所以就谈到bt（backtrace）命令——回溯。<br>info line main  //查看main的信息<br>   info line 0x…  //查看某一行信息<br>r是run的缩写     r 参数      以参数运行程序<br>quit,退出gdb调试<br>gdb -q 程序名      //这个操作可以不输出一些信息（gdb的一些版本信息说明之类的）   <br>gdb也支持运行linux命令的，可以在gdb的提示符中，输入shell，然后在输入你需要的命令就可以<br>了。例如：shell clear     清屏<br>b*0x…            //在逆向调试的时候，在某行指令下断点必须遵照这个格式  <br>x/i 可以查看指令<br>        例如： x/15i main  查看main函数中的第15条指令  <br> x/43bc 0xffffd190 指的是 0xffffd190后43个内存单元<br> <br>想边看汇编变调试就先：r 参数    ，然后使用layout asm，直接动态显示指令运行<br>       layout 几个参数：<br>               src   : Displays source and command windows.<br>               asm   : Displays disassembly and command windows.<br>               split : Displays source, disassembly and command windows.<br>               regs  : Displays register window. If existing layout<br>       c（continue）  可以让程序执行到下一个断点处<br>       p $eax   查看寄存器的值<br>       x/i $pc  查看当前指令的运行地址<br>修改寄存器值的两种方式(想要满足某个比较条件直接修改寄存器，可以跳到想跳的地方)：<br>      1)直接来：<br>               set $eax=value<br>      2)找到寄存器的地址通过这个地址修改值：<br>               p $rsp+0x714<br>               set *上一步的值=value      <br>x/  &lt;n/f/u&gt;  <addr>   //内存地址中的值，x即examine,3个参数顺序可变<br>     <br>   1)n是一个正整数，表示需要显示的内存单元的个数<br>   2)f表示显示的格式（有以下选项）：<br>       x （hexadecimal）按十六进制格式显示变量。 <br>       d （signed decimal）按十进制格式显示变量。 <br>       u （unsigned decimal）按十进制格式显示无符号整型。 <br>       o （octal）按八进制格式显示变量。 <br>       t （binary）按二进制格式显示变量。 <br>       a （address）按十六进制格式显示地址，并显示距离前继符号的偏移量(offset)。常用于定位未知 地址(变量)。 <br>       c （character）按字符格式显示变量。 <br>       f （floating）按浮点数格式显示变量。  <br>   3)u表示从当前地址往后请求的字节数单位，如果不指定的话，GDB默认是4个bytes：<br>       b表示单字节，<br>       h表示双字节，<br>       w表示四字节，<br>       g表示八字节   <br>x/10x $sp–&gt;打印stack的前10个元素   <br>reverse-stepi   //回退一条指令<br>info thread   // 查看所有线程</p><p>continue         执行到下一暂停点或程序结束。<br>next         执行一行源代码但不进入函数内部。<br>step        执行一行源代码而且进入函数内部。<br>gdb 运行程序<br>例子程序名为prog，则在终端输入 gdb prog<br>gdb 设置参数<br>set args 可指定运行时参数。（如：set args 10 20 30 40 50） <br>show args 命令可以查看设置好的运行参数。 <br>若要再次修改参数，可再执行一遍 set args<br>运行<br>输入 r 运行 <br>出错后，输入 bt 查看运行堆栈<br>退出<br>输入 quit</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;disassemble    //gdb下使用可以查看汇编代码&lt;br&gt;disassemble /m 函数名      /m 源码和汇编一起排列&lt;br&gt;disassemble 不带参数，默认的反汇编范围是 所选择帧的pc附近的函数&lt;br&gt;单个参数, 就是pc, 当然也可以是函</summary>
      
    
    
    
    <category term="tools" scheme="http://example.com/categories/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>c 函数参数是怎么传递的，整个过程</title>
    <link href="http://example.com/2021/03/08/liveoverflow/c_example_param/"/>
    <id>http://example.com/2021/03/08/liveoverflow/c_example_param/</id>
    <published>2021-03-08T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="测试源码"><a href="#测试源码" class="headerlink" title="测试源码"></a>测试源码</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line">int test2(int a, int b , int c, int d , int e)&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %d, %d, %d\n&quot;</span>, a,b,c,d,e);</span><br><span class="line">  <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int <span class="built_in">test</span>(int a, int b , int c, int d , int e)&#123;</span><br><span class="line">  test2(6,7,8,9,10);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %d, %d, %d\n&quot;</span>, a,b,c,d,e);</span><br><span class="line">  <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc,char *argv[])&#123;</span><br><span class="line">    <span class="built_in">test</span>(1,2,3,4,5);</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="调试过程"><a href="#调试过程" class="headerlink" title="调试过程"></a>调试过程</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line">xhlu@BU-build-XHLU /cygdrive/c/Users/xhlu/Desktop/pri_xx/<span class="built_in">test</span></span><br><span class="line">$ gdb a.exe</span><br><span class="line">GNU gdb (GDB) (Cygwin 9.2-1) 9.2</span><br><span class="line">Copyright (C) 2020 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line">Type <span class="string">&quot;show copying&quot;</span> and <span class="string">&quot;show warranty&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line">This GDB was configured as <span class="string">&quot;x86_64-pc-cygwin&quot;</span>.</span><br><span class="line">Type <span class="string">&quot;show configuration&quot;</span> <span class="keyword">for</span> configuration details.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class="line">Find the GDB manual and other documentation resources online at:</span><br><span class="line">    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.</span><br><span class="line"></span><br><span class="line">For <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">&quot;help&quot;</span>.</span><br><span class="line">Type <span class="string">&quot;apropos word&quot;</span> to search <span class="keyword">for</span> commands related to <span class="string">&quot;word&quot;</span>...</span><br><span class="line">Reading symbols from a.exe...</span><br><span class="line">(gdb) b main.c:16</span><br><span class="line">Breakpoint 1 at 0x10040114b: file main.c, line 16.</span><br><span class="line">(gdb) r</span><br><span class="line">Starting program: /cygdrive/c/Users/xhlu/Desktop/pri_xx/<span class="built_in">test</span>/a.exe</span><br><span class="line">[New Thread 8624.0xf8]</span><br><span class="line">[New Thread 8624.0x2404]</span><br><span class="line">[New Thread 8624.0x1560]</span><br><span class="line">[New Thread 8624.0x13b0]</span><br><span class="line"></span><br><span class="line">Thread 1 <span class="string">&quot;a&quot;</span> hit Breakpoint 1, main (argc=1, argv=0xffffcc60) at main.c:16</span><br><span class="line">16          <span class="built_in">test</span>(1,2,3,4,5);</span><br><span class="line">(gdb) disassemble</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> main:</span><br><span class="line">   0x0000000100401137 &lt;+0&gt;:     push   %rbp</span><br><span class="line">   0x0000000100401138 &lt;+1&gt;:     mov    %rsp,%rbp</span><br><span class="line">   0x000000010040113b &lt;+4&gt;:     sub    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x000000010040113f &lt;+8&gt;:     mov    %ecx,0x10(%rbp)</span><br><span class="line">   0x0000000100401142 &lt;+11&gt;:    mov    %rdx,0x18(%rbp)</span><br><span class="line">   0x0000000100401146 &lt;+15&gt;:    callq  0x100401190 &lt;__main&gt;</span><br><span class="line">=&gt; 0x000000010040114b &lt;+20&gt;:    movl   <span class="variable">$0x5</span>,0x20(%rsp)</span><br><span class="line">   0x0000000100401153 &lt;+28&gt;:    mov    <span class="variable">$0x4</span>,%r9d</span><br><span class="line">   0x0000000100401159 &lt;+34&gt;:    mov    <span class="variable">$0x3</span>,%r8d</span><br><span class="line">   0x000000010040115f &lt;+40&gt;:    mov    <span class="variable">$0x2</span>,%edx</span><br><span class="line">   0x0000000100401164 &lt;+45&gt;:    mov    <span class="variable">$0x1</span>,%ecx</span><br><span class="line">   0x0000000100401169 &lt;+50&gt;:    callq  0x1004010ca &lt;<span class="built_in">test</span>&gt;</span><br><span class="line">   0x000000010040116e &lt;+55&gt;:    mov    <span class="variable">$0x0</span>,%eax</span><br><span class="line">   0x0000000100401173 &lt;+60&gt;:    add    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x0000000100401177 &lt;+64&gt;:    pop    %rbp</span><br><span class="line">   0x0000000100401178 &lt;+65&gt;:    retq</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) s</span><br><span class="line"><span class="built_in">test</span> (a=1, b=2, c=3, d=4, e=5) at main.c:10</span><br><span class="line">10        test2(6,7,8,9,10);</span><br><span class="line">(gdb) l</span><br><span class="line">5         <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %d, %d, %d\n&quot;</span>, a,b,c,d,e);</span><br><span class="line">6         <span class="built_in">return</span> 0;</span><br><span class="line">7       &#125;</span><br><span class="line">8</span><br><span class="line">9       int <span class="built_in">test</span>(int a, int b , int c, int d , int e)&#123;</span><br><span class="line">10        test2(6,7,8,9,10);</span><br><span class="line">11        <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %d, %d, %d\n&quot;</span>, a,b,c,d,e);</span><br><span class="line">12        <span class="built_in">return</span> 0;</span><br><span class="line">13      &#125;</span><br><span class="line">14</span><br><span class="line">(gdb) disassemble</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> <span class="built_in">test</span>:</span><br><span class="line">   0x00000001004010ca &lt;+0&gt;:     push   %rbp              将被调函数的main栈帧栈底地址放入bp寄存器中,此时我们看到的就是函数<span class="built_in">test</span>的栈帧</span><br><span class="line">   0x00000001004010cb &lt;+1&gt;:     mov    %rsp,%rbp</span><br><span class="line">   0x00000001004010ce &lt;+4&gt;:     sub    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x00000001004010d2 &lt;+8&gt;:     mov    %ecx,0x10(%rbp)   将一会要用到的core寄存器压栈 ， ？为什么不把函数参数直接压栈呢，非要用core寄存器 ？</span><br><span class="line">   0x00000001004010d5 &lt;+11&gt;:    mov    %edx,0x18(%rbp)</span><br><span class="line">   0x00000001004010d8 &lt;+14&gt;:    mov    %r8d,0x20(%rbp)</span><br><span class="line">   0x00000001004010dc &lt;+18&gt;:    mov    %r9d,0x28(%rbp)</span><br><span class="line">=&gt; 0x00000001004010e0 &lt;+22&gt;:    movl   <span class="variable">$0xa</span>,0x20(%rsp)   如下6/7/8/9参数被放到了 core 寄存器中，0xa 被压入栈中</span><br><span class="line">   0x00000001004010e8 &lt;+30&gt;:    mov    <span class="variable">$0x9</span>,%r9d</span><br><span class="line">   0x00000001004010ee &lt;+36&gt;:    mov    <span class="variable">$0x8</span>,%r8d</span><br><span class="line">   0x00000001004010f4 &lt;+42&gt;:    mov    <span class="variable">$0x7</span>,%edx</span><br><span class="line">   0x00000001004010f9 &lt;+47&gt;:    mov    <span class="variable">$0x6</span>,%ecx</span><br><span class="line">   0x00000001004010fe &lt;+52&gt;:    callq  0x100401080 &lt;test2&gt;</span><br><span class="line">   0x0000000100401103 &lt;+57&gt;:    mov    0x20(%rbp),%ecx</span><br><span class="line">   0x0000000100401106 &lt;+60&gt;:    mov    0x18(%rbp),%edx</span><br><span class="line">   0x0000000100401109 &lt;+63&gt;:    mov    0x30(%rbp),%eax</span><br><span class="line">   0x000000010040110c &lt;+66&gt;:    mov    %eax,0x28(%rsp)</span><br><span class="line">   0x0000000100401110 &lt;+70&gt;:    mov    0x28(%rbp),%eax</span><br><span class="line">   0x0000000100401113 &lt;+73&gt;:    mov    %eax,0x20(%rsp)</span><br><span class="line">   0x0000000100401117 &lt;+77&gt;:    mov    %ecx,%r9d</span><br><span class="line">   0x000000010040111a &lt;+80&gt;:    mov    %edx,%r8d</span><br><span class="line">   0x000000010040111d &lt;+83&gt;:    mov    0x10(%rbp),%edx</span><br><span class="line">   0x0000000100401120 &lt;+86&gt;:    lea    0x1ed9(%rip),%rcx        <span class="comment"># 0x100403000</span></span><br><span class="line">   0x0000000100401127 &lt;+93&gt;:    callq  0x1004011a0 &lt;<span class="built_in">printf</span>&gt;</span><br><span class="line">   0x000000010040112c &lt;+98&gt;:    mov    <span class="variable">$0x0</span>,%eax</span><br><span class="line">   0x0000000100401131 &lt;+103&gt;:   add    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x0000000100401135 &lt;+107&gt;:   pop    %rbp</span><br><span class="line">   0x0000000100401136 &lt;+108&gt;:   retq</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) s</span><br><span class="line">[New Thread 8624.0x1d34]</span><br><span class="line">test2 (a=6, b=7, c=8, d=9, e=10) at main.c:5</span><br><span class="line">5         <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %d, %d, %d\n&quot;</span>, a,b,c,d,e);</span><br><span class="line">(gdb) disassemble</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> test2:</span><br><span class="line">   0x0000000100401080 &lt;+0&gt;:     push   %rbp</span><br><span class="line">   0x0000000100401081 &lt;+1&gt;:     mov    %rsp,%rbp</span><br><span class="line">   0x0000000100401084 &lt;+4&gt;:     sub    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x0000000100401088 &lt;+8&gt;:     mov    %ecx,0x10(%rbp)</span><br><span class="line">   0x000000010040108b &lt;+11&gt;:    mov    %edx,0x18(%rbp)</span><br><span class="line">   0x000000010040108e &lt;+14&gt;:    mov    %r8d,0x20(%rbp)</span><br><span class="line">   0x0000000100401092 &lt;+18&gt;:    mov    %r9d,0x28(%rbp)</span><br><span class="line">=&gt; 0x0000000100401096 &lt;+22&gt;:    mov    0x20(%rbp),%ecx</span><br><span class="line">   0x0000000100401099 &lt;+25&gt;:    mov    0x18(%rbp),%edx</span><br><span class="line">   0x000000010040109c &lt;+28&gt;:    mov    0x30(%rbp),%eax</span><br><span class="line">   0x000000010040109f &lt;+31&gt;:    mov    %eax,0x28(%rsp)</span><br><span class="line">   0x00000001004010a3 &lt;+35&gt;:    mov    0x28(%rbp),%eax</span><br><span class="line">   0x00000001004010a6 &lt;+38&gt;:    mov    %eax,0x20(%rsp)</span><br><span class="line">   0x00000001004010aa &lt;+42&gt;:    mov    %ecx,%r9d</span><br><span class="line">   0x00000001004010ad &lt;+45&gt;:    mov    %edx,%r8d</span><br><span class="line">   0x00000001004010b0 &lt;+48&gt;:    mov    0x10(%rbp),%edx</span><br><span class="line">   0x00000001004010b3 &lt;+51&gt;:    lea    0x1f46(%rip),%rcx        <span class="comment"># 0x100403000</span></span><br><span class="line">   0x00000001004010ba &lt;+58&gt;:    callq  0x1004011a0 &lt;<span class="built_in">printf</span>&gt;</span><br><span class="line">   0x00000001004010bf &lt;+63&gt;:    mov    <span class="variable">$0x0</span>,%eax</span><br><span class="line">   0x00000001004010c4 &lt;+68&gt;:    add    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x00000001004010c8 &lt;+72&gt;:    pop    %rbp</span><br><span class="line">   0x00000001004010c9 &lt;+73&gt;:    retq</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) n</span><br><span class="line">[New Thread 8624.0x24b0]</span><br><span class="line">6, 7, 8, 9, 10</span><br><span class="line">6         <span class="built_in">return</span> 0;</span><br><span class="line">(gdb) disassemble</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> test2:</span><br><span class="line">   0x0000000100401080 &lt;+0&gt;:     push   %rbp</span><br><span class="line">   0x0000000100401081 &lt;+1&gt;:     mov    %rsp,%rbp</span><br><span class="line">   0x0000000100401084 &lt;+4&gt;:     sub    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x0000000100401088 &lt;+8&gt;:     mov    %ecx,0x10(%rbp)</span><br><span class="line">   0x000000010040108b &lt;+11&gt;:    mov    %edx,0x18(%rbp)</span><br><span class="line">   0x000000010040108e &lt;+14&gt;:    mov    %r8d,0x20(%rbp)</span><br><span class="line">   0x0000000100401092 &lt;+18&gt;:    mov    %r9d,0x28(%rbp)</span><br><span class="line">   0x0000000100401096 &lt;+22&gt;:    mov    0x20(%rbp),%ecx</span><br><span class="line">   0x0000000100401099 &lt;+25&gt;:    mov    0x18(%rbp),%edx</span><br><span class="line">   0x000000010040109c &lt;+28&gt;:    mov    0x30(%rbp),%eax</span><br><span class="line">   0x000000010040109f &lt;+31&gt;:    mov    %eax,0x28(%rsp)</span><br><span class="line">   0x00000001004010a3 &lt;+35&gt;:    mov    0x28(%rbp),%eax</span><br><span class="line">   0x00000001004010a6 &lt;+38&gt;:    mov    %eax,0x20(%rsp)</span><br><span class="line">   0x00000001004010aa &lt;+42&gt;:    mov    %ecx,%r9d</span><br><span class="line">   0x00000001004010ad &lt;+45&gt;:    mov    %edx,%r8d</span><br><span class="line">   0x00000001004010b0 &lt;+48&gt;:    mov    0x10(%rbp),%edx</span><br><span class="line">   0x00000001004010b3 &lt;+51&gt;:    lea    0x1f46(%rip),%rcx        <span class="comment"># 0x100403000</span></span><br><span class="line">   0x00000001004010ba &lt;+58&gt;:    callq  0x1004011a0 &lt;<span class="built_in">printf</span>&gt;</span><br><span class="line">=&gt; 0x00000001004010bf &lt;+63&gt;:    mov    <span class="variable">$0x0</span>,%eax</span><br><span class="line">   0x00000001004010c4 &lt;+68&gt;:    add    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x00000001004010c8 &lt;+72&gt;:    pop    %rbp</span><br><span class="line">   0x00000001004010c9 &lt;+73&gt;:    retq</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) n</span><br><span class="line">7       &#125;</span><br><span class="line">(gdb) l</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4       int test2(int a, int b , int c, int d , int e)&#123;</span><br><span class="line">5         <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %d, %d, %d\n&quot;</span>, a,b,c,d,e);</span><br><span class="line">6         <span class="built_in">return</span> 0;</span><br><span class="line">7       &#125;</span><br><span class="line">8</span><br><span class="line">9       int <span class="built_in">test</span>(int a, int b , int c, int d , int e)&#123;</span><br><span class="line">10        test2(6,7,8,9,10);</span><br><span class="line">11        <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %d, %d, %d\n&quot;</span>, a,b,c,d,e);</span><br><span class="line">(gdb) disassemble</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> test2:</span><br><span class="line">   0x0000000100401080 &lt;+0&gt;:     push   %rbp</span><br><span class="line">   0x0000000100401081 &lt;+1&gt;:     mov    %rsp,%rbp</span><br><span class="line">   0x0000000100401084 &lt;+4&gt;:     sub    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x0000000100401088 &lt;+8&gt;:     mov    %ecx,0x10(%rbp)</span><br><span class="line">   0x000000010040108b &lt;+11&gt;:    mov    %edx,0x18(%rbp)</span><br><span class="line">   0x000000010040108e &lt;+14&gt;:    mov    %r8d,0x20(%rbp)</span><br><span class="line">   0x0000000100401092 &lt;+18&gt;:    mov    %r9d,0x28(%rbp)</span><br><span class="line">   0x0000000100401096 &lt;+22&gt;:    mov    0x20(%rbp),%ecx</span><br><span class="line">   0x0000000100401099 &lt;+25&gt;:    mov    0x18(%rbp),%edx</span><br><span class="line">   0x000000010040109c &lt;+28&gt;:    mov    0x30(%rbp),%eax</span><br><span class="line">   0x000000010040109f &lt;+31&gt;:    mov    %eax,0x28(%rsp)</span><br><span class="line">   0x00000001004010a3 &lt;+35&gt;:    mov    0x28(%rbp),%eax</span><br><span class="line">   0x00000001004010a6 &lt;+38&gt;:    mov    %eax,0x20(%rsp)</span><br><span class="line">   0x00000001004010aa &lt;+42&gt;:    mov    %ecx,%r9d</span><br><span class="line">   0x00000001004010ad &lt;+45&gt;:    mov    %edx,%r8d</span><br><span class="line">   0x00000001004010b0 &lt;+48&gt;:    mov    0x10(%rbp),%edx</span><br><span class="line">   0x00000001004010b3 &lt;+51&gt;:    lea    0x1f46(%rip),%rcx        <span class="comment"># 0x100403000</span></span><br><span class="line">   0x00000001004010ba &lt;+58&gt;:    callq  0x1004011a0 &lt;<span class="built_in">printf</span>&gt;</span><br><span class="line">   0x00000001004010bf &lt;+63&gt;:    mov    <span class="variable">$0x0</span>,%eax</span><br><span class="line">=&gt; 0x00000001004010c4 &lt;+68&gt;:    add    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x00000001004010c8 &lt;+72&gt;:    pop    %rbp</span><br><span class="line">   0x00000001004010c9 &lt;+73&gt;:    retq</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) n</span><br><span class="line"><span class="built_in">test</span> (a=1, b=2, c=3, d=4, e=5) at main.c:11</span><br><span class="line">11        <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %d, %d, %d\n&quot;</span>, a,b,c,d,e);</span><br><span class="line">(gdb) disassemble</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> <span class="built_in">test</span>:</span><br><span class="line">   0x00000001004010ca &lt;+0&gt;:     push   %rbp</span><br><span class="line">   0x00000001004010cb &lt;+1&gt;:     mov    %rsp,%rbp</span><br><span class="line">   0x00000001004010ce &lt;+4&gt;:     sub    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x00000001004010d2 &lt;+8&gt;:     mov    %ecx,0x10(%rbp)</span><br><span class="line">   0x00000001004010d5 &lt;+11&gt;:    mov    %edx,0x18(%rbp)</span><br><span class="line">   0x00000001004010d8 &lt;+14&gt;:    mov    %r8d,0x20(%rbp)</span><br><span class="line">   0x00000001004010dc &lt;+18&gt;:    mov    %r9d,0x28(%rbp)</span><br><span class="line">   0x00000001004010e0 &lt;+22&gt;:    movl   <span class="variable">$0xa</span>,0x20(%rsp)</span><br><span class="line">   0x00000001004010e8 &lt;+30&gt;:    mov    <span class="variable">$0x9</span>,%r9d</span><br><span class="line">   0x00000001004010ee &lt;+36&gt;:    mov    <span class="variable">$0x8</span>,%r8d</span><br><span class="line">   0x00000001004010f4 &lt;+42&gt;:    mov    <span class="variable">$0x7</span>,%edx</span><br><span class="line">   0x00000001004010f9 &lt;+47&gt;:    mov    <span class="variable">$0x6</span>,%ecx</span><br><span class="line">   0x00000001004010fe &lt;+52&gt;:    callq  0x100401080 &lt;test2&gt;</span><br><span class="line">=&gt; 0x0000000100401103 &lt;+57&gt;:    mov    0x20(%rbp),%ecx</span><br><span class="line">   0x0000000100401106 &lt;+60&gt;:    mov    0x18(%rbp),%edx</span><br><span class="line">   0x0000000100401109 &lt;+63&gt;:    mov    0x30(%rbp),%eax</span><br><span class="line">   0x000000010040110c &lt;+66&gt;:    mov    %eax,0x28(%rsp)</span><br><span class="line">   0x0000000100401110 &lt;+70&gt;:    mov    0x28(%rbp),%eax</span><br><span class="line">   0x0000000100401113 &lt;+73&gt;:    mov    %eax,0x20(%rsp)</span><br><span class="line">   0x0000000100401117 &lt;+77&gt;:    mov    %ecx,%r9d</span><br><span class="line">   0x000000010040111a &lt;+80&gt;:    mov    %edx,%r8d</span><br><span class="line">   0x000000010040111d &lt;+83&gt;:    mov    0x10(%rbp),%edx</span><br><span class="line">   0x0000000100401120 &lt;+86&gt;:    lea    0x1ed9(%rip),%rcx        <span class="comment"># 0x100403000</span></span><br><span class="line">   0x0000000100401127 &lt;+93&gt;:    callq  0x1004011a0 &lt;<span class="built_in">printf</span>&gt;</span><br><span class="line">   0x000000010040112c &lt;+98&gt;:    mov    <span class="variable">$0x0</span>,%eax</span><br><span class="line">   0x0000000100401131 &lt;+103&gt;:   add    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x0000000100401135 &lt;+107&gt;:   pop    %rbp</span><br><span class="line">   0x0000000100401136 &lt;+108&gt;:   retq</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) n</span><br><span class="line">1, 2, 3, 4, 5</span><br><span class="line">12        <span class="built_in">return</span> 0;</span><br><span class="line">(gdb) n</span><br><span class="line">13      &#125;</span><br><span class="line">(gdb) n</span><br><span class="line">main (argc=1, argv=0xffffcc60) at main.c:17</span><br><span class="line">17          <span class="built_in">return</span> 0;</span><br><span class="line">(gdb) disassemble</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> main:</span><br><span class="line">   0x0000000100401137 &lt;+0&gt;:     push   %rbp</span><br><span class="line">   0x0000000100401138 &lt;+1&gt;:     mov    %rsp,%rbp</span><br><span class="line">   0x000000010040113b &lt;+4&gt;:     sub    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x000000010040113f &lt;+8&gt;:     mov    %ecx,0x10(%rbp)</span><br><span class="line">   0x0000000100401142 &lt;+11&gt;:    mov    %rdx,0x18(%rbp)</span><br><span class="line">   0x0000000100401146 &lt;+15&gt;:    callq  0x100401190 &lt;__main&gt;</span><br><span class="line">   0x000000010040114b &lt;+20&gt;:    movl   <span class="variable">$0x5</span>,0x20(%rsp)</span><br><span class="line">   0x0000000100401153 &lt;+28&gt;:    mov    <span class="variable">$0x4</span>,%r9d</span><br><span class="line">   0x0000000100401159 &lt;+34&gt;:    mov    <span class="variable">$0x3</span>,%r8d</span><br><span class="line">   0x000000010040115f &lt;+40&gt;:    mov    <span class="variable">$0x2</span>,%edx</span><br><span class="line">   0x0000000100401164 &lt;+45&gt;:    mov    <span class="variable">$0x1</span>,%ecx</span><br><span class="line">   0x0000000100401169 &lt;+50&gt;:    callq  0x1004010ca &lt;<span class="built_in">test</span>&gt;</span><br><span class="line">=&gt; 0x000000010040116e &lt;+55&gt;:    mov    <span class="variable">$0x0</span>,%eax</span><br><span class="line">   0x0000000100401173 &lt;+60&gt;:    add    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x0000000100401177 &lt;+64&gt;:    pop    %rbp</span><br><span class="line">   0x0000000100401178 &lt;+65&gt;:    retq</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用bt列出函数栈，使用frame n 查看栈帧，就可以看到出问题时候的函数回溯了，很方便</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">xhlu@bu-build-XHLU /cygdrive/c/Users/xhlu/Desktop/pri_xx/<span class="built_in">test</span></span><br><span class="line">$ gdb a.exe</span><br><span class="line">GNU gdb (GDB) (Cygwin 9.2-1) 9.2</span><br><span class="line">Copyright (C) 2020 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line">Type <span class="string">&quot;show copying&quot;</span> and <span class="string">&quot;show warranty&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line">This GDB was configured as <span class="string">&quot;x86_64-pc-cygwin&quot;</span>.</span><br><span class="line">Type <span class="string">&quot;show configuration&quot;</span> <span class="keyword">for</span> configuration details.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class="line">Find the GDB manual and other documentation resources online at:</span><br><span class="line">    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.</span><br><span class="line"></span><br><span class="line">For <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">&quot;help&quot;</span>.</span><br><span class="line">Type <span class="string">&quot;apropos word&quot;</span> to search <span class="keyword">for</span> commands related to <span class="string">&quot;word&quot;</span>...</span><br><span class="line">Reading symbols from a.exe...</span><br><span class="line">(gdb) b main.c:3</span><br><span class="line">Breakpoint 1 at 0x100401096: file main.c, line 4.</span><br><span class="line">(gdb) r</span><br><span class="line">Starting program: /cygdrive/c/Users/xhlu/Desktop/pri_xx/<span class="built_in">test</span>/a.exe</span><br><span class="line">[New Thread 4068.0xbdc]</span><br><span class="line">[New Thread 4068.0x18d8]</span><br><span class="line">[New Thread 4068.0x1664]</span><br><span class="line">[New Thread 4068.0x2610]</span><br><span class="line"></span><br><span class="line">Thread 1 <span class="string">&quot;a&quot;</span> hit Breakpoint 1, test2 (a=6, b=7, c=8, d=9, e=10) at main.c:4</span><br><span class="line">4         <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %d, %d, %d\n&quot;</span>, a,b,c,d,e);</span><br><span class="line">(gdb) bt</span><br><span class="line"><span class="comment">#0  test2 (a=6, b=7, c=8, d=9, e=10) at main.c:4</span></span><br><span class="line"><span class="comment">#1  0x000000010040110a in test (a=1, b=2, c=3, d=4, e=5) at main.c:10</span></span><br><span class="line"><span class="comment">#2  0x0000000100401173 in main (argc=1, argv=0xffffcc60) at main.c:16</span></span><br><span class="line">(gdb) frame 0</span><br><span class="line"><span class="comment">#0  test2 (a=6, b=7, c=8, d=9, e=10) at main.c:4</span></span><br><span class="line">4         <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %d, %d, %d\n&quot;</span>, a,b,c,d,e);</span><br><span class="line">(gdb) disassemble</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> test2:</span><br><span class="line">   0x0000000100401080 &lt;+0&gt;:     push   %rbp</span><br><span class="line">   0x0000000100401081 &lt;+1&gt;:     mov    %rsp,%rbp</span><br><span class="line">   0x0000000100401084 &lt;+4&gt;:     sub    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x0000000100401088 &lt;+8&gt;:     mov    %ecx,0x10(%rbp)</span><br><span class="line">   0x000000010040108b &lt;+11&gt;:    mov    %edx,0x18(%rbp)</span><br><span class="line">   0x000000010040108e &lt;+14&gt;:    mov    %r8d,0x20(%rbp)</span><br><span class="line">   0x0000000100401092 &lt;+18&gt;:    mov    %r9d,0x28(%rbp)</span><br><span class="line">=&gt; 0x0000000100401096 &lt;+22&gt;:    mov    0x20(%rbp),%ecx</span><br><span class="line">   0x0000000100401099 &lt;+25&gt;:    mov    0x18(%rbp),%edx</span><br><span class="line">   0x000000010040109c &lt;+28&gt;:    mov    0x30(%rbp),%eax</span><br><span class="line">   0x000000010040109f &lt;+31&gt;:    mov    %eax,0x28(%rsp)</span><br><span class="line">   0x00000001004010a3 &lt;+35&gt;:    mov    0x28(%rbp),%eax</span><br><span class="line">   0x00000001004010a6 &lt;+38&gt;:    mov    %eax,0x20(%rsp)</span><br><span class="line">   0x00000001004010aa &lt;+42&gt;:    mov    %ecx,%r9d</span><br><span class="line">   0x00000001004010ad &lt;+45&gt;:    mov    %edx,%r8d</span><br><span class="line">   0x00000001004010b0 &lt;+48&gt;:    mov    0x10(%rbp),%edx</span><br><span class="line">   0x00000001004010b3 &lt;+51&gt;:    lea    0x1f46(%rip),%rcx        <span class="comment"># 0x100403000</span></span><br><span class="line">   0x00000001004010ba &lt;+58&gt;:    callq  0x1004011b0 &lt;<span class="built_in">printf</span>&gt;</span><br><span class="line">   0x00000001004010bf &lt;+63&gt;:    mov    <span class="variable">$0x0</span>,%eax</span><br><span class="line">   0x00000001004010c4 &lt;+68&gt;:    add    <span class="variable">$0x30</span>,%rsp</span><br><span class="line">   0x00000001004010c8 &lt;+72&gt;:    pop    %rbp</span><br><span class="line">   0x00000001004010c9 &lt;+73&gt;:    retq</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) frame 1</span><br><span class="line"><span class="comment">#1  0x000000010040110a in test (a=1, b=2, c=3, d=4, e=5) at main.c:10</span></span><br><span class="line">10        test2(6,7,8,9,10);</span><br><span class="line">(gdb) disassemble</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> <span class="built_in">test</span>:</span><br><span class="line">   0x00000001004010ca &lt;+0&gt;:     push   %rbp</span><br><span class="line">   0x00000001004010cb &lt;+1&gt;:     mov    %rsp,%rbp</span><br><span class="line">   0x00000001004010ce &lt;+4&gt;:     sub    <span class="variable">$0x40</span>,%rsp</span><br><span class="line">   0x00000001004010d2 &lt;+8&gt;:     mov    %ecx,0x10(%rbp)</span><br><span class="line">   0x00000001004010d5 &lt;+11&gt;:    mov    %edx,0x18(%rbp)</span><br><span class="line">   0x00000001004010d8 &lt;+14&gt;:    mov    %r8d,0x20(%rbp)</span><br><span class="line">   0x00000001004010dc &lt;+18&gt;:    mov    %r9d,0x28(%rbp)</span><br><span class="line">   0x00000001004010e0 &lt;+22&gt;:    movl   <span class="variable">$0xc</span>,-0x4(%rbp)</span><br><span class="line">   0x00000001004010e7 &lt;+29&gt;:    movl   <span class="variable">$0xa</span>,0x20(%rsp)</span><br><span class="line">   0x00000001004010ef &lt;+37&gt;:    mov    <span class="variable">$0x9</span>,%r9d</span><br><span class="line">   0x00000001004010f5 &lt;+43&gt;:    mov    <span class="variable">$0x8</span>,%r8d</span><br><span class="line">   0x00000001004010fb &lt;+49&gt;:    mov    <span class="variable">$0x7</span>,%edx</span><br><span class="line">   0x0000000100401100 &lt;+54&gt;:    mov    <span class="variable">$0x6</span>,%ecx</span><br><span class="line">   0x0000000100401105 &lt;+59&gt;:    callq  0x100401080 &lt;test2&gt;</span><br><span class="line">=&gt; 0x000000010040110a &lt;+64&gt;:    mov    0x20(%rbp),%ecx</span><br><span class="line">   0x000000010040110d &lt;+67&gt;:    mov    0x18(%rbp),%edx</span><br><span class="line">   0x0000000100401110 &lt;+70&gt;:    mov    0x30(%rbp),%eax</span><br><span class="line">   0x0000000100401113 &lt;+73&gt;:    mov    %eax,0x28(%rsp)</span><br><span class="line">   0x0000000100401117 &lt;+77&gt;:    mov    0x28(%rbp),%eax</span><br><span class="line">   0x000000010040111a &lt;+80&gt;:    mov    %eax,0x20(%rsp)</span><br><span class="line">   0x000000010040111e &lt;+84&gt;:    mov    %ecx,%r9d</span><br><span class="line">   0x0000000100401121 &lt;+87&gt;:    mov    %edx,%r8d</span><br><span class="line">   0x0000000100401124 &lt;+90&gt;:    mov    0x10(%rbp),%edx</span><br><span class="line">   0x0000000100401127 &lt;+93&gt;:    lea    0x1ed2(%rip),%rcx        <span class="comment"># 0x100403000</span></span><br><span class="line">   0x000000010040112e &lt;+100&gt;:   callq  0x1004011b0 &lt;<span class="built_in">printf</span>&gt;</span><br><span class="line">   0x0000000100401133 &lt;+105&gt;:   mov    -0x4(%rbp),%eax</span><br><span class="line">   0x0000000100401136 &lt;+108&gt;:   add    <span class="variable">$0x40</span>,%rsp</span><br><span class="line">   0x000000010040113a &lt;+112&gt;:   pop    %rbp</span><br><span class="line">   0x000000010040113b &lt;+113&gt;:   retq</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) frame 2</span><br><span class="line"><span class="comment">#2  0x0000000100401173 in main (argc=1, argv=0xffffcc60) at main.c:16</span></span><br><span class="line">16          int xh = <span class="built_in">test</span>(1,2,3,4,5);</span><br><span class="line">(gdb) disassemble</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> main:</span><br><span class="line">   0x000000010040113c &lt;+0&gt;:     push   %rbp</span><br><span class="line">   0x000000010040113d &lt;+1&gt;:     mov    %rsp,%rbp</span><br><span class="line">   0x0000000100401140 &lt;+4&gt;:     sub    <span class="variable">$0x40</span>,%rsp</span><br><span class="line">   0x0000000100401144 &lt;+8&gt;:     mov    %ecx,0x10(%rbp)</span><br><span class="line">   0x0000000100401147 &lt;+11&gt;:    mov    %rdx,0x18(%rbp)</span><br><span class="line">   0x000000010040114b &lt;+15&gt;:    callq  0x1004011a0 &lt;__main&gt;</span><br><span class="line">   0x0000000100401150 &lt;+20&gt;:    movl   <span class="variable">$0x5</span>,0x20(%rsp)</span><br><span class="line">   0x0000000100401158 &lt;+28&gt;:    mov    <span class="variable">$0x4</span>,%r9d</span><br><span class="line">   0x000000010040115e &lt;+34&gt;:    mov    <span class="variable">$0x3</span>,%r8d</span><br><span class="line">   0x0000000100401164 &lt;+40&gt;:    mov    <span class="variable">$0x2</span>,%edx</span><br><span class="line">   0x0000000100401169 &lt;+45&gt;:    mov    <span class="variable">$0x1</span>,%ecx</span><br><span class="line">   0x000000010040116e &lt;+50&gt;:    callq  0x1004010ca &lt;<span class="built_in">test</span>&gt;</span><br><span class="line">=&gt; 0x0000000100401173 &lt;+55&gt;:    mov    %eax,-0x4(%rbp)</span><br><span class="line">   0x0000000100401176 &lt;+58&gt;:    mov    <span class="variable">$0x0</span>,%eax</span><br><span class="line">   0x000000010040117b &lt;+63&gt;:    add    <span class="variable">$0x40</span>,%rsp</span><br><span class="line">   0x000000010040117f &lt;+67&gt;:    pop    %rbp</span><br><span class="line">   0x0000000100401180 &lt;+68&gt;:    retq</span><br><span class="line">End of assembler dump.</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;测试源码&quot;&gt;&lt;a href=&quot;#测试源码&quot; class=&quot;headerlink&quot; title=&quot;测试源码&quot;&gt;&lt;/a&gt;测试源码&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu</summary>
      
    
    
    
    <category term="liveoverflow" scheme="http://example.com/categories/liveoverflow/"/>
    
    
  </entry>
  
  <entry>
    <title>Pi-KVM</title>
    <link href="http://example.com/2021/03/02/pikvm/flashing_hid/"/>
    <id>http://example.com/2021/03/02/pikvm/flashing_hid/</id>
    <published>2021-03-02T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Flashing-the-Arduino-HID"><a href="#Flashing-the-Arduino-HID" class="headerlink" title="Flashing the Arduino HID"></a>Flashing the Arduino HID</h1><h2 id="TTL-Firmware-the-default-option-for-v0-or-v2"><a href="#TTL-Firmware-the-default-option-for-v0-or-v2" class="headerlink" title="TTL Firmware (the default option for v0 or v2)"></a>TTL Firmware (the default option for v0 or v2)</h2><p>This operation can be done using your RPi (except Pi Zero W). Here the common steps:</p><ol><li>Disconnect the RESET wire from the Arduino board.</li><li>Connect the Arduino and RPi with a suitable USB cable.</li><li>Log in to the Raspberry Pi using SSH (<code>ssh root@&lt;addr&gt;</code> with password <code>root</code> by default) or using keyboard and monitor. The Raspberry Pi obtains the network address over DHCP.</li><li>Upload the firmware (USB keyboard &amp; mouse is used by default, on this step <a href="arduino_hid.md#ps2-keyboard">you can choose PS/2 keyboard</a>):<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@pikvm ~]# rw</span><br><span class="line">[root@pikvm ~]# systemctl stop kvmd</span><br><span class="line">[root@pikvm ~]# cp -r /usr/share/kvmd/hid ~</span><br><span class="line">[root@pikvm ~]# cd ~/hid</span><br><span class="line">[root@pikvm hid]# make</span><br><span class="line">[root@pikvm hid]# make install</span><br><span class="line">[root@pikvm hid]# reboot</span><br></pre></td></tr></table></figure></li><li>Connect the RESET wire, disconnect the USB cable, and reboot the RPi.</li></ol><p>With a Pi Zero W, you may consider building the firmware on a faster system and programming using USB or booting from another SD card and following the build steps using a clone of the kvmd repo.</p><h2 id="SPI-Firmware"><a href="#SPI-Firmware" class="headerlink" title="SPI Firmware"></a>SPI Firmware</h2><p>This operation can be done using your Raspberry Pi without disconnecting any wires:</p><ol><li>Connect the Arduino and RPi with a suitable USB cable.</li><li>Log in to the Raspberry Pi using SSH (<code>ssh root@&lt;addr&gt;</code> with password <code>root</code> by default) or using keyboard and monitor. The Raspberry Pi obtains the network address over DHCP.</li><li>Build and upload the firmware (USB keyboard &amp; mouse is used by default)<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@pikvm ~]# rw</span><br><span class="line">[root@pikvm ~]# systemctl stop kvmd</span><br><span class="line">[root@pikvm ~]# cp -r /usr/share/kvmd/hid ~</span><br><span class="line">[root@pikvm ~]# cd ~/hid</span><br><span class="line">[root@pikvm hid]# make spi</span><br><span class="line">[root@pikvm hid]# make install</span><br><span class="line">[root@pikvm hid]# reboot</span><br></pre></td></tr></table></figure><h2 id="Common-Errors"><a href="#Common-Errors" class="headerlink" title="Common Errors"></a>Common Errors</h2></li></ol><h3 id="Circuit-Issues"><a href="#Circuit-Issues" class="headerlink" title="Circuit Issues"></a>Circuit Issues</h3><h4 id="Common-Reset-Wire"><a href="#Common-Reset-Wire" class="headerlink" title="Common - Reset Wire"></a>Common - Reset Wire</h4><p>Different pins are used for the reset wire but serve a similar function. For programming the TTL firmware over USB, the reset wire should be disconnected. When programming using SPI, the reset wire needs to be connected through a transistor circuit and connected to GPIO25 (pin 22 on the GPIO header)</p><h4 id="SPI-specific-Wiring"><a href="#SPI-specific-Wiring" class="headerlink" title="SPI-specific Wiring"></a>SPI-specific Wiring</h4><p>The 3v3, ground, Reset (GPIO25), MISO, MOSI, SCLK, and CS1 need to be connected appropriately. SPIO_CS0 and SPIO_CS1 can both be used but the default configuration uses SPIO_CS1 for the Arduino Microcontroller (CS0 is used for another device on the v3). These generally follow a block as follows:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Pin  0        2         4</span><br><span class="line">      2        0         0</span><br><span class="line">      .........GR.C.......</span><br><span class="line">Row # 12345678901234567890</span><br><span class="line">      ........3MMS........</span><br><span class="line">Pin   0       1          3</span><br><span class="line">       1       7          9</span><br></pre></td></tr></table></figure><p>The most common error is an “off-by-one” error where pins are shifted by a row. Some cases have non-standard GPIO layouts so please be careful when following these instructions using a case that has a modified pinout.</p><h3 id="Library-Compatibility"><a href="#Library-Compatibility" class="headerlink" title="Library Compatibility"></a>Library Compatibility</h3><p>On <code>make install</code> you may encounter the following error:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;root&#x2F;.platformio&#x2F;packages&#x2F;tool-avrdude&#x2F;avrdude: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>Create a symlink for this library:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@pikvm ~]<span class="comment"># ln -s /usr/lib/libtinfo.so.6 /usr/lib/libtinfo.so.5</span></span><br></pre></td></tr></table></figure><p>And run <code>make install</code> again.</p><p>If you have any problems or questions, contact us using Discord: <a href="https://discord.gg/bpmXfz5">https://discord.gg/bpmXfz5</a></p><h3 id="Example-SPI-build-Flash"><a href="#Example-SPI-build-Flash" class="headerlink" title="Example SPI build + Flash"></a>Example SPI build + Flash</h3><details> <summary>Here's an end-to-end build and flash of the SPI HID firmware using the default options as described above.</summary><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line">[root@pikvm ~]<span class="comment"># rw</span></span><br><span class="line">[root@pikvm ~]<span class="comment"># systemctl stop kvmd</span></span><br><span class="line">[root@pikvm ~]<span class="comment"># cp -r /usr/share/kvmd/hid ~</span></span><br><span class="line">[root@pikvm ~]<span class="comment"># cd ~/hid</span></span><br><span class="line">[root@pikvm hid]<span class="comment"># make spi</span></span><br><span class="line">make _build E=spi</span><br><span class="line">make[1]: Entering directory <span class="string">&#x27;/root/hid&#x27;</span></span><br><span class="line">rm -f .current</span><br><span class="line">platformio run --environment spi</span><br><span class="line">************************************************************************************************************************************</span><br><span class="line">If you like PlatformIO, please:</span><br><span class="line">- follow us on Twitter to stay up-to-date on the latest project news &gt; https://twitter.com/PlatformIO_Org</span><br><span class="line">- star it on GitHub &gt; https://github.com/platformio/platformio</span><br><span class="line">- try PlatformIO IDE <span class="keyword">for</span> embedded development &gt; https://platformio.org/platformio-ide</span><br><span class="line">************************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">Processing spi (platform: atmelavr; board: micro; framework: arduino)</span><br><span class="line">------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Platform Manager: Installing atmelavr</span><br><span class="line">Unpacking  [<span class="comment">####################################]  100%</span></span><br><span class="line">Platform Manager: atmelavr @ 3.1.0 has been installed!</span><br><span class="line">The platform <span class="string">&#x27;atmelavr&#x27;</span> has been successfully installed!</span><br><span class="line">The rest of the packages will be installed later depending on your build environment.</span><br><span class="line">Tool Manager: Installing platformio/toolchain-atmelavr @ ~1.50400.0</span><br><span class="line">Downloading  [<span class="comment">####################################]  100%</span></span><br><span class="line">Unpacking  [<span class="comment">####################################]  100%</span></span><br><span class="line">Tool Manager: toolchain-atmelavr @ 1.50400.190710 has been installed!</span><br><span class="line">Tool Manager: Installing platformio/framework-arduino-avr @ ~5.1.0</span><br><span class="line">Downloading  [<span class="comment">####################################]  100%</span></span><br><span class="line">Unpacking  [<span class="comment">####################################]  100%</span></span><br><span class="line">Tool Manager: framework-arduino-avr @ 5.1.0 has been installed!</span><br><span class="line">Tool Manager: Installing platformio/tool-avrdude @ *</span><br><span class="line">Tool Manager: tool-avrdude @ 1.60300.200527 has been installed!</span><br><span class="line">Tool Manager: Installing platformio/tool-scons @ ~4.40001.0</span><br><span class="line">Unpacking  [<span class="comment">####################################]  100%</span></span><br><span class="line">Tool Manager: tool-scons @ 4.40001.0 has been installed!</span><br><span class="line">Verbose mode can be enabled via `-v, --verbose` option</span><br><span class="line">patch([], [])</span><br><span class="line">patch([], [])</span><br><span class="line">CONFIGURATION: https://docs.platformio.org/page/boards/atmelavr/micro.html</span><br><span class="line">PLATFORM: Atmel AVR (3.1.0) &gt; Arduino Micro</span><br><span class="line">HARDWARE: ATMEGA32U4 16MHz, 2.50KB RAM, 28KB Flash</span><br><span class="line">DEBUG: Current (simavr) On-board (simavr)</span><br><span class="line">PACKAGES:</span><br><span class="line"> - framework-arduino-avr 5.1.0</span><br><span class="line"> - tool-avrdude 1.60300.200527 (6.3.0)</span><br><span class="line"> - toolchain-atmelavr 1.50400.190710 (5.4.0)</span><br><span class="line">LDF: Library Dependency Finder -&gt; http://bit.ly/configure-pio-ldf</span><br><span class="line">LDF Modes: Finder ~ chain, Compatibility ~ soft</span><br><span class="line">Library Manager: Installing HID-Project @ 2.6.1</span><br><span class="line">Library Manager: HID-Project @ 2.6.1 has been installed!</span><br><span class="line">Library Manager: Installing git+https://github.com/Harvie/ps2dev<span class="comment">#v0.0.3</span></span><br><span class="line">git version 2.30.0</span><br><span class="line">Cloning into <span class="string">&#x27;/root/hid/.platformio/.cache/tmp/pkg-installing-84arveu0&#x27;</span>...</span><br><span class="line">Note: switching to <span class="string">&#x27;a043002178450772d72a58b0c42752a506fd4dea&#x27;</span>.</span><br><span class="line"></span><br><span class="line">You are <span class="keyword">in</span> <span class="string">&#x27;detached HEAD&#x27;</span> state. You can look around, make experimental</span><br><span class="line">changes and commit them, and you can discard any commits you make <span class="keyword">in</span> this</span><br><span class="line">state without impacting any branches by switching back to a branch.</span><br><span class="line"></span><br><span class="line">If you want to create a new branch to retain commits you create, you may</span><br><span class="line"><span class="keyword">do</span> so (now or later) by using -c with the switch <span class="built_in">command</span>. Example:</span><br><span class="line"></span><br><span class="line">  git switch -c &lt;new-branch-name&gt;</span><br><span class="line"></span><br><span class="line">Or undo this operation with:</span><br><span class="line"></span><br><span class="line">  git switch -</span><br><span class="line"></span><br><span class="line">Turn off this advice by setting config variable advice.detachedHead to <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Library Manager: ps2dev @ 0.0.3+sha.a043002 has been installed!</span><br><span class="line">Library Manager: Installing digitalWriteFast @ 1.0.0</span><br><span class="line">Library Manager: digitalWriteFast @ 1.0.0 has been installed!</span><br><span class="line">Found 8 compatible libraries</span><br><span class="line">Scanning dependencies...</span><br><span class="line">Dependency Graph</span><br><span class="line">|-- &lt;HID-Project&gt; 2.6.1</span><br><span class="line">|   |-- &lt;HID&gt; 1.0</span><br><span class="line">|-- &lt;ps2dev&gt; 0.0.3+sha.a043002</span><br><span class="line">|-- &lt;digitalWriteFast&gt; 1.0.0</span><br><span class="line">|-- &lt;SPI&gt; 1.0</span><br><span class="line">Building <span class="keyword">in</span> release mode</span><br><span class="line">patch -p1 -d /root/hid/.platformio/packages/framework-arduino-avr &lt; patches/no-main.patch</span><br><span class="line">patching file cores/arduino/main.cpp</span><br><span class="line">&lt;lambda&gt;([], [])</span><br><span class="line">patch -p1 -d /root/hid/.platformio/packages/framework-arduino-avr &lt; patches/optional-usb-serial.patch</span><br><span class="line">patching file cores/arduino/PluggableUSB.cpp</span><br><span class="line">patching file cores/arduino/USBCore.cpp</span><br><span class="line">&lt;lambda&gt;([], [])</span><br><span class="line">patch -p1 -d /root/hid/.platformio/packages/framework-arduino-avr &lt; patches/get-plugged-endpoint.patch</span><br><span class="line">patching file cores/arduino/PluggableUSB.h</span><br><span class="line">&lt;lambda&gt;([], [])</span><br><span class="line">patch -p1 -d /root/hid/.pio/libdeps/spi/HID-Project &lt; patches/shut-up.patch</span><br><span class="line">patching file src/KeyboardLayouts/ImprovedKeylayouts.h</span><br><span class="line">&lt;lambda&gt;([], [])</span><br><span class="line">patch -p1 -d /root/hid/.pio/libdeps/spi/HID-Project &lt; patches/no-hid-singletones.patch</span><br><span class="line">patching file src/SingleReport/BootKeyboard.cpp</span><br><span class="line">patching file src/SingleReport/BootKeyboard.h</span><br><span class="line">patching file src/SingleReport/BootMouse.cpp</span><br><span class="line">patching file src/SingleReport/BootMouse.h</span><br><span class="line">patching file src/SingleReport/SingleAbsoluteMouse.cpp</span><br><span class="line">patching file src/SingleReport/SingleAbsoluteMouse.h</span><br><span class="line">&lt;lambda&gt;([], [])</span><br><span class="line">patch -p1 -d /root/hid/.pio/libdeps/spi/HID-Project &lt; patches/absmouse-win-fix.patch</span><br><span class="line">patching file src/SingleReport/SingleAbsoluteMouse.cpp</span><br><span class="line">&lt;lambda&gt;([], [])</span><br><span class="line">Compiling .pio/build/spi/src/main.cpp.o</span><br><span class="line">Compiling .pio/build/spi/src/spi.cpp.o</span><br><span class="line">Compiling .pio/build/spi/lib2d3/HID/HID.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/MultiReport/AbsoluteMouse.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/MultiReport/Consumer.cpp.o</span><br><span class="line">Archiving .pio/build/spi/lib2d3/libHID.a</span><br><span class="line">Indexing .pio/build/spi/lib2d3/libHID.a</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/MultiReport/Gamepad.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/MultiReport/ImprovedKeyboard.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/MultiReport/ImprovedMouse.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/MultiReport/NKROKeyboard.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/MultiReport/SurfaceDial.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/MultiReport/System.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/SingleReport/BootKeyboard.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/SingleReport/BootMouse.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/SingleReport/RawHID.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/SingleReport/SingleAbsoluteMouse.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/SingleReport/SingleConsumer.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/SingleReport/SingleGamepad.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/SingleReport/SingleNKROKeyboard.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/SingleReport/SingleSystem.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libd81/HID-Project/port/samd.cpp.o</span><br><span class="line">Compiling .pio/build/spi/libeaf/ps2dev/ps2dev.cpp.o</span><br><span class="line">Archiving .pio/build/spi/lib822/libdigitalWriteFast.a</span><br><span class="line">Indexing .pio/build/spi/lib822/libdigitalWriteFast.a</span><br><span class="line">Compiling .pio/build/spi/lib519/SPI/SPI.cpp.o</span><br><span class="line">.pio/libdeps/spi/ps2dev/src/ps2dev.cpp: In member <span class="keyword">function</span> <span class="string">&#x27;int PS2dev::keyboard_reply(unsigned char, unsigned char*)&#x27;</span>:</span><br><span class="line">.pio/libdeps/spi/ps2dev/src/ps2dev.cpp:243:17: warning: variable <span class="string">&#x27;enabled&#x27;</span> <span class="built_in">set</span> but not used [-Wunused-but-set-variable]</span><br><span class="line">   unsigned char enabled;</span><br><span class="line">                 ^</span><br><span class="line">Archiving .pio/build/spi/libd81/libHID-Project.a</span><br><span class="line">Archiving .pio/build/spi/libFrameworkArduinoVariant.a</span><br><span class="line">Indexing .pio/build/spi/libFrameworkArduinoVariant.a</span><br><span class="line">Indexing .pio/build/spi/libd81/libHID-Project.a</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/CDC.cpp.o</span><br><span class="line">Archiving .pio/build/spi/lib519/libSPI.a</span><br><span class="line">Archiving .pio/build/spi/libeaf/libps2dev.a</span><br><span class="line">Indexing .pio/build/spi/lib519/libSPI.a</span><br><span class="line">Indexing .pio/build/spi/libeaf/libps2dev.a</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/HardwareSerial.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/HardwareSerial0.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/HardwareSerial1.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/HardwareSerial2.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/HardwareSerial3.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/IPAddress.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/PluggableUSB.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/Print.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/Stream.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/Tone.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/USBCore.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/WInterrupts.c.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/WMath.cpp.o</span><br><span class="line">.platformio/packages/framework-arduino-avr/cores/arduino/USBCore.cpp: In <span class="keyword">function</span> <span class="string">&#x27;bool ClassInterfaceRequest(USBSetup&amp;)&#x27;</span>:</span><br><span class="line">.platformio/packages/framework-arduino-avr/cores/arduino/USBCore.cpp:378:5: warning: unused variable <span class="string">&#x27;i&#x27;</span> [-Wunused-variable]</span><br><span class="line">  u8 i = setup.wIndex;</span><br><span class="line">     ^</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/WString.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/abi.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/hooks.c.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/main.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/new.cpp.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/wiring.c.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/wiring_analog.c.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/wiring_digital.c.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/wiring_pulse.S.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/wiring_pulse.c.o</span><br><span class="line">Compiling .pio/build/spi/FrameworkArduino/wiring_shift.c.o</span><br><span class="line">Archiving .pio/build/spi/libFrameworkArduino.a</span><br><span class="line">Indexing .pio/build/spi/libFrameworkArduino.a</span><br><span class="line">Linking .pio/build/spi/firmware.elf</span><br><span class="line">Building .pio/build/spi/firmware.hex</span><br><span class="line">Checking size .pio/build/spi/firmware.elf</span><br><span class="line">Advanced Memory Usage is available via <span class="string">&quot;PlatformIO Home &gt; Project Inspect&quot;</span></span><br><span class="line">RAM:   [=         ]   9.9% (used 253 bytes from 2560 bytes)</span><br><span class="line">Flash: [===       ]  34.7% (used 9952 bytes from 28672 bytes)</span><br><span class="line">=================================================== [SUCCESS] Took 56.86 seconds ===================================================</span><br><span class="line"></span><br><span class="line">Environment    Status    Duration</span><br><span class="line">-------------  --------  ------------</span><br><span class="line">spi            SUCCESS   00:00:56.861</span><br><span class="line">=================================================== 1 succeeded <span class="keyword">in</span> 00:00:56.861 ===================================================</span><br><span class="line"></span><br><span class="line">************************************************************************************************************************************</span><br><span class="line">There is a new version 5.1.0 of PlatformIO available.</span><br><span class="line">Please upgrade it via `platformio upgrade` or `pip install -U platformio` <span class="built_in">command</span>.</span><br><span class="line">Changes: https://docs.platformio.org/en/latest/history.html</span><br><span class="line">************************************************************************************************************************************</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -n spi &gt; .current</span><br><span class="line">make[1]: Leaving directory <span class="string">&#x27;/root/hid&#x27;</span></span><br><span class="line">[root@pikvm hid]<span class="comment"># make install</span></span><br><span class="line">platformio run --environment spi --target upload</span><br><span class="line">Processing spi (platform: atmelavr; board: micro; framework: arduino)</span><br><span class="line">------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Verbose mode can be enabled via `-v, --verbose` option</span><br><span class="line">CONFIGURATION: https://docs.platformio.org/page/boards/atmelavr/micro.html</span><br><span class="line">PLATFORM: Atmel AVR (3.1.0) &gt; Arduino Micro</span><br><span class="line">HARDWARE: ATMEGA32U4 16MHz, 2.50KB RAM, 28KB Flash</span><br><span class="line">DEBUG: Current (simavr) On-board (simavr)</span><br><span class="line">PACKAGES:</span><br><span class="line"> - framework-arduino-avr 5.1.0</span><br><span class="line"> - tool-avrdude 1.60300.200527 (6.3.0)</span><br><span class="line"> - toolchain-atmelavr 1.50400.190710 (5.4.0)</span><br><span class="line">LDF: Library Dependency Finder -&gt; http://bit.ly/configure-pio-ldf</span><br><span class="line">LDF Modes: Finder ~ chain, Compatibility ~ soft</span><br><span class="line">Found 8 compatible libraries</span><br><span class="line">Scanning dependencies...</span><br><span class="line">Dependency Graph</span><br><span class="line">|-- &lt;HID-Project&gt; 2.6.1</span><br><span class="line">|   |-- &lt;HID&gt; 1.0</span><br><span class="line">|-- &lt;ps2dev&gt; 0.0.3+sha.a043002</span><br><span class="line">|-- &lt;digitalWriteFast&gt; 1.0.0</span><br><span class="line">|-- &lt;SPI&gt; 1.0</span><br><span class="line">Building <span class="keyword">in</span> release mode</span><br><span class="line">Checking size .pio/build/spi/firmware.elf</span><br><span class="line">Advanced Memory Usage is available via <span class="string">&quot;PlatformIO Home &gt; Project Inspect&quot;</span></span><br><span class="line">RAM:   [=         ]   9.9% (used 253 bytes from 2560 bytes)</span><br><span class="line">Flash: [===       ]  34.7% (used 9952 bytes from 28672 bytes)</span><br><span class="line">Configuring upload protocol...</span><br><span class="line">AVAILABLE: custom</span><br><span class="line">CURRENT: upload_protocol = custom</span><br><span class="line">Uploading .pio/build/spi/firmware.hex</span><br><span class="line"></span><br><span class="line">avrdude: AVR device initialized and ready to accept instructions</span><br><span class="line"></span><br><span class="line">Reading | <span class="comment">################################################## | 100% 0.00s</span></span><br><span class="line"></span><br><span class="line">avrdude: Device signature = 0x1e9587 (probably m32u4)</span><br><span class="line">avrdude: NOTE: <span class="string">&quot;flash&quot;</span> memory has been specified, an erase cycle will be performed</span><br><span class="line">         To <span class="built_in">disable</span> this feature, specify the -D option.</span><br><span class="line">avrdude: erasing chip</span><br><span class="line">avrdude: reading input file <span class="string">&quot;.pio/build/spi/firmware.hex&quot;</span></span><br><span class="line">avrdude: writing flash (9952 bytes):</span><br><span class="line"></span><br><span class="line">Writing | <span class="comment">################################################## | 100% 2.78s</span></span><br><span class="line"></span><br><span class="line">avrdude: 9952 bytes of flash written</span><br><span class="line">avrdude: verifying flash memory against .pio/build/spi/firmware.hex:</span><br><span class="line">avrdude: load data flash data from input file .pio/build/spi/firmware.hex:</span><br><span class="line">avrdude: input file .pio/build/spi/firmware.hex contains 9952 bytes</span><br><span class="line">avrdude: reading on-chip flash data:</span><br><span class="line"></span><br><span class="line">Reading | <span class="comment">################################################## | 100% 2.33s</span></span><br><span class="line"></span><br><span class="line">avrdude: verifying ...</span><br><span class="line">avrdude: 9952 bytes of flash verified</span><br><span class="line"></span><br><span class="line">avrdude: safemode: Fuses OK (E:CB, H:D8, L:FF)</span><br><span class="line"></span><br><span class="line">avrdude <span class="keyword">done</span>.  Thank you.</span><br><span class="line"></span><br><span class="line">=================================================== [SUCCESS] Took 7.54 seconds ===================================================</span><br><span class="line"></span><br><span class="line">Environment    Status    Duration</span><br><span class="line">-------------  --------  ------------</span><br><span class="line">spi            SUCCESS   00:00:07.536</span><br><span class="line">=================================================== 1 succeeded <span class="keyword">in</span> 00:00:07.536 ===================================================</span><br><span class="line">[root@pikvm hid]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure></details>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Flashing-the-Arduino-HID&quot;&gt;&lt;a href=&quot;#Flashing-the-Arduino-HID&quot; class=&quot;headerlink&quot; title=&quot;Flashing the Arduino HID&quot;&gt;&lt;/a&gt;Flashing the A</summary>
      
    
    
    
    <category term="Pi-KVM" scheme="http://example.com/categories/Pi-KVM/"/>
    
    
  </entry>
  
  <entry>
    <title>Pi-KVM</title>
    <link href="http://example.com/2021/03/02/pikvm/Community_FAQ/"/>
    <id>http://example.com/2021/03/02/pikvm/Community_FAQ/</id>
    <published>2021-03-02T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Community-FAQ"><a href="#Community-FAQ" class="headerlink" title="Community FAQ"></a>Community FAQ</h1><h3 id="Can-this-be-used-for-gaming-Why-not"><a href="#Can-this-be-used-for-gaming-Why-not" class="headerlink" title="Can this be used for gaming? Why not?"></a>Can this be used for gaming? Why not?</h3><ul><li>❗No:exclamation:, the max bus lanes the Pi provides, is not enough to support anything faster than 30 FPS. Your better off looking at other solutions for this.</li><li>❗No:exclamation:, PiKVM does not capture and transmit audio at this time. The developers have indicated that this may be available for the v3 hat at some point in the future, but it is not a priority for development at this time.</li></ul><h3 id="Can-this-do-4K"><a href="#Can-this-do-4K" class="headerlink" title="Can this do 4K?"></a>Can this do 4K?</h3><ul><li>For the CSI Bridge, ❗No:exclamation:. there is not enough bandwidth in the CSI bus for that much data. 1080p50 will max out the bandwidth</li><li>For the USB capture devices: Technically yes, but they will downsample to something smaller to meet the usb2.0 bandwidth limitations, so the source may be 4k, but the stream will not.</li></ul><h3 id="Is-Pi-KVM-an-OS-or-its-own-Distro"><a href="#Is-Pi-KVM-an-OS-or-its-own-Distro" class="headerlink" title="Is Pi-KVM an OS or its own Distro?"></a>Is Pi-KVM an OS or its own Distro?</h3><ul><li>Yes and No, Other than the some repacking and patches, its heavly based off an existing <a href="https://archlinuxarm.org/">Arch Linux ARM</a>.</li></ul><h3 id="Why-are-you-using-Arch-Linux"><a href="#Why-are-you-using-Arch-Linux" class="headerlink" title="Why are you using Arch Linux?"></a>Why are you using Arch Linux?</h3><ul><li>The developer was more familiar with Arch Linux so this was chosen as the base operating system. As a Linux distribution, it has more in common than not with other distributions.<br><br/><br/><br>As an appliance, users are not expected to interact with the host operating system often, if at all. There are some distribution-specific differences, by default networking is done using either systemd-networkd or netctl but NetworkManager can be used as a replacement if one prefers.</li></ul><h3 id="Can-I-power-the-Pi-via-POE"><a href="#Can-I-power-the-Pi-via-POE" class="headerlink" title="Can I power the Pi via POE?"></a>Can I power the Pi via POE?</h3><ul><li>Yes! But you will still need to ensure you isolate the 5v connection between the Raspberry Pi and host PC to prevent backpower issues that can cause instability or damage to either the host PC or the Pi.</li></ul><h3 id="Do-I-need-a-power-splitter-Why-do-I-need-one"><a href="#Do-I-need-a-power-splitter-Why-do-I-need-one" class="headerlink" title="Do I need a power splitter? Why do I need one?"></a>Do I need a power splitter? Why do I need one?</h3><ul><li>Yes for RPi4, No for ZeroW</li><li>Yes, otherwise you could back power the pi and or the target</li><li>You can get a Y cable from amazon and mod one of the leads - Please see getting started guide</li><li>You can get a power splitter board from Tindi or PiShop (Links provided below)</li><li>If you have the v3 HAT - This is built in</li></ul><h3 id="I-can’t-get-the-KVM-KB-to-work-on-my-ZeroW"><a href="#I-can’t-get-the-KVM-KB-to-work-on-my-ZeroW" class="headerlink" title="I can’t get the KVM KB to work on my ZeroW!"></a>I can’t get the KVM KB to work on my ZeroW!</h3><p>Make sure that you did NOT modify your config.txt file, this is the default: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># See &#x2F;boot&#x2F;overlays&#x2F;README for all available options</span><br><span class="line">initramfs initramfs-linux.img followkernel</span><br><span class="line">hdmi_force_hotplug&#x3D;1</span><br><span class="line">gpu_mem&#x3D;64</span><br><span class="line">enable_uart&#x3D;1</span><br><span class="line">dtoverlay&#x3D;tc358743,i2c_pins_28_29&#x3D;1</span><br><span class="line">dtoverlay&#x3D;disable-bt</span><br><span class="line">dtoverlay&#x3D;dwc2,dr_mode&#x3D;peripheral</span><br></pre></td></tr></table></figure><p>Ensure that you have the cable(Needs to support both power/data) plugged into the right port, the one closest to the mini HDMI is the correct port</p><h3 id="Can-I-use-a-KB-on-my-ZeroW"><a href="#Can-I-use-a-KB-on-my-ZeroW" class="headerlink" title="Can I use a KB on my ZeroW?"></a>Can I use a KB on my ZeroW?</h3><ul><li>Yes but kb/mouse passthrough will not work. Its one or the other<ul><li>Host mode - Comment out dtoverlay=dwc2</li><li>Passthrough mode - Uncomment out dtoverlay=dwc2</li></ul></li></ul><h3 id="Can-you-have-the-pi-kvm-RPi4-connected-along-with-a-monitor"><a href="#Can-you-have-the-pi-kvm-RPi4-connected-along-with-a-monitor" class="headerlink" title="Can you have the pi-kvm(RPi4) connected along with a monitor?"></a>Can you have the pi-kvm(RPi4) connected along with a monitor?</h3><ul><li><strong>A community member has had success with the following: <a href="https://www.amazon.com/gp/product/B08DQWLXF1">https://www.amazon.com/gp/product/B08DQWLXF1</a></strong></li><li>Some Alternitives<ul><li>If you have two outputs, you may be able to use screen mirroring from the OS but not BIOS</li><li>If you have one output or need access from both a local monitor or Pi-KVM at boot time, one of the following options may work:</li><li>Passthrough HDMI capture devices (sometimes referred to as a loop capture device). The Elgato devices DO NOT WORK! Look for Linux OS support when choosing a device, the expected price range is about $35-$70 US.</li><li>Depending on your capture device, an HDMI splitter may work but will need what is called an EDID (Extended Device ID) generator, the monitor and capture device both generate EDID so the splitter must produce its own separate EDID for the host.</li><li>Look for HDMI splitters - although there have been reports that these are not stable<ul><li>Please use the search function in Discord, some users have had sucess in getting this to work but your mileage may vary</li></ul></li><li>The better solution is to capture the stream in a dir and then use VLC to stream to that capture on another computer. This will result in fps loss.</li></ul></li></ul><h3 id="Wouldn’t-it-be-good-to-have-different-hostnames-for-your-multitude-of-pi-kvms"><a href="#Wouldn’t-it-be-good-to-have-different-hostnames-for-your-multitude-of-pi-kvms" class="headerlink" title="Wouldn’t it be good to have different hostnames for your multitude of pi-kvms?"></a>Wouldn’t it be good to have different hostnames for your multitude of pi-kvms?</h3><p>Yes! And it’s easy to do! Using a SSH session or the web terminal:</p><ul><li>Make sure you’re <code>root</code>, if you’re not root use the <code>su</code> command to become root</li><li>Enter read write mode of the PiKVM by executing the <code>rw</code> command</li><li>Execute: <code>hostnamectl set-hostname yournewhostname.domain</code></li><li>Optional: Edit <code>/etc/kvmd/meta.yaml</code> to alter the displayed hostname in the web UI</li><li>Reboot the pikvm</li></ul><h3 id="I-can’t-make-edits"><a href="#I-can’t-make-edits" class="headerlink" title="I can’t make edits?!?!?"></a>I can’t make edits?!?!?</h3><ul><li>Did you issue a <code>rw</code> before updating/editing?</li></ul><h3 id="In-the-Web-Terminal-how-do-I-get-root"><a href="#In-the-Web-Terminal-how-do-I-get-root" class="headerlink" title="In the Web Terminal, how do I get root?"></a>In the Web Terminal, how do I get root?</h3><ul><li>Type <code>su -</code></li><li>Put <code>root</code> for the password</li></ul><h3 id="I-want-to-do-something-not-related-to-Pi-KVM"><a href="#I-want-to-do-something-not-related-to-Pi-KVM" class="headerlink" title="I want to do something not related to Pi-KVM"></a>I want to do something not related to Pi-KVM</h3><ul><li>It’s recommended that you review Arch documents related to what you want to do, while there are several folks in discord who can help, there is no obligation…they do it for the feels. So if you don’t get an answer within the time frame you are looking for, it’s advised you start google searching for what you want.</li></ul><h3 id="Can-this-be-used-in-any-other-distro’s-like-Rasbian-Run-this-in-a-Docker"><a href="#Can-this-be-used-in-any-other-distro’s-like-Rasbian-Run-this-in-a-Docker" class="headerlink" title="Can this be used in any other distro’s like Rasbian? Run this in a Docker?"></a>Can this be used in any other distro’s like Rasbian? Run this in a Docker?</h3><ul><li>Not at this time, maybe in the future</li></ul><h3 id="My-Pi-keeps-disconnecting-from-my-wireless-What-do-I-do"><a href="#My-Pi-keeps-disconnecting-from-my-wireless-What-do-I-do" class="headerlink" title="My Pi keeps disconnecting from my wireless! What do I do?"></a>My Pi keeps disconnecting from my wireless! What do I do?</h3><ul><li>You can try the following: Edit “/etc/conf.d/wireless-regdom” and look for your region and uncomment it. Example: WIRELESS_REGDOM=”US”</li></ul><h3 id="I-want-a-static-IP"><a href="#I-want-a-static-IP" class="headerlink" title="I want a static IP!!"></a>I want a static IP!!</h3><ul><li>You can configure systemd-networkd for a static address for ethernet NIC. Config file is /etc/systemd/network/eth0.network</li><li>For wireless adapter, config file is /etc/netctl/wlan0-<wifiname></li><li>See pikvm/wifi_config.md at master · pikvm/pikvm · GitHub for details on how to get basic wireless config with DHCP going.  Afterwards, you’ll need to edit the /etc/netctl/wlan0-<wifiname> file changing the IP=dhcp line with the following lines updated to reflect your network:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IP&#x3D;static</span><br><span class="line">Address&#x3D;(&#39;192.168.X.XXX&#x2F;24&#39;)</span><br><span class="line">Gateway&#x3D;(&#39;192.168.X.X&#39;)</span><br><span class="line">DNS&#x3D;(&quot;192.168.X.X 1.0.0.1 1.1.1.1&quot;)</span><br></pre></td></tr></table></figure></li><li>You can also reserve the IP in your dhcp server (Quicker)</li></ul><h3 id="Why-do-I-keep-getting-a-different-IP"><a href="#Why-do-I-keep-getting-a-different-IP" class="headerlink" title="Why do I keep getting a different IP?"></a>Why do I keep getting a different IP?</h3><ul><li>Add to, /etc/systemd/network/eth0.network<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[DHCP]</span><br><span class="line">ClientIdentifier&#x3D;mac</span><br></pre></td></tr></table></figure></li><li>Reserve the DHCP ip in your server/router</li><li>You can replace systemd-networkd with NetworkManager, this has proven to fix the IP issue with DHCP for some routers</li></ul><h3 id="HELP-I-can’t-find-the-IP-on-the-ZeroW-RPi4"><a href="#HELP-I-can’t-find-the-IP-on-the-ZeroW-RPi4" class="headerlink" title="HELP!! I can’t find the IP on the ZeroW/RPi4"></a>HELP!! I can’t find the IP on the ZeroW/RPi4</h3><ul><li>Open a browser and type: pikvm, still doesnt work?</li><li>Use the FING mobile app to scan your network, its free</li><li>Install Angry IP scanner, tools/preferences/Display results in the results list/Select Alive hosts, modify IP range, hit start</li><li>Using FF, navigate to <a href="https://pikvm/">https://pikvm</a> (Depends on your network if this actually works, in most case’s will work))<ul><li>Open web terminal and go to root, rw then nano /etc/issue</li><li>add ‘IP: \4’</li><li>Once you reboot, you will now see the IP in the upper left</li><li>The below commands will verify that your Pi on on your network<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">arp -a | grep below is a list of MAC&#39;s for Raspberry Pi</span><br><span class="line">B8:27:EB:xx:xx:xxB8-27-EB-xx-xx-xxB827.EBxx.xxxx</span><br><span class="line">DC:A6:32:xx:xx:xxDC-A6-32-xx-xx-xxDCA6.32xx.xxxx</span><br><span class="line">E4:5F:01:xx:xx:xxE4-5F-01-xx-xx-xxE45F.01xx.xxxx</span><br><span class="line">Power shell: arp -a | findstr &#39;b8-27-eb&#39; (Replace with the above, all lower case)</span><br></pre></td></tr></table></figure><h3 id="Help-I-ran-out-of-room-What-now"><a href="#Help-I-ran-out-of-room-What-now" class="headerlink" title="Help! I ran out of room! What now?"></a>Help! I ran out of room! What now?</h3></li></ul></li><li>You’ve cached package updates you no longer need.</li><li>Enter read/write mode by executing rw as root</li><li>Execute the following as root to clear the package cache<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf &#x2F;var&#x2F;cache&#x2F;pacman&#x2F;pkg&#x2F;*</span><br></pre></td></tr></table></figure></li><li>Exit read/write mode by executing ro as root</li><li>You can also use gparted to resize partitions without losing data, although this may delete all of your data</li></ul><h3 id="Can-you-connect-a-camera-to-this-and-still-make-pikvm-functional"><a href="#Can-you-connect-a-camera-to-this-and-still-make-pikvm-functional" class="headerlink" title="Can you connect a camera to this and still make pikvm functional?"></a>Can you connect a camera to this and still make pikvm functional?</h3><ul><li>Yes, any cheapo webcam can be used in place of the usb dongle, please use the usb image</li></ul><h3 id="I-have-a-question-that-is-not-answered-here-Now-what"><a href="#I-have-a-question-that-is-not-answered-here-Now-what" class="headerlink" title="I have a question that is not answered here!! Now what?"></a>I have a question that is not answered here!! Now what?</h3><ul><li>Please look at all pins on Discord</li><li>Please look in #news on Discord</li></ul><h3 id="I-want-the-v3-hat-Where-do-I-get-it"><a href="#I-want-the-v3-hat-Where-do-I-get-it" class="headerlink" title="I want the v3 hat!! Where do I get it??"></a>I want the v3 hat!! Where do I get it??</h3><ul><li>At this time it is not available, due to the current pandemic the factories are running at a much slower rate</li></ul><h3 id="HELP-Something-isn’t-working"><a href="#HELP-Something-isn’t-working" class="headerlink" title="HELP!! Something isn’t working!!"></a>HELP!! Something isn’t working!!</h3><ul><li>What was the last thing or most recent thing you did? Did you undo it?</li><li>Did you hook this to anything else? If not why not?</li><li>Did you try different cables?<h3 id="Can-you-use-an-iPad-on-PiKVM"><a href="#Can-you-use-an-iPad-on-PiKVM" class="headerlink" title="Can you use an iPad on PiKVM?"></a>Can you use an iPad on PiKVM?</h3></li><li>Yes, with the correct hardware you can control an iPad</li><li>Yes, activate VNC and use JUMP app(Full featured but more expensive), or bVNC(Not recommended, lack luster features but cheap). RealVNC does NOT work<h3 id="Can-I-use-RealVNC-to-connect-to-PiKVM"><a href="#Can-I-use-RealVNC-to-connect-to-PiKVM" class="headerlink" title="Can I use RealVNC to connect to PiKVM?"></a>Can I use RealVNC to connect to PiKVM?</h3></li><li>No, RealVNC is not a real vnc so will not work</li></ul><h3 id="How-do-I-add-my-own-SSL-cert"><a href="#How-do-I-add-my-own-SSL-cert" class="headerlink" title="How do I add my own SSL cert?"></a>How do I add my own SSL cert?</h3><ul><li>If you have a certificate(:exclamation:<strong>Making a cert falls outside the scope of PIKVM - Please reference Linux documentation</strong>:exclamation:), replace the public key in /etc/kvmd/nginx/ssl/server.crt and private key in /etc/kvmd/nginx/ssl/server.key and restart the kvmd-nginx service.</li><li>It should look like the following:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;etc&#x2F;kvmd&#x2F;nginx</span><br><span class="line">cat ssl.conf (Expection of what&#39;s inside the file)</span><br><span class="line">ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1 TLSv1;</span><br><span class="line">ssl_ciphers &quot;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&quot;;</span><br><span class="line">ssl_certificate &#x2F;etc&#x2F;kvmd&#x2F;nginx&#x2F;ssl&#x2F;server.crt;</span><br><span class="line">ssl_certificate_key &#x2F;etc&#x2F;kvmd&#x2F;nginx&#x2F;ssl&#x2F;server.key;</span><br><span class="line">add_header Strict-Transport-Security &quot;max-age&#x3D;31536000; includeSubDomains&quot; always;</span><br></pre></td></tr></table></figure><h3 id="Things-to-do-after-initial-install"><a href="#Things-to-do-after-initial-install" class="headerlink" title="Things to do after initial install:"></a>Things to do after initial install:</h3><ul><li><p>Fix date: ‘timedatectl list-timezones’ then ‘timedatectl set-timezone America/Los_Angeles’ (Change to your location)</p></li><li><p>Update Pi-KVM, follow #news on Discord for instructions</p></li><li><p>Enable Avahi-Daemon (A Zeroconf daemon) to allow finding the pikvm via mDNS queries as <code>pikvm.local</code></p><ul><li><code>pacman -S avahi nss-mdns</code> </li><li><code>gtk3 python-dbus python-gobject</code> (You may or may not need this to make it work)</li><li>Enable the Avahi daemon in order to make it persistent after reboot:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable avahi-daemon.service</span><br></pre></td></tr></table></figure></li><li>Start the DBus (if not already running) &amp; Avahi daemons:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start dbus.service</span><br><span class="line">systemctl start avahi-daemon.service</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Setup a NFS share to give read/write storage on the read only pikvm</p><ul><li>Note: this does assume you already have an NFS server on your network and accessible to pikvm</li><li>Source <a href="https://linuxhint.com/install_configure_nfs/">https://linuxhint.com/install_configure_nfs/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pacman -S nfs-utils</span><br><span class="line">showmount -e 192.168.1.XXX</span><br><span class="line">mount -t nfs 192.168.1.XXX:&#x2F;volume1&#x2F;Data &#x2F;mnt&#x2F;Data</span><br><span class="line">nano &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure>Add To the bottom of the file<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.XXX:&#x2F;volume1&#x2F;Data &#x2F;mnt&#x2F;Data nfs      auto,rw,soft    0 0</span><br></pre></td></tr></table></figure><h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3></li></ul></li><li><p>:exclamation:<strong>It is expected that you are aware of basic networking while working on this project and that you have read up on the project prior to going to Discord</strong>:exclamation:</p><ul><li>Do you know the IP?</li><li>Can you ping the IP?</li><li>Did you swap cables?</li><li>Did you swap the eth port to a known working eth port?</li><li>Do you have access to another router or switch?</li><li>Did you change ports on the router/switch?</li><li>RPi4 - Did you hook up a monitor? Once logged in, can you ping to your gateway? Other IP’s on the same network?</li><li>Did you connect a monitor to the target? Does it work?</li><li>Did you connect the PIKVM to the target directly? Does it work?</li></ul></li><li><p>Reboot target</p></li><li><p>Try default image, do not update and test</p></li></ul><p>-copy/paste into a file, call it pi-info.sh, chmod +x pi-info.sh, ./pi-info.sh <strong>Same script is located <a href="https://pastebin.com/u/srepac">here</a></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">uptime</span><br><span class="line">TMPFILE&#x3D;&quot;&#x2F;tmp&#x2F;pacmanquery&quot;; &#x2F;bin&#x2F;rm -f $TMPFILE</span><br><span class="line">pacman -Q | awk &#39;&#123;print $2, $1&#125;&#39; &gt; $TMPFILE</span><br><span class="line">chmod go+w $TMPFILE</span><br><span class="line"></span><br><span class="line">pistat &amp;&amp; echo</span><br><span class="line"></span><br><span class="line">printf &quot;%-18s\t%s\n&quot; &quot;Version&quot; &quot;Package-Name&quot; &quot;----------------------&quot; &quot;-----------------------------&quot;</span><br><span class="line"></span><br><span class="line">PACKAGES&#x3D;&quot;firmware bootloader kvmd ustreamer nginx wpa wireless&quot;</span><br><span class="line">for PKG in $( echo $PACKAGES ); do</span><br><span class="line">        printf &quot;%-18s\t%s\n&quot; $(grep $PKG $TMPFILE | sed &#39;s&#x2F;-[1-9]&#x2F;&#x2F;g&#39;)</span><br><span class="line">done</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>| grep tc35``` - CSI</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&#x2F;&gt;&lt;br&#x2F;&gt;</span><br><span class="line">&#96;&#96;&#96;dmesg | egrep &#39;1-1.[245]|uvc&#39;&#96;&#96;&#96; - USB</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;systemctl status kvmd&#96;&#96;&#96;</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;systemctl status kvmd-otg&#96;&#96;&#96;</span><br><span class="line"></span><br><span class="line">- **hint:**  look at kvmd-platform line of the output... make sure it matches the image they expect for the capture device and platform</span><br><span class="line"></span><br><span class="line">- Keyboard&#x2F;Mouse icons orange? Try a different cable (ALLOT are power only), try a different usb port</span><br><span class="line"></span><br><span class="line">- Should see the following if everything is in place</span><br><span class="line">&#96;&#96;&#96;ls -l &#x2F;dev&#x2F;kvmd*</span><br><span class="line">lrwxrwxrwx 1 root root 5 Apr  5 21:33 &#x2F;dev&#x2F;kvmd-hid-keyboard -&gt; hidg0</span><br><span class="line">lrwxrwxrwx 1 root root 5 Apr  5 21:33 &#x2F;dev&#x2F;kvmd-hid-mouse -&gt; hidg1</span><br><span class="line">lrwxrwxrwx 1 root root 6 Mar 15 09:07 &#x2F;dev&#x2F;kvmd-video -&gt; video0</span><br></pre></td></tr></table></figure><h3 id="Common-Commands-for-troubleshooting-Pi-KVM"><a href="#Common-Commands-for-troubleshooting-Pi-KVM" class="headerlink" title="Common Commands for troubleshooting Pi-KVM"></a>Common Commands for troubleshooting Pi-KVM</h3><ul><li><code>journalctl -u kvmd</code></li><li><code>journalctl -u kvmd-vnc</code></li><li><code>journalctl -u kvmd-ipmi</code></li></ul><h3 id="Common-ARCH-commands"><a href="#Common-ARCH-commands" class="headerlink" title="Common ARCH commands"></a>Common ARCH commands</h3><ul><li>search - <code>pacman -Ss &#39;the thing&#39;</code></li><li>install - <code>pacman -S &#39;the thing&#39;</code></li><li>remove - <code>pacman -Rscnd &#39;the thing&#39;</code></li></ul><h3 id="Common-wifi-commands"><a href="#Common-wifi-commands" class="headerlink" title="Common wifi commands"></a>Common wifi commands</h3><ul><li><p> <code>iwconfig</code> manipulate the basic wireless parameters</p></li><li><p><code>iwlist</code>   allow’s you to initiate scanning and list frequencies, bit-rates, encryption keys…</p></li><li><p><code>iwspy</code>    displays per node link quality</p></li><li><p><code>iwpriv</code>   allow’s you to manipulate the Wireless Extensions specific to a driver (private)</p></li><li><p>Some examples</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iw dev wlan0 scan | egrep &quot;signal:|SSID:&quot; | sed -e &quot;s&#x2F;\tsignal: &#x2F;&#x2F;&quot; -e &quot;s&#x2F;\tSSID: &#x2F;&#x2F;&quot; | awk &#39;&#123;ORS &#x3D; (NR % 2 &#x3D;&#x3D; 0)? &quot;\n&quot; : &quot; &quot;; print&#125;&#39; | sort</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iwlist wlan0 scan | egrep &quot;Cell|ESSID|Signal|Rates&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iwlist wlan0 scan</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iw wlan0 info</span><br></pre></td></tr></table></figure><h3 id="Bootup-power-issues"><a href="#Bootup-power-issues" class="headerlink" title="Bootup/power issues"></a>Bootup/power issues</h3></li><li><p>PiKVM won’t boot past “rainbow” screen</p><ul><li>Are you plugged into the right HDMI port? Needs to be the one next to the power</li><li>Have you reflashed your SD card?</li></ul></li></ul><h3 id="PiKVM-Complains-about-low-power-warnings"><a href="#PiKVM-Complains-about-low-power-warnings" class="headerlink" title="PiKVM Complains about low power warnings"></a>PiKVM Complains about low power warnings</h3><ul><li>Are you using a <code>proper</code> power supply? Not one you hacked together</li><li>Some USB power bricks advertise 5V @ 2.1A or higher, but can’t deliver consistent 5V.  Best to use rpi foundation recommended power supplies</li></ul><h3 id="USB-Video-Capture-Issues"><a href="#USB-Video-Capture-Issues" class="headerlink" title="USB Video Capture Issues"></a>USB Video Capture Issues</h3><ul><li>Make sure this is a capture card and not an adapter (HDMI-&gt;USB)</li></ul><h3 id="HDMI-CSI-Capture-issues"><a href="#HDMI-CSI-Capture-issues" class="headerlink" title="HDMI-CSI Capture issues"></a>HDMI-CSI Capture issues</h3><ul><li>Have you reset the Target PC?</li><li>Are you sure it’s a bridge and not an extender? There is a difference</li><li>Did you make sure it’s plugged into the right port? It needs to say Camera NOT Display</li><li>Did you try another ribbon cable?</li><li>Did you reseat the ribbon cable?</li><li>Is the ribbon cable facing the right way? Needs to be towards the PCB (Green or Black)</li></ul><h3 id="Capturing-video-from-non-HDMI-sources"><a href="#Capturing-video-from-non-HDMI-sources" class="headerlink" title="Capturing video from non HDMI sources"></a>Capturing video from non HDMI sources</h3><ul><li>TBD</li></ul><h3 id="Keyboard-Mouse-Issues"><a href="#Keyboard-Mouse-Issues" class="headerlink" title="Keyboard/Mouse Issues"></a>Keyboard/Mouse Issues</h3><ul><li>TBD</li></ul><h3 id="OTG-Keyboard-Mouse-Connection"><a href="#OTG-Keyboard-Mouse-Connection" class="headerlink" title="OTG Keyboard/Mouse Connection"></a>OTG Keyboard/Mouse Connection</h3><ul><li>TBD</li></ul><h3 id="Arduino-Keyboard-Mouse-Connection-UART-wiring"><a href="#Arduino-Keyboard-Mouse-Connection-UART-wiring" class="headerlink" title="Arduino Keyboard Mouse Connection (UART wiring)"></a>Arduino Keyboard Mouse Connection (UART wiring)</h3><ul><li>TBD</li></ul><h3 id="Arduino-Keyboard-Mouse-Connection-SPI-Wiring"><a href="#Arduino-Keyboard-Mouse-Connection-SPI-Wiring" class="headerlink" title="Arduino Keyboard/Mouse Connection (SPI Wiring)"></a>Arduino Keyboard/Mouse Connection (SPI Wiring)</h3><ul><li>TBD</li></ul><h3 id="ATX-Control-Issues"><a href="#ATX-Control-Issues" class="headerlink" title="ATX Control Issues"></a>ATX Control Issues</h3><ul><li>TBD</li></ul><h3 id="HDMI-KVM-Interface-Issues"><a href="#HDMI-KVM-Interface-Issues" class="headerlink" title="HDMI KVM Interface Issues"></a>HDMI KVM Interface Issues</h3><ul><li>TBD</li></ul><h3 id="Connection-issues"><a href="#Connection-issues" class="headerlink" title="Connection issues"></a>Connection issues</h3><ul><li>TBD</li></ul><h3 id="Misc-stuff"><a href="#Misc-stuff" class="headerlink" title="Misc stuff"></a>Misc stuff</h3><ul><li><p>Fully working example of a Pi4 USB-HDMI KVM attached to AIMOS 4-port HDMI KVM switch (8 port is on AliExpress), with keyboard hotkey switching between inputs, and mass storage media emulation on a Pi Zero W <a href="https://docs.google.com/document/d/1wgBZHxwpbJWkJBD3I8ZkZxSDxt0DdNDDYRNtVoL_vK4">https://docs.google.com/document/d/1wgBZHxwpbJWkJBD3I8ZkZxSDxt0DdNDDYRNtVoL_vK4</a></p></li><li><p>Useful scripts that enhance the Pi-KVM’s functionality <code>https://pastebin.com/u/srepac</code></p><h3 id="Useful-links"><a href="#Useful-links" class="headerlink" title="Useful links"></a>Useful links</h3></li><li><p><a href="https://www.tomshardware.com/how-to/kvm-over-ip-raspberry-pi">https://www.tomshardware.com/how-to/kvm-over-ip-raspberry-pi</a> - Very good article on PI-KVM setup</p></li><li><p>Pi-KVM Power/Data OTG splitter boards</p><ul><li><a href="https://www.pishop.us/product/usb-pwr-splitter/">https://www.pishop.us/product/usb-pwr-splitter/</a> (Look on Tindi for the same thing in the UK)</li><li><a href="https://www.pishop.us/product/usb-c-pwr-splitter/">https://www.pishop.us/product/usb-c-pwr-splitter/</a> (Look on Tindi for the same thing in the UK)</li></ul></li><li><p>Current 3D cases that support the various Pi-KVM hardware configurations <a href="https://www.thingiverse.com/search?q=pi-kvm&amp;type=things&amp;sort=relevant">https://www.thingiverse.com/search?q=pi-kvm&amp;type=things&amp;sort=relevant</a></p></li></ul><p>As of March 2021, Out of Stock or hard to get, all have exceptionally LONG shipping dates - Could try AliExpress or get a usb2hdmi dongle from Amazon, please ask or search in Discord for the best known working one</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Ezcoo KVM - Goes out of stock frequently</span><br><span class="line">CSI2-HDMI bridge w&#x2F; TC358743XBG chip - Goes out of stock freqently </span><br><span class="line">Alternative names for the same devices:</span><br><span class="line">Tiamu  Sling    Yazan    NingwangEssenc  Geekworm</span><br><span class="line">Fauge  Haudang  AKAT    Docoop    Katigan  Lyusa (recommended by mdevaev)</span><br><span class="line">LNIMI  cherrypopLopbinteUang      Tuneway  Mustwell</span><br><span class="line">FacibomBinchil  Cobeky  Ctzrzyt    Davitu</span><br></pre></td></tr></table></figure><ul><li>Community recommended USB capture <a href="https://www.amazon.com/gp/product/B08FG54QPH">card</a></li><li>Community recommended Loop device that allows <a href="https://www.amazon.com/gp/product/B08DQWLXF1">Monitor+PiKVM</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Community-FAQ&quot;&gt;&lt;a href=&quot;#Community-FAQ&quot; class=&quot;headerlink&quot; title=&quot;Community FAQ&quot;&gt;&lt;/a&gt;Community FAQ&lt;/h1&gt;&lt;h3 id=&quot;Can-this-be-used-for-</summary>
      
    
    
    
    <category term="Pi-KVM" scheme="http://example.com/categories/Pi-KVM/"/>
    
    
  </entry>
  
  <entry>
    <title>C 的角角落落</title>
    <link href="http://example.com/2021/03/02/c/c%E8%A7%92%E8%A7%92%E8%90%BD%E8%90%BD/"/>
    <id>http://example.com/2021/03/02/c/c%E8%A7%92%E8%A7%92%E8%90%BD%E8%90%BD/</id>
    <published>2021-03-02T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.819Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="asm-volatile-“”-”memory”-强制每次都从内存中读取数据，不优化。"><a href="#asm-volatile-“”-”memory”-强制每次都从内存中读取数据，不优化。" class="headerlink" title="asm volatile(“”: : :”memory”)  // 强制每次都从内存中读取数据，不优化。"></a><strong>asm</strong> <strong>volatile</strong>(“”: : :”memory”)  // 强制每次都从内存中读取数据，不优化。</h3><hr><p>memory 强制gcc编译器假设RAM所有内存单元均被汇编指令修改，这样cpu中的registers和cache中已缓存的内存单元中的数据将作废。cpu将不得不在需要的时候重新读取内存中的数据。这就阻止了cpu又将registers，cache中的数据用于去优化指令，而避免去访问内存。</p><ol><li> __asm__用于指示编译器在此插入汇编语句。</li><li> __volatile__用于告诉编译器，严禁将此处的汇编语句与其它的语句重组合优化。即：原原本本按原来的样子处理这这里的汇编。</li><li> memory强制gcc编译器假设RAM所有内存单元均被汇编指令修改，这样cpu中的registers和cache中已缓存的内存单元中的数据将作废。cpu将不得不在需要的时候重新读取内存中的数据。这就阻止了cpu又将registers，cache中的数据用于去优化指令，而避免去访问内存。</li><li> “”:::表示这是个空指令。barrier()不用在此插入一条串行化汇编指令。</li></ol><hr><h3 id="section-段的方式访问函数"><a href="#section-段的方式访问函数" class="headerlink" title="section 段的方式访问函数"></a>section 段的方式访问函数</h3><hr><p>将我需要用到的函数放在 .mywon 段中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*myown_call)</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> myown_call _myown_start;</span><br><span class="line"><span class="keyword">extern</span> myown_call _myown_end;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _init __attribute__((unused, section(<span class="meta-string">&quot;.myown&quot;</span>)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> func_init(func) myown_call _fn_##func _init = func</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mspec1</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    write(<span class="number">1</span>, <span class="string">&quot;aha!\n&quot;</span>, <span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mspec2</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    write(<span class="number">1</span>, <span class="string">&quot;aloha!\n&quot;</span>, <span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mspec3</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    write(<span class="number">1</span>, <span class="string">&quot;hello!\n&quot;</span>, <span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func_init(mspec1);</span><br><span class="line">func_init(mspec2);</span><br><span class="line">func_init(mspec3);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* exactly like below:</span></span><br><span class="line"><span class="comment">static myown_call mc1  __attribute__((unused, section(&quot;.myown&quot;))) = mspec1;</span></span><br><span class="line"><span class="comment">static myown_call mc2  __attribute__((unused, section(&quot;.myown&quot;))) = mspec2;</span></span><br><span class="line"><span class="comment">static myown_call mc3  __attribute__((unused, section(&quot;.myown&quot;))) = mspec3;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">do_initcalls</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    myown_call *call_ptr = &amp;_myown_start;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">fprintf</span> (<span class="built_in">stderr</span>, <span class="string">&quot;call_ptr: %p\n&quot;</span>, call_ptr);</span><br><span class="line">        (*call_ptr)();</span><br><span class="line">        ++call_ptr;</span><br><span class="line">    &#125; <span class="keyword">while</span> (call_ptr &lt; &amp;_myown_end);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    do_initcalls();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;asm-volatile-“”-”memory”-强制每次都从内存中读取数据，不优化。&quot;&gt;&lt;a href=&quot;#asm-volatile-“”-”memory”-强制每次都从内存中读取数据，不优化。&quot; class=&quot;headerlink&quot; title=&quot;a</summary>
      
    
    
    
    <category term="c" scheme="http://example.com/categories/c/"/>
    
    
  </entry>
  
  <entry>
    <title>Pi-KVM</title>
    <link href="http://example.com/2021/03/02/pikvm/api/"/>
    <id>http://example.com/2021/03/02/pikvm/api/</id>
    <published>2021-03-02T00:00:00.000Z</published>
    <updated>2021-06-08T06:52:30.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><p>This document describes the Pi-KVM API. Since the system consists of microservices, here is a common API with a common entry point provided by Nginx. The examples above use <code>curl</code> and <a href="https://github.com/vi/websocat"><code>websocat</code></a> with the <code>-k</code> parameter to disable SSL certificate verification, since the self-signed certificateis used in the default installation.</p><h2 id="Authorization-api-auth"><a href="#Authorization-api-auth" class="headerlink" title="Authorization: /api/auth"></a>Authorization: <code>/api/auth</code></h2><p>All APIs are restricted to authorization. To make requests, you either need to authorize each request individually,<br>or get a token and pass it as a cookie with each request.</p><h3 id="Single-request-auth"><a href="#Single-request-auth" class="headerlink" title="Single request auth"></a>Single request auth</h3><p>There are two options here:</p><ul><li>Using X-headers. Just pass <code>X-KVMD-User</code> and <code>X-KVMD-Passwd</code> with the request:  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -k -H X-KVMD-User:admin -H X-KVMD-Passwd:admin https:&#x2F;&#x2F;pikvm&#x2F;api&#x2F;auth&#x2F;check</span><br></pre></td></tr></table></figure></li><li>Using HTTP Basic Auth. Please note: contrary to the standard, this method DOES NOT use the <code>WWW-Authenticate</code> header.<br>HTTP Basic Auth in this implementation is intended only for compatibility with other systems, such as <a href="prometheus.md">Prometheus</a>.  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -k --user admin:admin https:&#x2F;&#x2F;pikvm&#x2F;api&#x2F;auth&#x2F;check</span><br></pre></td></tr></table></figure><h3 id="Session-based-cookie-auth"><a href="#Session-based-cookie-auth" class="headerlink" title="Session-based cookie auth"></a>Session-based cookie auth</h3></li></ul><ol><li>Authorize and get token for the user using <code>POST /api/auth/login</code>: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -k -v -X POST --data user&#x3D;admin --data passwd&#x3D;admin https:&#x2F;&#x2F;pikvm&#x2F;api&#x2F;auth&#x2F;login</span><br><span class="line">...</span><br><span class="line">&lt; Set-Cookie: auth_token&#x3D;796cb83b11de4fcb749bc1bad14a91fb06dede84672b2f847fef1e988e6900de; Path&#x3D;&#x2F;</span><br><span class="line">...</span><br></pre></td></tr></table></figure> On success the cookie <code>auth_token</code> will be received with <code>200 OK</code>. On invalid user or password you will get <code>403 Forbidden</code>.</li><li>The handle <code>GET /api/auth/check</code> can be used for check the auth status. Return of <code>200 OK</code> will signal that user is authenticated.<br>If the token or any of the single-request auth methods are missing, <code>401 Unauthorized</code> will be returned.<br>In case of incorrect credentials or token, <code>403 Forbidden</code> will be returned.</li><li>The handle <code>POST /api/auth/logout</code> can be used to invalidate session token. The response codes will be similar to the previous handle.</li></ol><h2 id="The-main-web-socket-api-ws"><a href="#The-main-web-socket-api-ws" class="headerlink" title="The main web socket: /api/ws"></a>The main web socket: <code>/api/ws</code></h2><p>Most of the data during the user’s work with pikvm is transmitted over a web socket. This includes mouse events, keyboard input, change the state of the various subsystems (such as ATX and Mass Storage Drive). Each event type will be described in the corresponding paragraph for its component. When connecting via a web socket, the client receives current states as separate events. Then, as the states change, it will receive new events.</p><p>In a normal situation, opening a socket session triggers the video streamer to start. The streamer works as long as there is at least one client connected via a web socket. After the last connection is closed and the client timeout expires, the streamer will also be terminated.</p><p>It is possible create a session that will not start the streamer and will not be counted when counting clients to stop the streamer. To do this, use the URL parameter <code>stream=0</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ websocat -k wss:&#x2F;&#x2F;pikvm&#x2F;api&#x2F;ws?stream&#x3D;0 -H X-KVMD-User:admin -H X-KVMD-Passwd:admin</span><br></pre></td></tr></table></figure><details>    <summary>Output with initial events</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;gpio_model_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;scheme&quot;</span>: &#123;<span class="string">&quot;inputs&quot;</span>: &#123;<span class="string">&quot;led1&quot;</span>: &#123;<span class="string">&quot;hw&quot;</span>: &#123;<span class="string">&quot;driver&quot;</span>: <span class="string">&quot;__gpio__&quot;</span>, <span class="string">&quot;pin&quot;</span>: <span class="number">19</span>&#125;&#125;, <span class="string">&quot;led2&quot;</span>: &#123;<span class="string">&quot;hw&quot;</span>: &#123;<span class="string">&quot;driver&quot;</span>: <span class="string">&quot;__gpio__&quot;</span>, <span class="string">&quot;pin&quot;</span>: <span class="number">16</span>&#125;&#125;&#125;, <span class="string">&quot;outputs&quot;</span>: &#123;<span class="string">&quot;button1&quot;</span>: &#123;<span class="string">&quot;switch&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;pulse&quot;</span>: &#123;<span class="string">&quot;delay&quot;</span>: <span class="number">0.1</span>, <span class="string">&quot;min_delay&quot;</span>: <span class="number">0.1</span>, <span class="string">&quot;max_delay&quot;</span>: <span class="number">0.1</span>&#125;, <span class="string">&quot;hw&quot;</span>: &#123;<span class="string">&quot;driver&quot;</span>: <span class="string">&quot;__gpio__&quot;</span>, <span class="string">&quot;pin&quot;</span>: <span class="number">26</span>&#125;&#125;, <span class="string">&quot;button2&quot;</span>: &#123;<span class="string">&quot;switch&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;pulse&quot;</span>: &#123;<span class="string">&quot;delay&quot;</span>: <span class="number">0.1</span>, <span class="string">&quot;min_delay&quot;</span>: <span class="number">0.1</span>, <span class="string">&quot;max_delay&quot;</span>: <span class="number">0.1</span>&#125;, <span class="string">&quot;hw&quot;</span>: &#123;<span class="string">&quot;driver&quot;</span>: <span class="string">&quot;__gpio__&quot;</span>, <span class="string">&quot;pin&quot;</span>: <span class="number">20</span>&#125;&#125;, <span class="string">&quot;relay1&quot;</span>: &#123;<span class="string">&quot;switch&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;pulse&quot;</span>: &#123;<span class="string">&quot;delay&quot;</span>: <span class="number">0.1</span>, <span class="string">&quot;min_delay&quot;</span>: <span class="number">0.1</span>, <span class="string">&quot;max_delay&quot;</span>: <span class="number">0.1</span>&#125;, <span class="string">&quot;hw&quot;</span>: &#123;<span class="string">&quot;driver&quot;</span>: <span class="string">&quot;relay&quot;</span>, <span class="string">&quot;pin&quot;</span>: <span class="number">0</span>&#125;&#125;, <span class="string">&quot;relay2&quot;</span>: &#123;<span class="string">&quot;switch&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;pulse&quot;</span>: &#123;<span class="string">&quot;delay&quot;</span>: <span class="number">2.0</span>, <span class="string">&quot;min_delay&quot;</span>: <span class="number">0.1</span>, <span class="string">&quot;max_delay&quot;</span>: <span class="number">5.0</span>&#125;, <span class="string">&quot;hw&quot;</span>: &#123;<span class="string">&quot;driver&quot;</span>: <span class="string">&quot;relay&quot;</span>, <span class="string">&quot;pin&quot;</span>: <span class="number">1</span>&#125;&#125;&#125;&#125;, <span class="string">&quot;view&quot;</span>: &#123;<span class="string">&quot;header&quot;</span>: &#123;<span class="string">&quot;title&quot;</span>: <span class="string">&quot;Switches&quot;</span>&#125;, <span class="string">&quot;table&quot;</span>: [[&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;label&quot;</span>, <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Generic GPIO leds&quot;</span>&#125;], <span class="literal">null</span>, [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;label&quot;</span>, <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Test 1:&quot;</span>&#125;, &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;input&quot;</span>, <span class="string">&quot;channel&quot;</span>: <span class="string">&quot;led1&quot;</span>, <span class="string">&quot;color&quot;</span>: <span class="string">&quot;green&quot;</span>&#125;, &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;output&quot;</span>, <span class="string">&quot;channel&quot;</span>: <span class="string">&quot;button1&quot;</span>, <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Click&quot;</span>&#125;], [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;label&quot;</span>, <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Test 2:&quot;</span>&#125;, &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;input&quot;</span>, <span class="string">&quot;channel&quot;</span>: <span class="string">&quot;led2&quot;</span>, <span class="string">&quot;color&quot;</span>: <span class="string">&quot;green&quot;</span>&#125;, &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;output&quot;</span>, <span class="string">&quot;channel&quot;</span>: <span class="string">&quot;button2&quot;</span>, <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Click&quot;</span>&#125;], <span class="literal">null</span>, [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;label&quot;</span>, <span class="string">&quot;text&quot;</span>: <span class="string">&quot;HID Relays /dev/hidraw0&quot;</span>&#125;], <span class="literal">null</span>, [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;label&quot;</span>, <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Relay #1:&quot;</span>&#125;, &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;output&quot;</span>, <span class="string">&quot;channel&quot;</span>: <span class="string">&quot;relay1&quot;</span>, <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Boop 0.1&quot;</span>&#125;], [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;label&quot;</span>, <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Relay #2:&quot;</span>&#125;, &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;output&quot;</span>, <span class="string">&quot;channel&quot;</span>: <span class="string">&quot;relay2&quot;</span>, <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Boop 2.0&quot;</span>&#125;]]&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;info_extras_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;vnc&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;VNC&quot;</span>, <span class="string">&quot;description&quot;</span>: <span class="string">&quot;Show VNC information&quot;</span>, <span class="string">&quot;icon&quot;</span>: <span class="string">&quot;share/svg/vnc.svg&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;vnc&quot;</span>, <span class="string">&quot;keyboard_cap&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;daemon&quot;</span>: <span class="string">&quot;kvmd-vnc&quot;</span>, <span class="string">&quot;port&quot;</span>: <span class="number">5900</span>, <span class="string">&quot;place&quot;</span>: <span class="number">20</span>, <span class="string">&quot;enabled&quot;</span>: <span class="literal">true</span>&#125;, <span class="string">&quot;ipmi&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;IPMI&quot;</span>, <span class="string">&quot;description&quot;</span>: <span class="string">&quot;Show IPMI information&quot;</span>, <span class="string">&quot;icon&quot;</span>: <span class="string">&quot;share/svg/ipmi.svg&quot;</span>, <span class="string">&quot;path&quot;</span>: <span class="string">&quot;ipmi&quot;</span>, <span class="string">&quot;keyboard_cap&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;daemon&quot;</span>: <span class="string">&quot;kvmd-ipmi&quot;</span>, <span class="string">&quot;port&quot;</span>: <span class="number">623</span>, <span class="string">&quot;place&quot;</span>: <span class="number">21</span>, <span class="string">&quot;enabled&quot;</span>: <span class="literal">true</span>&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;info_hw_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;platform&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;rpi&quot;</span>, <span class="string">&quot;base&quot;</span>: <span class="string">&quot;Virtual Raspberry Pi&quot;</span>&#125;, <span class="string">&quot;health&quot;</span>: &#123;<span class="string">&quot;temp&quot;</span>: &#123;<span class="string">&quot;cpu&quot;</span>: <span class="number">36.511</span>, <span class="string">&quot;gpu&quot;</span>: <span class="number">35.0</span>&#125;, <span class="string">&quot;throttling&quot;</span>: &#123;<span class="string">&quot;raw_flags&quot;</span>: <span class="number">0</span>, <span class="string">&quot;parsed_flags&quot;</span>: &#123;<span class="string">&quot;undervoltage&quot;</span>: &#123;<span class="string">&quot;now&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;past&quot;</span>: <span class="literal">false</span>&#125;, <span class="string">&quot;freq_capped&quot;</span>: &#123;<span class="string">&quot;now&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;past&quot;</span>: <span class="literal">false</span>&#125;, <span class="string">&quot;throttled&quot;</span>: &#123;<span class="string">&quot;now&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;past&quot;</span>: <span class="literal">false</span>&#125;&#125;&#125;&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;info_meta_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;server&quot;</span>: &#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;localhost.localdomain&quot;</span>&#125;, <span class="string">&quot;kvm&quot;</span>: &#123;&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;info_system_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;kvmd&quot;</span>: &#123;<span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.102&quot;</span>&#125;, <span class="string">&quot;streamer&quot;</span>: &#123;<span class="string">&quot;app&quot;</span>: <span class="string">&quot;ustreamer&quot;</span>, <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.25&quot;</span>, <span class="string">&quot;features&quot;</span>: &#123;<span class="string">&quot;WITH_OMX&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;WITH_GPIO&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;WITH_PTHREAD_NP&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;WITH_SETPROCTITLE&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;HAS_PDEATHSIG&quot;</span>: <span class="literal">true</span>&#125;&#125;, <span class="string">&quot;kernel&quot;</span>: &#123;<span class="string">&quot;system&quot;</span>: <span class="string">&quot;Linux&quot;</span>, <span class="string">&quot;release&quot;</span>: <span class="string">&quot;5.8.10-arch1-1&quot;</span>, <span class="string">&quot;version&quot;</span>: <span class="string">&quot;#1 SMP PREEMPT Thu, 17 Sep 2020 18:01:06 +0000&quot;</span>, <span class="string">&quot;machine&quot;</span>: <span class="string">&quot;x86_64&quot;</span>&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;wol_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;enabled&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;target&quot;</span>: &#123;<span class="string">&quot;ip&quot;</span>: <span class="string">&quot;255.255.255.255&quot;</span>, <span class="string">&quot;port&quot;</span>: <span class="number">9</span>, <span class="string">&quot;mac&quot;</span>: <span class="string">&quot;&quot;</span>&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;gpio_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;inputs&quot;</span>: &#123;<span class="string">&quot;led1&quot;</span>: &#123;<span class="string">&quot;online&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;state&quot;</span>: <span class="literal">false</span>&#125;, <span class="string">&quot;led2&quot;</span>: &#123;<span class="string">&quot;online&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;state&quot;</span>: <span class="literal">false</span>&#125;&#125;, <span class="string">&quot;outputs&quot;</span>: &#123;<span class="string">&quot;button1&quot;</span>: &#123;<span class="string">&quot;online&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;state&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;busy&quot;</span>: <span class="literal">false</span>&#125;, <span class="string">&quot;button2&quot;</span>: &#123;<span class="string">&quot;online&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;state&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;busy&quot;</span>: <span class="literal">false</span>&#125;, <span class="string">&quot;relay1&quot;</span>: &#123;<span class="string">&quot;online&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;state&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;busy&quot;</span>: <span class="literal">false</span>&#125;, <span class="string">&quot;relay2&quot;</span>: &#123;<span class="string">&quot;online&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;state&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;busy&quot;</span>: <span class="literal">false</span>&#125;&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;hid_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;online&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;keyboard&quot;</span>: &#123;<span class="string">&quot;online&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;leds&quot;</span>: &#123;<span class="string">&quot;caps&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;scroll&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;num&quot;</span>: <span class="literal">false</span>&#125;&#125;, <span class="string">&quot;mouse&quot;</span>: &#123;<span class="string">&quot;online&quot;</span>: <span class="literal">true</span>&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;atx_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;enabled&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;busy&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;leds&quot;</span>: &#123;<span class="string">&quot;power&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;hdd&quot;</span>: <span class="literal">false</span>&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;msd_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;enabled&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;online&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;busy&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;storage&quot;</span>: &#123;<span class="string">&quot;size&quot;</span>: <span class="number">234950152192</span>, <span class="string">&quot;free&quot;</span>: <span class="number">23514271744</span>, <span class="string">&quot;images&quot;</span>: &#123;&#125;, <span class="string">&quot;uploading&quot;</span>: <span class="literal">false</span>&#125;, <span class="string">&quot;drive&quot;</span>: &#123;<span class="string">&quot;image&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;connected&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;cdrom&quot;</span>: <span class="literal">true</span>&#125;, <span class="string">&quot;features&quot;</span>: &#123;<span class="string">&quot;multi&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;cdrom&quot;</span>: <span class="literal">true</span>&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;streamer_state&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;<span class="string">&quot;limits&quot;</span>: &#123;<span class="string">&quot;max_fps&quot;</span>: <span class="number">40</span>&#125;, <span class="string">&quot;params&quot;</span>: &#123;<span class="string">&quot;desired_fps&quot;</span>: <span class="number">30</span>, <span class="string">&quot;quality&quot;</span>: <span class="number">80</span>&#125;, <span class="string">&quot;snapshot&quot;</span>: &#123;<span class="string">&quot;saved&quot;</span>: <span class="literal">null</span>&#125;, <span class="string">&quot;streamer&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;features&quot;</span>: &#123;<span class="string">&quot;quality&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;resolution&quot;</span>: <span class="literal">false</span>&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;event_type&quot;</span>: <span class="string">&quot;loop&quot;</span>, <span class="string">&quot;event&quot;</span>: &#123;&#125;&#125;</span><br></pre></td></tr></table></figure></details><p>After connecting the client receives a bundle of states of all KVMD subsystems. After the batch is completed, it sends a <code>loop</code> event, which means that the websocket has entered event loop mode. Now it will send new states and respond to client’s requests.</p><p>Another type of event is <code>ping</code>, which can be sent by the client: <code>&#123;&quot;event_type&quot;: &quot;ping&quot;, &quot;event&quot;: &#123;&#125;&#125;</code>. If the server is running, it will respond with pong: <code>&#123;&quot;event_type&quot;: &quot;pong&quot;, &quot;event&quot;: &#123;&#125;&#125;</code>.</p><h2 id="System-info-api-info"><a href="#System-info-api-info" class="headerlink" title="System info: /api/info"></a>System info: <code>/api/info</code></h2><p>On <code>GET</code> this handle will return general information about the Pi-KVM device. If you specify the <code>fields</code> query parameter, only the requested category will be selected, like <code>fields=system,hw</code>. By default all categories will be displayed:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -k -H X-KVMD-User:admin -H X-KVMD-Passwd:admin http:&#x2F;&#x2F;localhost:8080&#x2F;api&#x2F;info</span><br></pre></td></tr></table></figure><details>    <summary>Example</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;ok&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;result&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;extras&quot;</span>: &#123; <span class="comment">// Installed applications; null on internal error</span></span><br><span class="line">            <span class="string">&quot;ipmi&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;daemon&quot;</span>: <span class="string">&quot;kvmd-ipmi&quot;</span>,</span><br><span class="line">                <span class="string">&quot;description&quot;</span>: <span class="string">&quot;Show IPMI information&quot;</span>,</span><br><span class="line">                <span class="string">&quot;enabled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">&quot;icon&quot;</span>: <span class="string">&quot;share/svg/ipmi.svg&quot;</span>,</span><br><span class="line">                <span class="string">&quot;keyboard_cap&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="string">&quot;name&quot;</span>: <span class="string">&quot;IPMI&quot;</span>,</span><br><span class="line">                <span class="string">&quot;path&quot;</span>: <span class="string">&quot;ipmi&quot;</span>,</span><br><span class="line">                <span class="string">&quot;place&quot;</span>: <span class="number">21</span>,</span><br><span class="line">                <span class="string">&quot;port&quot;</span>: <span class="number">623</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;vnc&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;daemon&quot;</span>: <span class="string">&quot;kvmd-vnc&quot;</span>,</span><br><span class="line">                <span class="string">&quot;description&quot;</span>: <span class="string">&quot;Show VNC information&quot;</span>,</span><br><span class="line">                <span class="string">&quot;enabled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">&quot;icon&quot;</span>: <span class="string">&quot;share/svg/vnc.svg&quot;</span>,</span><br><span class="line">                <span class="string">&quot;keyboard_cap&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="string">&quot;name&quot;</span>: <span class="string">&quot;VNC&quot;</span>,</span><br><span class="line">                <span class="string">&quot;path&quot;</span>: <span class="string">&quot;vnc&quot;</span>,</span><br><span class="line">                <span class="string">&quot;place&quot;</span>: <span class="number">20</span>,</span><br><span class="line">                <span class="string">&quot;port&quot;</span>: <span class="number">5900</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;hw&quot;</span>: &#123; <span class="comment">// Hardware info</span></span><br><span class="line">            <span class="string">&quot;health&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;temp&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;cpu&quot;</span>: <span class="number">36.511</span>, <span class="comment">// /sys/class/thermal/thermal_zone0/temp / 1000; null on error</span></span><br><span class="line">                    <span class="string">&quot;gpu&quot;</span>: <span class="number">35.0</span>    <span class="comment">// vcgencmd measure_temp; null on error</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;throttling&quot;</span>: &#123; <span class="comment">// vcgencmd get_throttled; null on error</span></span><br><span class="line">                    <span class="string">&quot;parsed_flags&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;freq_capped&quot;</span>: &#123;</span><br><span class="line">                            <span class="string">&quot;now&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                            <span class="string">&quot;past&quot;</span>: <span class="literal">false</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">&quot;throttled&quot;</span>: &#123;</span><br><span class="line">                            <span class="string">&quot;now&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                            <span class="string">&quot;past&quot;</span>: <span class="literal">false</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">&quot;undervoltage&quot;</span>: &#123;</span><br><span class="line">                            <span class="string">&quot;now&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                            <span class="string">&quot;past&quot;</span>: <span class="literal">false</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">&quot;raw_flags&quot;</span>: <span class="number">0</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;platform&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;base&quot;</span>: <span class="string">&quot;Raspberry Pi 4 Model B Rev 1.1&quot;</span>, <span class="comment">// /proc/device-tree/model; null on error</span></span><br><span class="line">                <span class="string">&quot;type&quot;</span>: <span class="string">&quot;rpi&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;meta&quot;</span>: &#123;  <span class="comment">// /etc/kvmd/meta.yaml; null on error</span></span><br><span class="line">            <span class="string">&quot;kvm&quot;</span>: &#123;&#125;,</span><br><span class="line">            <span class="string">&quot;server&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;host&quot;</span>: <span class="string">&quot;localhost.localdomain&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;system&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;kernel&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;machine&quot;</span>: <span class="string">&quot;x86_64&quot;</span>,</span><br><span class="line">                <span class="string">&quot;release&quot;</span>: <span class="string">&quot;5.8.14-arch1-1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;system&quot;</span>: <span class="string">&quot;Linux&quot;</span>,</span><br><span class="line">                <span class="string">&quot;version&quot;</span>: <span class="string">&quot;#1 SMP PREEMPT Wed, 07 Oct 2020 23:59:46 +0000&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;kvmd&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;version&quot;</span>: <span class="string">&quot;2.1&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;streamer&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;app&quot;</span>: <span class="string">&quot;ustreamer&quot;</span>,</span><br><span class="line">                <span class="string">&quot;features&quot;</span>: &#123; <span class="comment">// &#123;&#125; on error</span></span><br><span class="line">                    <span class="string">&quot;HAS_PDEATHSIG&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="string">&quot;WITH_GPIO&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="string">&quot;WITH_OMX&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="string">&quot;WITH_PTHREAD_NP&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="string">&quot;WITH_SETPROCTITLE&quot;</span>: <span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;version&quot;</span>: <span class="string">&quot;2.1&quot;</span> <span class="comment">// &quot;&quot; on error</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><p>Each category is represented by its own event in the websocket (<code>info_hw_state</code>, <code>info_system_state</code>, etc). The event content has the same format as the category content in API.</p><h2 id="System-log-api-log"><a href="#System-log-api-log" class="headerlink" title="System log: /api/log"></a>System log: <code>/api/log</code></h2><p>On <code>GET</code> this handle will display messages from all KVMD services as plain text. The <code>follow=1</code> request parameter turns the request into an infinite one and you will receive new log messages in real time. The seek parameter runs the log for the specified time in seconds. For example, <code>seek=3600</code> will show the log for the last hour. Both the <code>seek</code> and <code>follow</code> parameters can be used together.</p><h2 id="Get-ATX-state-api-atx"><a href="#Get-ATX-state-api-atx" class="headerlink" title="Get ATX state: /api/atx"></a>Get ATX state: <code>/api/atx</code></h2><p>On <code>GET</code> it will show current ATX state.</p><details>    <summary>Example</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;ok&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;result&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;busy&quot;</span>: <span class="literal">false</span>, <span class="comment">// True if ATX is busy performing an operation and does not accept commands</span></span><br><span class="line">        <span class="string">&quot;enabled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;leds&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;hdd&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;power&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="Set-ATX-PSU-state-api-atx-power"><a href="#Set-ATX-PSU-state-api-atx-power" class="headerlink" title="Set ATX PSU state: /api/atx/power"></a>Set ATX PSU state: <code>/api/atx/power</code></h2><p>On <code>POST</code> it will change ATX power supply state to desired.<br>Parameters:</p><ul><li><code>action</code> describes desired state:<ul><li><code>on</code> - turned on (do nothing in case PSU is already on);</li><li><code>off</code> - turned off (aka soft-off), emulates short-press on the power button;</li><li><code>off_hard</code> - emulates long (5+ seconds) press on the power button;</li><li><code>reset_hard</code>  emulates pressing reset button (hardware hot reset).</li></ul></li><li><code>wait</code> - boolean. Says if call should return immediately or just after finishing operation.</li></ul><h2 id="Emulate-pressing-buttons-on-computer-case-api-atx-click"><a href="#Emulate-pressing-buttons-on-computer-case-api-atx-click" class="headerlink" title="Emulate pressing buttons on computer case: /api/atx/click"></a>Emulate pressing buttons on computer case: <code>/api/atx/click</code></h2><p>On <code>POST</code> send button press events to {front-}panel header (like you pressing buttins on your computer’s case).<br>Parameters:</p><ul><li><code>button</code> specifies the desired computer case button you would like to press. Currently supported options are: <code>power</code> — for short press on power button, <code>power_long</code> — for pressing POWER button for 4+ seconds (force OFF), <code>reset</code> — to initiate cold-reset</li><li><code>wait</code> Boolean. Says if call should return immediately or just after finishing operation.</li></ul><h1 id="To-be-continued-gt"><a href="#To-be-continued-gt" class="headerlink" title="To be continued ===&gt;"></a>To be continued ===&gt;</h1><p>Unfortunately, the developer doesn’t have enough time to fully describe the API. You can find all existing APIs in the <a href="https://github.com/pikvm/kvmd/tree/master/kvmd/apps/kvmd/api">KVMD source tree</a>. We would appreciate your help with documentation.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;API&quot;&gt;&lt;a href=&quot;#API&quot; class=&quot;headerlink&quot; title=&quot;API&quot;&gt;&lt;/a&gt;API&lt;/h1&gt;&lt;p&gt;This document describes the Pi-KVM API. Since the system consists </summary>
      
    
    
    
    <category term="Pi-KVM" scheme="http://example.com/categories/Pi-KVM/"/>
    
    
  </entry>
  
</feed>
